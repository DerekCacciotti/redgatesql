diff --git a/Functions/dbo.IsNullOrEmpty.sql b/Functions/dbo.IsNullOrEmpty.sql
new file mode 100644
index 0000000..af5545f
--- /dev/null
+++ b/Functions/dbo.IsNullOrEmpty.sql
@@ -0,0 +1,28 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Function:	IsNullOrEmpty
+-- Author:		jrobohn
+-- Create date: July 20, 2012
+-- Description:	Mimics the VB/.NET function of the same name
+-- =============================================
+CREATE function [dbo].[IsNullOrEmpty]
+(-- Add the parameters for the function here
+    @VarString varchar(max)
+)
+returns bit
+as
+begin
+	-- Declare the return variable here
+	declare @ReturnValue bit
+
+	-- Add the T-SQL statements to compute the return value here
+	set @ReturnValue = case when @VarString is null or @VarString = '' then 1 else 0 end
+
+	-- Return the result of the function
+	return @ReturnValue
+
+end
+GO
diff --git a/Functions/dbo.SplitString.sql b/Functions/dbo.SplitString.sql
new file mode 100644
index 0000000..8a1473f
--- /dev/null
+++ b/Functions/dbo.SplitString.sql
@@ -0,0 +1,63 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+
+
+
+create FUNCTION [dbo].[SplitString]
+(
+  @List  varchar(max),
+  @Delim varchar(10)
+)
+RETURNS 
+@ParsedList table
+(
+  ListItem varchar(255)
+)
+AS
+/*----------------------------------------------------------------------------------------------
+' Function       : SplitString
+'
+' Description    : Split a string using the passed delimeter - returns a Table variable
+'
+' Change History :
+'
+' WHEN        WHO  WHAT
+'----------------------------------------------------------------------------------------------
+'--------------------------------------------------------------------------------------------*/
+BEGIN
+  
+  DECLARE @ListItem  varchar(255)
+  DECLARE @Pos       int
+
+  -- Ensure we have a trailing delimiter
+  IF RIGHT(@List,LEN(@Delim)) <> @Delim
+    SET @List = LTRIM(RTRIM(@List))+ @Delim
+
+  SET @Pos = CHARINDEX(@Delim, @List, 1)
+
+  IF REPLACE(@List, @Delim, '') <> ''
+  BEGIN
+
+    -- Break up the string
+    WHILE @Pos > 0
+    BEGIN
+      
+      SET @ListItem = LTRIM(RTRIM(LEFT(@List, @Pos - 1)))
+      
+      IF @ListItem <> ''
+        INSERT INTO @ParsedList (ListItem) VALUES (@ListItem)
+
+      SET @List = RIGHT(@List, LEN(@List) - @Pos - LEN(@Delim) + 1)
+      SET @Pos = CHARINDEX(@Delim, @List, 1)
+
+    END
+
+  END	
+  RETURN
+
+END
+
+
+GO
diff --git a/Functions/dbo.udfCaseFilters.sql b/Functions/dbo.udfCaseFilters.sql
new file mode 100644
index 0000000..2c353cf
--- /dev/null
+++ b/Functions/dbo.udfCaseFilters.sql
@@ -0,0 +1,128 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		Dorothy Baum
+-- Create date: June 21, 2010
+-- Description:	table of hvcasefk that fit the filter passed
+-- =============================================
+CREATE function [dbo].[udfCaseFilters]
+(-- Add the parameters for the function here
+    @positiveClause varchar(200)    = null,
+    @negativeClause	varchar(200)    = null,
+    @ProgramFKs		varchar(200)
+) 
+returns
+@tblCases table
+(
+	HVCaseFK int
+) 
+as
+begin
+	declare @HVCasefk int
+	---- set up the variables for the filter values
+	declare @pospair1 as varchar(100) = '',
+            @pospair2 as varchar(100) = '',
+            @pospair3 as varchar(100) = '',
+            @negpair1 as varchar(100) = '',
+            @negpair2 as varchar(100) = '',
+            @negpair3 as varchar(100) = '',
+            @rownum   as int,
+            @listitem as varchar(100)
+	--positive clause
+	if @positiveClause is not null and @positiveClause != ''
+		begin
+			declare pos_cursor cursor for
+			select *
+				  ,rownum = row_number() over (order by listItem)
+				from splitstring(@positiveClause,',')
+
+			open pos_cursor;
+			fetch next from pos_cursor into @listitem,@rownum
+
+			if @rownum = 1
+				set @pospair1 = @listitem;
+
+			while @@Fetch_status = 0
+			begin
+
+				if @rownum = 2
+					set @pospair2 = @listitem;
+
+				if @rownum = 3
+					set @pospair3 = @listitem;
+
+				fetch next from pos_cursor into @listitem,@rownum
+			end
+			close pos_cursor
+			deallocate pos_cursor
+		end
+	---negative cursor
+	if @negativeClause is not null and @negativeClause != ''
+		begin
+			declare neg_cursor cursor for
+			select *
+				  ,rownum = row_number() over (order by listItem)
+				from splitstring(@negativeClause,',')
+
+			open neg_cursor;
+			fetch next from neg_cursor into @listitem,@rownum
+
+			if @rownum = 1
+				set @negpair1 = @listitem;
+
+			while @@Fetch_status = 0
+			begin
+
+				if @rownum = 2
+					set @negpair2 = @listitem;
+
+				if @rownum = 3
+					set @negpair3 = @listitem;
+
+				fetch next from neg_cursor into @listitem,@rownum
+			end
+			close neg_cursor
+			deallocate neg_cursor
+		end
+	---
+	if (@positiveClause is null or @positiveClause = '') and (@negativeClause is null or @negativeClause = '') 
+		begin
+			insert into @tblCases
+				select HVCasePK 
+				from CaseProgram cp
+				inner join HVCase h on h.HVCasePK = cp.HVCaseFK
+				inner join dbo.SplitString(@ProgramFKs,',') on cp.programfk = listitem
+		end
+	else
+		begin
+			insert into @tblCases
+				select distinct HVCasePK
+					from
+						(select HVCasePK
+							   ,cp.ProgramFK
+							   ,cast(isnull(CaseFilterNameFK,listCaseFilterNamePK) as varchar(10))+';'
+								+case 
+									when cfn.FilterType = 1
+										then case when cf.CaseFilterNameChoice=1 then 'Yes' else 'No' end
+									when cfn.FilterType = 2
+										then (select cfno.FilterOption from listCaseFilterNameOption cfno where listCaseFilterNameOptionPK=cf.CaseFilterNameOptionFK)
+									when cfn.FilterType = 3
+										then CaseFilterValue
+								end as answers
+							from CaseProgram cp
+							inner join HVCase on cp.HVCaseFK = HVCasePK
+							inner join listCaseFilterName cfn on cfn.ProgramFK = cp.ProgramFK
+							left join CaseFilter cf on HVCasePK = cf.HVCaseFK and CaseFilterNameFK = cfn.listCaseFilterNamePK
+							inner join dbo.SplitString(@ProgramFKs,',') on cp.programfk = listitem) a
+							-- where @programFKS like ('%,'+cast(CaseProgram.ProgramFK as varchar(100))+',%')) a
+					where answers in (@pospair1, @pospair2, @pospair3)
+						-- (case when @pospair1 is not null then 
+						 and answers not in (isnull(@negpair1,answers), isnull(@negpair2,answers), isnull(@negpair3,answers))
+		end
+
+	return
+	
+end
+GO
diff --git a/Functions/dbo.udfHVLevel.sql b/Functions/dbo.udfHVLevel.sql
new file mode 100644
index 0000000..0d13fae
--- /dev/null
+++ b/Functions/dbo.udfHVLevel.sql
@@ -0,0 +1,64 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		<Devinder Singh Khalsa>
+-- Create date: <April 23, 2013>
+-- Description:	<udfHVLevel - returns level info>
+-- =============================================
+create function [dbo].[udfHVLevel]
+(-- Add the parameters for the function here
+ @programfk varchar(max)    = null,
+ @QuarterEndDate     datetime
+ )
+returns
+@tHVLevel table(
+hvlevelpk int,
+	hvcasefk int,
+	programfk int,
+	levelassigndate datetime,
+	levelname varchar(50),
+	caseweight numeric(4,2)
+)
+as
+begin
+
+	if @programfk is null
+	begin
+		select @programfk =
+			   substring((select ','+LTRIM(RTRIM(STR(HVProgramPK)))
+							  from HVProgram
+							  for xml path ('')),2,8000)
+	end
+
+	set @programfk = REPLACE(@programfk,'"','')
+
+	insert
+		into @THVLevel	
+		
+			select hvlevel.hvlevelpk
+			 ,hvlevel.hvcasefk
+			 ,hvlevel.programfk
+			 ,hvlevel.levelassigndate
+			 ,levelname
+			 ,caseweight							 
+		   from hvlevel
+		   inner join dbo.SplitString(@programfk,',') on hvlevel.programfk = listitem
+		   inner join codelevel on codelevelpk = levelfk
+		   inner join (select hvcasefk
+							 ,programfk
+							 ,max(levelassigndate) as levelassigndate
+						   from hvlevel h2
+						   inner join dbo.SplitString(@programfk,',') on h2.programfk = listitem
+						   where levelassigndate <= @QuarterEndDate
+						   group by hvcasefk ,programfk)		
+		
+		e2 on e2.hvcasefk = hvlevel.hvcasefk and e2.programfk = hvlevel.programfk and e2.levelassigndate = hvlevel.levelassigndate
+		
+		
+
+	return
+
+end
+GO
diff --git a/Functions/dbo.udfHVRecords.sql b/Functions/dbo.udfHVRecords.sql
new file mode 100644
index 0000000..95a8e50
--- /dev/null
+++ b/Functions/dbo.udfHVRecords.sql
@@ -0,0 +1,74 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		<Jay Robohn>
+-- Create date: <Jan 4, 2012>
+-- Description:	<udfHVRecords - helper function for HV Achievement Rate reports>
+-- =============================================
+CREATE function [dbo].[udfHVRecords]
+(-- Add the parameters for the function here
+ @programfk varchar(max)    = null,
+ @sdate     datetime,
+ @edate     datetime
+ )
+returns
+@tHVRecords table(
+	casefk int,
+	startdate datetime,
+	enddate datetime,
+	levelname varchar(50),
+	programfk int,
+	workerfk int,
+	reqvisitcalc float,
+	hvlevelpk int,
+	reqvisit float,
+	hvlogpk int,
+	visittype varchar(4),
+	visitlengthminute int,
+	visitlengthhour int,
+	VisitStartTime datetime,
+	pc1id varchar(13),
+	dischargedate datetime
+)
+as
+begin
+
+	if @programfk is null
+	begin
+		select @programfk =
+			   substring((select ','+LTRIM(RTRIM(STR(HVProgramPK)))
+							  from HVProgram
+							  for xml path ('')),2,8000)
+	end
+
+	set @programfk = REPLACE(@programfk,'"','')
+
+	declare @startdate datetime
+	declare @enddate datetime
+	
+	--set @startdate = convert(datetime,convert(varchar(12), @sdate) + '00:00:00.000') --Chris Papas removed 01/29/2013 
+	--set @enddate = convert(datetime,convert(varchar(12), @edate) + '23:59:59.999')
+
+	--match the hvlog records to this
+	insert
+		into @THVRecords
+		select tlp.*
+			  ,HVLogPK
+			  ,VisitType
+			  ,VisitLengthMinute
+			  ,VisitLengthHour
+			  ,VisitStartTime
+			  ,cp.PC1id
+			  ,cp.DischargeDate
+			from [dbo].[udfLevelPieces](@programfk,@sdate,@edate) tlp
+				left outer join hvlog on tlp.casefk = hvlog.hvcasefk
+							   and cast(VisitStartTime AS DATE) between tlp.StartDate and tlp.EndDate
+				inner join CaseProgram cp on cp.HVCaseFK = tlp.Casefk
+						  and cp.ProgramFK = tlp.programfk
+
+	return
+
+end
+GO
diff --git a/Functions/dbo.udfLevelPieces.sql b/Functions/dbo.udfLevelPieces.sql
new file mode 100644
index 0000000..29d127b
--- /dev/null
+++ b/Functions/dbo.udfLevelPieces.sql
@@ -0,0 +1,98 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		<Jay Robohn>
+-- Create date: <Jan 4, 2012>
+-- Description:	<udfLevelPieces - returns distinct level periods for each case in cohort, used in many other sprocs>
+-- =============================================
+CREATE function [dbo].[udfLevelPieces]
+(-- Add the parameters for the function here
+ @programfk varchar(max)    = null,
+ @sdate     datetime,
+ @edate     datetime
+ )
+returns
+@tLevelPieces table(
+	casefk int,
+	startdate datetime,
+	enddate datetime,
+	levelname varchar(30),
+	programfk varchar(max),
+	workerfk int,
+	reqvisitcalc float,
+	hvlevelpk int,
+	reqvisit float
+)
+as
+begin
+
+	if @programfk is null
+	begin
+		select @programfk =
+			   substring((select ','+LTRIM(RTRIM(STR(HVProgramPK)))
+							  from HVProgram
+							  for xml path ('')),2,8000)
+	end
+
+	set @programfk = REPLACE(@programfk,'"','')
+
+	--get the date ranges per worker, per level
+	insert
+		into @tLevelPieces
+		select *
+			  , (CAST(datediff(day,beginning,ending)as decimal(10,3)) + 1)/7 * maximumvisit --CP 4/04/2014 needed CAST to create decimal because 01/01 - 03/31 was coming up as 90 days / 7 = .96 not 1.02, where level 4's were showing up without any required visits
+			from (
+				  select wad.hvcasefk
+						,case
+							 when hld.StartLevelDate > StartAssignmentDate and EndlevelDate > @sdate and EndLevelDate < @edate and hld.StartLevelDate < @sdate then
+								 @sdate --Chris Papas 07/26/2011 --below line did not cover all the bases.
+							 when hld.StartLevelDate > StartAssignmentDate and EndlevelDate > @sdate and EndLevelDate < @edate then
+								 hld.StartLevelDate --Chris Papas, beginning date CASE was too simple and dates were wrong, this may not cover all the bases, but seems to work now.
+							 when hld.StartLevelDate < StartAssignmentDate and StartAssignmentDate > @sdate then
+								 StartAssignmentDate
+							 when hld.StartLevelDate < @sdate then
+								 @sdate
+							 when StartAssignmentDate > hld.StartLevelDate then
+								 StartAssignmentDate
+							 else
+								 hld.StartLevelDate
+						 end as beginning
+						,case
+							 when EndAssignmentDate < @edate and EndAssignmentDate < hld.EndLevelDate then
+								cast(EndAssignmentDate as datetime) + cast('23:59:59' as datetime)
+							 when hld.EndLevelDate > @edate then
+								 cast(@edate as datetime) + cast('23:59:59' as datetime)
+							 when hld.EndLevelDate > EndAssignmentDate then
+								 cast(EndAssignmentDate as datetime) + cast('23:59:59' as datetime)
+							 when hld.EndLevelDate is null then
+								 case
+									 when EndAssignmentDate is null then
+										 cast(@edate as datetime) + cast('23:59:59' as datetime)
+									 when EndAssignmentDate > @edate then
+										 cast(@edate as datetime) + cast('23:59:59' as datetime)
+									 else
+										 cast(EndAssignmentDate as datetime) + cast('23:59:59' as datetime)
+								 end
+							 else
+								 cast(hld.EndLevelDate as datetime) + cast('23:59:59' as datetime)
+						 end as ending
+						,levelname
+						,wad.programfk
+						,workerfk
+						,maximumvisit
+						,hld.hvlevelpk
+					  from workerassignmentdetail wad
+						  inner join hvleveldetail hld on wad.hvcasefk = hld.hvcasefk
+						  inner join dbo.SplitString(@programfk,',') on wad.programfk = listitem
+					  where isnull(hld.endLevelDate,@edate) >= wad.StartAssignmentDate
+						   and hld.StartLevelDate <= @edate
+						   and wad.StartAssignmentDate <= @edate --get assignments in report range
+						   and isnull(wad.EndAssignmentDate,@edate) >= @sdate
+						   and isnull(hld.endlevelDate,@EDATE) >= @sdate
+				 ) a
+			where beginning <= ending
+	return
+end
+GO
diff --git a/RedGateDatabaseInfo.xml b/RedGateDatabaseInfo.xml
new file mode 100644
index 0000000..18222ec
--- /dev/null
+++ b/RedGateDatabaseInfo.xml
@@ -0,0 +1,86 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<DatabaseInformation Version="2">
+  <ScriptFileEncoding>UTF8</ScriptFileEncoding>
+  <DefaultCollation>SQL_Latin1_General_CP1_CI_AS</DefaultCollation>
+  <DefaultSchema>dbo</DefaultSchema>
+  <DefaultUser>dbo</DefaultUser>
+  <DefaultFilegroup>PRIMARY</DefaultFilegroup>
+  <DatabaseVersion>12</DatabaseVersion>
+  <IsAzure>False</IsAzure>
+  <MaxDataFileSize>10485760</MaxDataFileSize>
+  <WriteToFileOptions>
+    <Prefixes>
+      <None>
+      </None>
+      <Table>Tables</Table>
+      <StoredProcedure>Stored Procedures</StoredProcedure>
+      <View>Views</View>
+      <Default>Defaults</Default>
+      <FullTextCatalog>Storage\Full Text Catalogs</FullTextCatalog>
+      <Function>Functions</Function>
+      <Role>Security\Roles</Role>
+      <Rule>Rules</Rule>
+      <User>Security\Users</User>
+      <UserDefinedType>Types\User-defined Data Types</UserDefinedType>
+      <Trigger>
+      </Trigger>
+      <DdlTrigger>Database Triggers</DdlTrigger>
+      <Assembly>Assemblies</Assembly>
+      <Synonym>Synonyms</Synonym>
+      <XmlSchemaCollection>Types\XML Schema Collections</XmlSchemaCollection>
+      <MessageType>Service Broker\Message Types</MessageType>
+      <Contract>Service Broker\Contracts</Contract>
+      <Queue>Service Broker\Queues</Queue>
+      <Service>Service Broker\Services</Service>
+      <Route>Service Broker\Routes</Route>
+      <EventNotification>Service Broker\Event Notifications</EventNotification>
+      <PartitionScheme>Storage\Partition Schemes</PartitionScheme>
+      <PartitionFunction>Storage\Partition Functions</PartitionFunction>
+      <Field>
+      </Field>
+      <Index>
+      </Index>
+      <Schema>Security\Schemas</Schema>
+      <ServiceBinding>Service Broker\Remote Service Bindings</ServiceBinding>
+      <Certificate>Security\Certificates</Certificate>
+      <SymmetricKey>Security\Symmetric Keys</SymmetricKey>
+      <AsymmetricKey>Security\Asymmetric Keys</AsymmetricKey>
+      <CheckConstraint>
+      </CheckConstraint>
+      <FullTextStoplist>Storage\Full Text Stoplists</FullTextStoplist>
+      <ExtendedProperty>Extended Properties</ExtendedProperty>
+      <Data>Data</Data>
+      <Sequence>Sequences</Sequence>
+      <SearchPropertyList>Search Property Lists</SearchPropertyList>
+      <SecurityPolicy>Security Policies</SecurityPolicy>
+    </Prefixes>
+    <DataWriteAllFilesInOneDirectory>True</DataWriteAllFilesInOneDirectory>
+  </WriteToFileOptions>
+  <DataFileSet>
+    <Count>24</Count>
+    <DataFile>dbo.codeApp_Data.sql</DataFile>
+    <DataFile>dbo.codeCaseProgress_Data.sql</DataFile>
+    <DataFile>dbo.codeCounty_Data.sql</DataFile>
+    <DataFile>dbo.codeDischarge_Data.sql</DataFile>
+    <DataFile>dbo.codeDueByDates_Data.sql</DataFile>
+    <DataFile>dbo.codeERHospitalReasons_Data.sql</DataFile>
+    <DataFile>dbo.codeForm_Data.sql</DataFile>
+    <DataFile>dbo.codeInterval_Data.sql</DataFile>
+    <DataFile>dbo.codeLevel_Data.sql</DataFile>
+    <DataFile>dbo.codeMedicalItem_Data.sql</DataFile>
+    <DataFile>dbo.codeServiceReferral_Data.sql</DataFile>
+    <DataFile>dbo.codeTCMedical_Data.sql</DataFile>
+    <DataFile>dbo.codeSAT_Data.sql</DataFile>
+    <DataFile>dbo.codeTraining_Data.sql</DataFile>
+    <DataFile>dbo.codeReportCatalog_Data.sql</DataFile>
+    <DataFile>dbo.scoreASQ_Data.sql</DataFile>
+    <DataFile>dbo.scoreASQSE_Data.sql</DataFile>
+    <DataFile>dbo.codeTopic_Data.sql</DataFile>
+    <DataFile>dbo.codeSubTopicDetail_Data.sql</DataFile>
+    <DataFile>dbo.codeAuditC_Data.sql</DataFile>
+    <DataFile>dbo.codePerformanceTargetTitles_Data.sql</DataFile>
+    <DataFile>dbo.codePerformanceTargetTitle_Data.sql</DataFile>
+    <DataFile>dbo.codeExpectedEvents_Data.sql</DataFile>
+    <DataFile>dbo.codeRegion_Data.sql</DataFile>
+  </DataFileSet>
+</DatabaseInformation>
\ No newline at end of file
diff --git a/Stored Procedures/dbo.pr_Disable_Triggers.sql b/Stored Procedures/dbo.pr_Disable_Triggers.sql
new file mode 100644
index 0000000..b27d17e
--- /dev/null
+++ b/Stored Procedures/dbo.pr_Disable_Triggers.sql
@@ -0,0 +1,56 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+
+-- pr_Disable_Triggers_v2 0
+
+CREATE procedure [dbo].[pr_Disable_Triggers] @disable bit = 1, @tableNames nvarchar(max)
+as
+	declare @sql         varchar(500),
+            @tableName   varchar(128),
+            @tableSchema varchar(128)
+
+	if @tableNames='' or @tableNames is null
+		-- List of all tables
+		begin
+			declare triggerCursor cursor
+			for
+			select t.TABLE_NAME as TableName
+				  ,t.TABLE_SCHEMA as TableSchema
+				from INFORMATION_SCHEMA.TABLES t
+				where TABLE_TYPE<>'VIEW'
+				order by t.TABLE_NAME
+						,t.TABLE_SCHEMA
+		end
+	else
+		-- only the passed table names
+		begin
+			declare triggerCursor cursor
+			for
+			select t.TABLE_NAME as TableName
+				  ,t.TABLE_SCHEMA as TableSchema
+				from INFORMATION_SCHEMA.TABLES t
+				inner join dbo.SplitString(@tableNames,',') on t.TABLE_NAME = listitem
+				where TABLE_TYPE<>'VIEW'
+				order by t.TABLE_NAME
+						,t.TABLE_SCHEMA
+		end
+		
+	open triggerCursor
+
+	fetch next from triggerCursor into @tableName,@tableSchema
+	while (@@FETCH_STATUS = 0)
+	begin
+		if @disable = 1
+			set @sql = 'ALTER TABLE '+@tableSchema+'.['+@tableName+'] DISABLE TRIGGER ALL'
+		else
+			set @sql = 'ALTER TABLE '+@tableSchema+'.['+@tableName+'] ENABLE TRIGGER ALL'
+		print 'Executing Statement - '+@sql
+		execute (@sql)
+		fetch next from triggerCursor into @tableName,@tableSchema
+	end
+
+	close triggerCursor
+	deallocate triggerCursor
+GO
diff --git a/Stored Procedures/dbo.rspActiveEnrolledCaseList.sql b/Stored Procedures/dbo.rspActiveEnrolledCaseList.sql
new file mode 100644
index 0000000..22b648a
--- /dev/null
+++ b/Stored Procedures/dbo.rspActiveEnrolledCaseList.sql
@@ -0,0 +1,145 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		Dar Chen
+-- Create date: 06/11/2012
+-- Description:	Active Enrolled Case List
+-- mod 2013Jun24 jrobohn reformat and add case filter criteria
+-- =============================================
+CREATE procedure [dbo].[rspActiveEnrolledCaseList]-- Add the parameters for the stored procedure here
+    @ProgramFK           varchar(max)    = null,
+    @StartDt             datetime,
+    @EndDt               datetime,
+	@WorkerFK            int = NULL,
+    @SiteFK              int = 0,
+    @CaseFiltersPositive varchar(200)
+as
+
+	--DECLARE @StartDt DATE = '01/01/2014'
+	--DECLARE @EndDt DATE = '05/31/2015'
+	--DECLARE @ProgramFK VARCHAR(MAX) = '1'
+	--DECLARE @SiteFK INT = 0
+	--DECLARE @CaseFiltersPositive varchar(200) = ''
+	--DECLARE @WorkerFK int = NULL
+    
+	if @ProgramFK is null
+	begin
+		select @ProgramFK = substring((select ','+ltrim(rtrim(str(HVProgramPK)))
+										   from HVProgram
+										   for xml path ('')),2,8000)
+	end
+	set @ProgramFK = replace(@ProgramFK,'"','')
+	set @SiteFK = case when dbo.IsNullOrEmpty(@SiteFK) = 1 then 0 else @SiteFK end;
+	set @CaseFiltersPositive = case	when @CaseFiltersPositive = '' then null
+									else @CaseFiltersPositive
+							   end;
+
+	select rtrim(PC.PCLastName)+cast(PC.PCPK as varchar(10)) [key01]
+		  ,a.PC1ID
+		  ,rtrim(PC.PCLastName)+', '+rtrim(PC.PCFirstName) [Name]
+		  ,convert(varchar(12),PC.PCDOB,101) [DOB]
+		  ,PC.SSNo [SSNo]
+		  ,convert(varchar(12),Kempe.KempeDate,101) [KemptDate]
+		  ,convert(varchar(12),HVScreen.ScreenDate,101) [ScreenDate]
+		  ,rtrim(Worker.LastName)+', '+rtrim(Worker.FirstName) [FSW]
+		  ,convert(varchar(12),Intake.IntakeDate,101) [IntakeDate]
+		  ,CAST(DATEDIFF(year,PC.PCDOB,Intake.IntakeDate) as varchar(10))+' y' [AgeAtIntake]
+		  ,case when a.DischargeDate is null then '' else convert(varchar(12),a.DischargeDate,101) end [CloseDate]
+		  ,case when a.DischargeDate is null then 'Case Open' else rtrim(codeDischarge.DischargeReason) end [CloseReason]
+
+		  --, CAST(DATEDIFF(month, Intake.IntakeDate, @EndDt) AS VARCHAR(10)) + ' m' [LengthInProgram]
+
+		  ,case when a.DischargeDate is null or a.DischargeDate > @EndDt
+				   then CAST(DATEDIFF(month,Intake.IntakeDate,@EndDt) as varchar(10))+' m' else
+				   CAST(DATEDIFF(month,Intake.IntakeDate,a.DischargeDate) as varchar(10))+' m' end [LengthInProgram]
+
+		  ,case when ca.TANFServices = 1 then 'Yes' else 'No' end [TANF]
+		  ,case when ca.FormType = 'IN' then 'Intake' 
+					else (select top 1 codeApp.AppCodeText
+								from codeApp
+								where ca.FormInterval = codeApp.AppCode
+										and
+										codeApp.AppCodeUsedWhere like '%FU%'
+										and codeApp.AppCodeGroup = 'TCAge'
+							) end [TANFServiceAt]
+		  ,convert(varchar(12),ca.FormDate,101) [Eligible]
+		  ,(select count(*)
+				from HVLog
+				where VisitType <> '0001'
+					 and cast(VisitStartTime as date) <= @EndDt
+					 and cast(VisitStartTime as date) >= b.IntakeDate
+					 and HVCaseFK = b.HVCasePK
+		   ) [HomeVisits]
+		  -- folling fields are used for validating (to be removed)
+		  ,(select top 1 ca.CommonAttributesPK
+				from CommonAttributes ca
+				where ca.HVCaseFK = b.HVCasePK
+					 and ca.FormDate <= @EndDt
+					 and ca.FormType in ('FU','IN')
+				order by ca.FormDate desc
+		   ) [CommonAttributesPKID]
+		  ,ca.FormDate
+		  ,ca.TANFServices
+		  ,ca.FormType
+		  ,ca.FormInterval
+		  ,rtrim(T.TCLastName)+', '+rtrim(T.TCFirstName) [tcName]
+		  ,convert(varchar(12),T.TCDOB,101) [tcDOB]
+		  ,case when ls.SiteCode is null then '' else ls.SiteCode end SiteCode
+
+		from CaseProgram as a
+			join HVCase as b on a.HVCaseFK = b.HVCasePK
+			inner join dbo.SplitString(@ProgramFK,',') on a.ProgramFK = listitem
+			inner join dbo.udfCaseFilters(@CaseFiltersPositive,'', @ProgramFK) cf on cf.HVCaseFK = a.HVCaseFK
+			-- pc1 name, dob, and SS# = b.PC1FK <-> PC.PCPK -> PC.PCLastName + PC.PCFirstName, PC.PCDOB, PC.SSNo
+			join PC on PC.PCPK = b.PC1FK
+			-- screen date = a.HVCaseFK <-> Kempe.HVCaseFK -> Kempe.KempeDate
+			join Kempe on Kempe.HVCaseFK = b.HVCasePK
+			--
+			-- kempe date = a.HVCaseFK <-> HVScreen.HVCaseFK -> HVScreen.ScreenDate
+			join HVScreen on HVScreen.HVCaseFK = b.HVCasePK
+			--
+			-- FSW & site = a.CurrentFSWFK <-> Worker.WorkerPK -> Worker.LastName + Worker.FirstName ?? site ??
+			left outer join Worker on Worker.WorkerPK = a.CurrentFSWFK and  Worker.WorkerPK = isnull(@WorkerFK, Worker.WorkerPK)
+			join Workerprogram as wp on wp.WorkerFK = Worker.WorkerPK and wp.ProgramFK = @ProgramFK
+			left outer join listSite as ls on wp.SiteFK = ls.listSitePK
+			--
+			-- intake date & age at intake = a.HVCaseFK <-> Intake.HVCaseFK -> Intake.IntakeDate -> (PCDOB - IntakeDate)
+			join Intake on Intake.HVCaseFK = b.HVCasePK
+			--
+			-- closed date & close reason = a.DischargeDate, a.DischargeReason <-> codeDischarge.DischargeCode 
+			--                              -> codeDischarge.DischargeReason
+			left outer join codeDischarge on a.DischargeReason = codeDischarge.DischargeCode
+			--
+			-- length in program = @EndDt - IntakeDate
+
+			-- TANFservices, &  eligible = CA (CommonAttributes) : a.HVCaseFK <-> CA.HVCaseFK and CA.FormType IN ('FU', 'IN')
+			-- , CA.FormDate <= @EndDt and CA.TANFServices = 1 
+			-- if CA.FormType = 'IN' then FormInterval = 'In Take' else CA.FormInterval <-> codeApp.AppCode and
+			-- codeApp.AppCodeUsedWhere LIKE '%FU%' and AppCodeGroup = 'TCAge' -> codeApp.AppCodeText
+			-- CA.FormDate = Eligible date
+			-- CA.TANFServices = TANF
+			-- ON ca.HVCaseFK = b.HVCasePK AND ca.FormDate <= @EndDt AND ca.FormType IN ('FU', 'IN')
+			left outer join CommonAttributes ca
+						   on ca.CommonAttributesPK = (select top 1 CommonAttributesPK
+														   from CommonAttributes
+														   where HVCaseFK = b.HVCasePK
+																and FormDate <= @EndDt
+																and FormType in ('FU','IN')
+														   order by FormDate desc)
+
+			-- # of actual home visits since intake = a.HVCaseFK <-> HVLog.HVCaseFK, ProgramFK, 
+			-- VisitType <> '0001', VisitStartTime < @EndDt and VisitStartTime >= b.IntakeDate
+
+			left outer join TCID T on T.HVCaseFK = b.HVCasePK and T.TCDOD is null
+
+		where b.IntakeDate <= @EndDt
+			 and (a.DischargeDate is null
+			 or a.DischargeDate > @StartDt)
+			 --AND a.ProgramFK = @ProgramFK
+			 and (case when @SiteFK = 0 then 1 when wp.SiteFK = @SiteFK then 1 else 0 end = 1)
+			 --and  Worker.WorkerPK = isnull(@WorkerFK, Worker.WorkerPK)
+		--AND (@SiteFK = -1 OR (ISNULL(wp.SiteFK, -1) = @SiteFK))
+		order by [key01]
+GO
diff --git a/Stored Procedures/dbo.rspAggregateCounts.sql b/Stored Procedures/dbo.rspAggregateCounts.sql
new file mode 100644
index 0000000..514b549
--- /dev/null
+++ b/Stored Procedures/dbo.rspAggregateCounts.sql
@@ -0,0 +1,909 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		jrobohn
+-- Create date: <June 17, 2014>
+-- Description:	<Aggregate Counts report aka Joy Count aka the OCFS Counts>
+-- rspDataReport 22, '03/01/2013', '05/31/2013'		
+-- exec [rspAggregateCounts] ',8,','10/01/2013' , '12/31/2013'
+-- exec [rspAggregateCounts] ',16,','09/01/2013' , '5/31/2014'
+-- exec [rspAggregateCounts] '1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39','09/01/2013' , '5/31/2014'
+-- =============================================
+CREATE procedure [dbo].[rspAggregateCounts]
+(
+    @ProgramFKs				varchar(max)    = null,
+    @StartDate				datetime,
+    @EndDate				DATETIME 
+)
+as
+begin
+
+	/* 
+		all screens used in this report
+	*/  
+	with cteAllScreens
+	as
+		(select HVScreenPK, ScreenDate, ScreenResult 
+		  from HVScreen s
+		  inner join dbo.SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where ScreenDate <= @EndDate 
+		)
+	,	  
+	/*
+		count of screens completed since beginning of program
+	*/  
+	cteScreensCompletedSinceBeginning
+	as	
+		(select count(HVScreenPK) as countOfScreensCompletedSinceBeginning
+		  from cteAllScreens
+		)
+	,
+	/* 
+		count of screens completed in reporting period
+	*/  
+	cteScreensCompletedInPeriod
+	as
+		(select count(HVScreenPK) as countOfScreensCompletedInPeriod
+		  from cteAllScreens
+		  where ScreenDate between @StartDate and @EndDate 
+		)
+	,
+
+	/* ---------------------------------------------- */
+
+	/* 
+		all preintake home visit counts in this report
+	*/  
+	cteAllPreintakeHomeVisit
+	as
+		(select a.PreintakePK, PIDate, ISNULL(PIVisitMade,0) VisitMode, 
+		CASE WHEN (CaseStatus = '02' AND ISNULL(PIVisitMade, 0) > 0) THEN 1 ELSE 0 END Enrolled
+		  from Preintake AS a
+		  inner join dbo.SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where PIDate <= @EndDate 
+		)
+	,	  
+	/*
+		count of preintake home visit since beginning of program
+	*/  
+	ctePreintakeHomeVisitSinceBeginning
+	as	
+		(select (SUM(VisitMode) - SUM(Enrolled)) as countOfPreintakeHomeVisitSinceBeginning
+		  from cteAllPreintakeHomeVisit
+		)
+	,
+	/* 
+		count of preintake home visit in reporting period
+	*/  
+	ctePreintakeHomeVisitInPeriod
+	as
+		(select (SUM(VisitMode) - SUM(Enrolled)) countOfPreintakeHomeVisitInPeriod
+		  from cteAllPreintakeHomeVisit
+		  where PIDate between @StartDate and @EndDate 
+		)
+	,
+
+	/* ---------------------------------------------- */
+
+
+	/* 
+		count of positive screens since beginning of program
+	*/  
+	ctePositiveScreensSinceBeginning
+	as
+		(select count(HVScreenPK) as countOfPositiveScreensSinceBeginning
+		  from cteAllScreens
+		  where ScreenResult = '1'
+		)
+	,
+	/* 
+		count of negative screens since beginning of program
+	*/  
+	cteNegativeScreensSinceBeginning
+	as
+		(select count(HVScreenPK) as countOfNegativeScreensSinceBeginning
+		  from cteAllScreens
+		  where ScreenResult = '0'
+		)
+	,
+	/* 
+		count of positive screens completed in reporting period
+	*/  
+	ctePositiveScreensInPeriod
+	as
+		(select count(HVScreenPK) as countOfPositiveScreensInPeriod
+		  from cteAllScreens
+		  where ScreenDate between @StartDate and @EndDate and
+				ScreenResult = '1'
+		)
+	,
+	/* 
+		count of negative screens completed in reporting period
+	*/  
+	cteNegativeScreensInPeriod
+	as
+		(select count(HVScreenPK) as countOfNegativeScreensInPeriod
+	  		  from cteAllScreens
+		  where ScreenDate between @StartDate and @EndDate and
+				ScreenResult = '0'
+		)
+	,
+	/* 
+		count of Kempes completed since beginning of program
+	*/  
+	cteAllKempes
+	as	
+		(select KempePK, KempeDate, KempeResult, FOBPresent
+		  from Kempe k
+		  inner join dbo.SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where KempeDate <= @EndDate 
+		)
+	,
+	/* 
+		count of Kempes completed since beginning of program
+	*/  
+	cteKempesCompletedSinceBeginning
+	as	
+		(select count(KempePK) as countOfKempesCompletedSinceBeginning
+		  from cteAllKempes
+		)
+	,
+	/* 
+		count of Kempes completed in reporting period
+	*/  
+	cteKempesCompletedInPeriod
+	as
+		(select count(KempePK) as countOfKempesCompletedInPeriod
+		  from cteAllKempes
+		  where KempeDate between @StartDate and @EndDate 
+		)
+	,
+	/* 
+		count of positive Kempes since beginning of program
+	*/  
+	ctePositiveKempesSinceBeginning
+	as
+		(select count(KempePK) as countOfPositiveKempesSinceBeginning
+		  from cteAllKempes
+		  where KempeResult = 1
+		)
+	,
+	/* 
+		count of negative Kempes since beginning of program
+	*/  
+	cteNegativeKempesSinceBeginning
+	as
+		(select count(KempePK) as countOfNegativeKempesSinceBeginning
+		  from cteAllKempes
+		  where KempeResult = 0
+		)
+	,
+
+	/* 
+		count of FOB present Kempes since beginning of program
+	*/  
+	cteFOBPresentKempesSinceBeginning
+	as
+		(select count(KempePK) as countOfFOBPresentKempesSinceBeginning
+		  from cteAllKempes
+		  where FOBPresent = 1
+		)
+	,
+
+
+	/* 
+		count of positive Kempes completed in reporting period
+	*/  
+	ctePositiveKempesInPeriod
+	as
+		(select count(KempePK) as countOfPositiveKempesInPeriod
+		  from cteAllKempes
+		  where KempeDate between @StartDate and @EndDate and
+				KempeResult = 1
+		)
+	,
+	/* 
+		count of negative Kempes completed in reporting period
+	*/  
+	cteNegativeKempesInPeriod
+	as
+		(select count(KempePK) as countOfNegativeKempesInPeriod
+		  from cteAllKempes
+		  where KempeDate between @StartDate and @EndDate and
+				KempeResult = 0
+		)
+	,
+
+	/* 
+		count of FOB present Kempes completed in reporting period
+	*/  
+	cteFOBPresentKempesInPeriod
+	as
+		(select count(KempePK) as countOfFOBPresentKempesInPeriod
+		  from cteAllKempes
+		  where KempeDate between @StartDate and @EndDate and
+				FOBPresent = 1
+		)
+	,
+
+	/* 
+		count of familes enrolled since beginning of program
+	*/  
+	cteFamiliesEnrolledSinceBeginning
+	as	
+		(select count(HVCasePK) as countOfFamiliesEnrolledSinceBeginning
+		  from HVCase c
+		  inner join CaseProgram cp on cp.HVCaseFK = c.HVCasePK
+		  inner join dbo.SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where IntakeDate <= @EndDate
+		)
+	,
+	/* 
+		count of familes enrolled prenatally since beginning of program
+	*/  
+	cteFamiliesEnrolledPrenatallySinceBeginning
+	as	
+		(select count(HVCasePK) as countOfFamiliesEnrolledPrenatallySinceBeginning
+		  from HVCase c
+		  inner join CaseProgram cp on cp.HVCaseFK = c.HVCasePK
+		  inner join dbo.SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where IntakeDate <= @EndDate and
+				isnull(TCDOB, EDC) > IntakeDate
+		)
+	,
+	/* 
+		count of familes enrolled postnatally since beginning of program
+	*/  
+	cteFamiliesEnrolledPostnatallySinceBeginning
+	as	
+		(select count(HVCasePK) as countOfFamiliesEnrolledPostnatallySinceBeginning
+		  from HVCase c
+		  inner join CaseProgram cp on cp.HVCaseFK = c.HVCasePK
+		  inner join dbo.SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where IntakeDate <= @EndDate and
+				isnull(TCDOB, EDC) <= IntakeDate
+		)
+	,
+	/* 
+		count of familes enrolled in reporting period
+	*/  
+	cteFamiliesEnrolledInPeriod
+	as	
+		(select count(HVCasePK) as countOfFamiliesEnrolledInPeriod
+		  from HVCase c
+		  inner join CaseProgram cp on cp.HVCaseFK = c.HVCasePK
+		  inner join dbo.SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where IntakeDate between @StartDate and @EndDate
+		)
+	,
+	/* 
+		count of familes enrolled prenatally in reporting period
+	*/  
+	cteFamiliesEnrolledPrenatallyInPeriod
+	as	
+		(select count(HVCasePK) as countOfFamiliesEnrolledPrenatallyInPeriod
+		  from HVCase c
+		  inner join CaseProgram cp on cp.HVCaseFK = c.HVCasePK
+		  inner join dbo.SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where IntakeDate between @StartDate and @EndDate and
+				isnull(TCDOB, EDC) > IntakeDate
+		)
+	,
+	/* 
+		count of familes enrolled postnatally in reporting period
+	*/  
+	cteFamiliesEnrolledPostnatallyInPeriod
+	as	
+		(select count(HVCasePK) as countOfFamiliesEnrolledPostnatallyInPeriod
+		  from HVCase c
+		  inner join CaseProgram cp on cp.HVCaseFK = c.HVCasePK
+		  inner join dbo.SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where IntakeDate between @StartDate and @EndDate and
+				isnull(TCDOB, EDC) <= IntakeDate
+		)
+	,
+	/* 
+		count of familes served since beginning of program
+	*/  
+	cteFamiliesServedSinceBeginning
+	as	
+		(select count(HVCasePK) as countOfFamiliesServedSinceBeginning
+		  from HVCase c
+		  inner join CaseProgram cp on cp.HVCaseFK = c.HVCasePK
+		  inner join dbo.SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where IntakeDate <= @EndDate 
+		)
+	,
+	/* 
+		count of familes served in reporting period
+	*/  
+	cteFamiliesServedInPeriod
+	as	
+		(select count(HVCasePK) as countOfFamiliesServedInPeriod
+		  from HVCase c
+		  inner join CaseProgram cp on cp.HVCaseFK = c.HVCasePK
+		  inner join dbo.SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where IntakeDate <= @EndDate 
+				and (DischargeDate is null or DischargeDate >= @StartDate)
+		)
+	,
+	/* 
+		count of familes enrolled at end of reporting period
+	*/  
+	cteFamiliesEnrolledAtEndOfPeriod
+	as	
+		(select count(HVCasePK) as countOfFamiliesEnrolledAtEndOfPeriod
+		  from HVCase c
+		  inner join CaseProgram cp on cp.HVCaseFK = c.HVCasePK
+		  inner join dbo.SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where IntakeDate <= @EndDate and 
+				(DischargeDate is null or DischargeDate > @EndDate)
+		)
+	,
+	/* 
+		count of target children born since beginning of program
+	*/  
+	cteTargetChildrenBornSinceBeginning
+	as
+		(select count(TCIDPK) as countOfTargetChildrenBornSinceBeginning 
+		  from HVCase
+		  inner join CaseProgram cp on cp.HVCaseFK = HVCase.HVCasePK
+		  inner join TCID T on T.HVCaseFK = HVCase.HVCasePK
+		  inner join dbo.SplitString(@ProgramFKs, ',') ss on ListItem = cp.ProgramFK
+		  where IntakeDate <= @EndDate 
+				and T.TCDOB <= @EndDate
+		)
+	,
+	/* 
+		count of target children born in reporting period
+	*/  
+	cteTargetChildrenBornInPeriod
+	as
+		(select count(TCIDPK) as countOfTargetChildrenBornInPeriod 
+		  from HVCase
+		  inner join CaseProgram cp on cp.HVCaseFK = HVCase.HVCasePK
+		  inner join TCID T on T.HVCaseFK = HVCase.HVCasePK
+		  inner join dbo.SplitString(@ProgramFKs, ',') ss on ListItem = cp.ProgramFK
+		  where IntakeDate <= @EndDate 
+				and T.TCDOB between @StartDate and @EndDate
+		)
+	--,
+	--/* 
+	--	count of other target children served since beginning of program
+	--*/  
+	--cteOtherTargetChildrenServedSinceBeginning
+	--as
+	--	(select count(TCIDPK) as countOfOtherTargetChildrenServedSinceBeginning
+	--	  from HVCase
+	--	  inner join CaseProgram cp on cp.HVCaseFK = HVCase.HVCasePK
+	--	  inner join TCID T on T.HVCaseFK = HVCase.HVCasePK
+	--	  inner join dbo.SplitString(@ProgramFKs, ',') ss on ListItem = cp.ProgramFK
+	--	  where IntakeDate <= @EndDate 
+	--			and T.TCDOB < @StartDate
+	--	)
+	,
+	/* 
+		count of other target children served since beginning of program
+	*/  
+	cteOtherTargetChildrenServedInPeriod
+	as
+		(select count(TCIDPK) as countOfOtherTargetChildrenServedInPeriod 
+		  from HVCase
+		  inner join CaseProgram cp on cp.HVCaseFK = HVCase.HVCasePK
+		  inner join TCID T on T.HVCaseFK = HVCase.HVCasePK
+		  inner join dbo.SplitString(@ProgramFKs, ',') ss on ListItem = cp.ProgramFK
+		  where IntakeDate <= @EndDate 
+				and (DischargeDate is null or DischargeDate >= @StartDate)
+				and T.TCDOB < @StartDate
+		)
+	,
+	/* 
+		count of other children served since beginning of program
+	*/  
+	cteOtherChildrenServedSinceBeginning
+	as
+		(select count(OtherChildPK) as countOfOtherChildrenServedSinceBeginning
+		  from HVCase
+		  inner join CaseProgram cp on cp.HVCaseFK = HVCase.HVCasePK
+		  --inner join TCID T on T.HVCaseFK = HVCase.HVCasePK
+		  inner join OtherChild oc on oc.HVCaseFK = HVCase.HVCasePK
+		  inner join dbo.SplitString(@ProgramFKs, ',') ss on ListItem = cp.ProgramFK
+		  where IntakeDate <= @EndDate 
+				-- and (DischargeDate is null or DischargeDate >= @StartDate)
+		  --and T.TCDOB<='09/30/13'
+		  and oc.LivingArrangement='01'
+		)
+	,
+	/* 
+		count of other children served in reporting period
+	*/  
+	cteOtherChildrenServedInPeriod
+	as
+		(select count(OtherChildPK) as countOfOtherChildrenServedInPeriod
+		  from HVCase
+		  inner join CaseProgram cp on cp.HVCaseFK = HVCase.HVCasePK
+		  --inner join TCID T on T.HVCaseFK = HVCase.HVCasePK
+		  inner join OtherChild oc on oc.HVCaseFK = HVCase.HVCasePK
+		  inner join dbo.SplitString(@ProgramFKs, ',') ss on ListItem = cp.ProgramFK
+		  where IntakeDate <= @EndDate 
+				and (DischargeDate is null or DischargeDate >= @StartDate)
+		  --and T.TCDOB<='09/30/13'
+		  and oc.LivingArrangement='01'
+		)
+	,
+	/* 
+		count of home visit logs since beginning of program
+	*/ 
+	cteHomeVisitLogsSinceBeginning
+	as
+		(select count(HVLogPK) as countOfHomeVisitLogsSinceBeginning
+		  from HVLog
+		  inner join SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where convert(date, VisitStartTime) <= @EndDate
+		)
+	,
+	/* 
+		count of completed home visit logs since beginning of program
+	*/ 
+	cteCompletedHomeVisitLogsSinceBeginning
+	as
+		(select count(HVLogPK) as countOfCompletedHomeVisitLogsSinceBeginning
+		  from HVLog
+		  inner join SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where convert(date, VisitStartTime) <= @EndDate
+				and VisitType <> '0001'
+		)
+	,
+	/* 
+		count of attempted home visit logs since beginning of program
+	*/ 
+	cteAttemptedHomeVisitLogsSinceBeginning
+	as
+		(select count(HVLogPK) as countOfAttemptedHomeVisitLogsSinceBeginning
+		  from HVLog
+		  inner join SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where convert(date, VisitStartTime) <= @EndDate
+				and VisitType = '0001'
+		)
+	,
+	/* 
+		count of home visit logs in reporting period
+	*/ 
+	cteHomeVisitLogsInPeriod
+	as
+		(select count(HVLogPK) as countOfHomeVisitLogsInPeriod
+		  from HVLog
+		  inner join SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where convert(date, VisitStartTime) between @StartDate and @EndDate
+		)
+	,
+	/* 
+		count of completed home visit logs in reporting period
+	*/ 
+	cteCompletedHomeVisitLogsInPeriod
+	as
+		(select count(HVLogPK) as countOfCompletedHomeVisitLogsInPeriod
+		  from HVLog
+		  inner join SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where convert(date, VisitStartTime) between @StartDate and @EndDate
+				and VisitType <> '0001'
+		)
+	,
+	/* 
+		count of attempted home visit logs in reporting period
+	*/ 
+	cteAttemptedHomeVisitLogsInPeriod
+	as
+		(select count(HVLogPK) as countOfAttemptedHomeVisitLogsInPeriod
+		  from HVLog
+		  inner join SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where convert(date, VisitStartTime) between @StartDate and @EndDate and 
+				VisitType = '0001'
+		)
+	,
+	/* 
+		count of families with at least one home visit log since beginning of program
+	*/ 
+	cteFamiliesWithAtLeastOneHomeVisitSinceBeginning
+	as
+		(select count(distinct HVCaseFK) as countOfFamiliesWithAtLeastOneHomeVisitSinceBeginning
+		  from HVLog
+		  inner join SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where convert(date, VisitStartTime) <= @EndDate
+		)
+	,
+	/* 
+		count of families with at least one home visit log in reporting period
+	*/ 
+	cteFamiliesWithAtLeastOneHomeVisitInPeriod
+	as
+		(select count(distinct HVCaseFK) as countOfFamiliesWithAtLeastOneHomeVisitInPeriod
+		  from HVLog
+		  inner join SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where convert(date, VisitStartTime) between @StartDate and @EndDate
+		)
+	,
+	/* 
+		count of families with at least one home visit log since beginning of program
+	*/ 
+	cteFamiliesWithAtLeastOneHomeVisitIncludingOBPOrFatherSinceBeginning
+	as
+		(select count(distinct HVCaseFK) as countOfFamiliesWithAtLeastOneHomeVisitIncludingOBPOrFatherSinceBeginning
+		  from HVLog
+		  inner join SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where convert(date, VisitStartTime) <= @EndDate and
+				(OBPParticipated = 1 or FatherFigureParticipated = 1)
+		)
+	,
+	/* 
+		count of families with at least one home visit log in reporting period
+	*/ 
+	cteFamiliesWithAtLeastOneHomeVisitIncludingOBPOrFatherInPeriod
+	as
+		(select count(distinct HVCaseFK) as countOfFamiliesWithAtLeastOneHomeVisitIncludingOBPOrFatherInPeriod
+		  from HVLog
+		  inner join SplitString(@ProgramFKs, ',') ss on ListItem = ProgramFK
+		  where convert(date, VisitStartTime) between @StartDate and @EndDate and
+				(OBPParticipated = 1 or FatherFigureParticipated = 1)
+		)
+	, 
+	cteFinal 
+	as
+		(select /* Screens completed */
+				countOfScreensCompletedSinceBeginning
+				, 1 as pctOfScreensCompletedSinceBeginning
+				, countOfScreensCompletedInPeriod
+				, 1  as pctOfScreensCompletedInPeriod
+				, countOfPositiveScreensSinceBeginning
+				, case when countOfScreensCompletedSinceBeginning is null or countOfScreensCompletedSinceBeginning = 0 then 0 
+						else round(countOfPositiveScreensSinceBeginning / (countOfScreensCompletedSinceBeginning * 1.0000), 2) 
+					end as pctOfPositiveScreensSinceBeginning
+				, countOfNegativeScreensSinceBeginning
+				, case when countOfScreensCompletedSinceBeginning is null or countOfScreensCompletedSinceBeginning = 0 then 0
+						else round(countOfNegativeScreensSinceBeginning / (countOfScreensCompletedSinceBeginning * 1.0000), 2) 
+					end as pctOfNegativeScreensSinceBeginning
+				
+				/* Positive screens */
+				, countOfPositiveScreensInPeriod
+				, case when countOfScreensCompletedInPeriod is null or countOfScreensCompletedInPeriod = 0 then 0
+						else round(countOfPositiveScreensInPeriod / (countOfScreensCompletedInPeriod * 1.0000), 2) 
+					end as pctOfPositiveScreensInPeriod
+
+				/* Negative screens */
+				, countOfNegativeScreensInPeriod
+				, case when countOfScreensCompletedInPeriod is null or countOfScreensCompletedInPeriod = 0 then 0
+						else round(countOfNegativeScreensInPeriod / (countOfScreensCompletedInPeriod * 1.0000), 2) 
+					end as pctOfNegativeScreensInPeriod
+				
+				/* Kempes completed */
+				, countOfKempesCompletedSinceBeginning
+				, 1 as pctOfKempesCompletedSinceBeginning
+				, countOfKempesCompletedInPeriod
+				, 1 as pctOfKempesCompletedInPeriod
+				
+				/* Positive Kempes */
+				, countOfPositiveKempesSinceBeginning
+				, case when countOfKempesCompletedSinceBeginning is null or countOfKempesCompletedSinceBeginning = 0 then 0
+						else round(countOfPositiveKempesSinceBeginning / (countOfKempesCompletedSinceBeginning * 1.0000), 2) 
+					end as pctOfPositiveKempesSinceBeginning
+				, countOfPositiveKempesInPeriod
+				, case when countOfKempesCompletedInPeriod is null or countOfKempesCompletedInPeriod = 0 then 0
+						else round(countOfPositiveKempesInPeriod / (countOfKempesCompletedInPeriod * 1.0000), 2) 
+					end as pctOfPositiveKempesInPeriod
+
+				/* Negative Kempes */
+				, countOfNegativeKempesSinceBeginning
+				, case when countOfKempesCompletedSinceBeginning is null or countOfKempesCompletedSinceBeginning = 0 then 0
+						else round(countOfNegativeKempesSinceBeginning / (countOfKempesCompletedSinceBeginning * 1.0000), 2) 
+					end as pctOfNegativeKempesSinceBeginning
+				, countOfNegativeKempesInPeriod
+				, case when countOfKempesCompletedInPeriod is null or countOfKempesCompletedInPeriod = 0 then 0
+						else round(countOfNegativeKempesInPeriod / (countOfKempesCompletedInPeriod * 1.0000), 2) 
+					end as pctOfNegativeKempesInPeriod
+
+				/* Father of Baby Present Kempes */
+				, countOfFOBPresentKempesSinceBeginning
+				, case when countOfKempesCompletedSinceBeginning is null or countOfKempesCompletedSinceBeginning = 0 then 0
+						else round(countOfFOBPresentKempesSinceBeginning / (countOfKempesCompletedSinceBeginning * 1.0000), 2) 
+					end as pctOfFOBPresentKempesSinceBeginning
+
+				, countOfFOBPresentKempesInPeriod
+				, case when countOfKempesCompletedInPeriod is null or countOfKempesCompletedInPeriod = 0 then 0
+						else round(countOfFOBPresentKempesInPeriod / (countOfKempesCompletedInPeriod * 1.0000), 2) 
+					end as pctOfFOBPresentKempesInPeriod
+
+				, countOfPreintakeHomeVisitInPeriod
+				, countOfPreintakeHomeVisitSinceBeginning
+
+				/* Enrolled Families */
+				/* Since Beginning */
+				, countOfFamiliesEnrolledSinceBeginning
+				, 1 as pctOfFamiliesEnrolledSinceBeginning
+				/* Prenatally */
+				, countOfFamiliesEnrolledPrenatallySinceBeginning
+				, case when countOfFamiliesEnrolledSinceBeginning is null or countOfFamiliesEnrolledSinceBeginning = 0 then 0
+						else round(countOfFamiliesEnrolledPrenatallySinceBeginning / (countOfFamiliesEnrolledSinceBeginning * 1.0000), 2) 
+					end as pctOfFamiliesEnrolledPrenatallySinceBeginning
+				/* Postnatally */
+				, countOfFamiliesEnrolledPostnatallySinceBeginning
+				, case when countOfFamiliesEnrolledSinceBeginning is null or countOfFamiliesEnrolledSinceBeginning = 0 then 0
+						else round(countOfFamiliesEnrolledPostnatallySinceBeginning / (countOfFamiliesEnrolledSinceBeginning * 1.0000), 2) 
+					end as pctOfFamiliesEnrolledPostnatallySinceBeginning
+				/* In Period */
+				, countOfFamiliesEnrolledInPeriod
+				, 1 as pctOfFamiliesEnrolledInPeriod
+				/* Prenatally */
+				, countOfFamiliesEnrolledPrenatallyInPeriod
+				, case when countOfFamiliesEnrolledInPeriod is null or countOfFamiliesEnrolledInPeriod = 0 then 0
+						else round(countOfFamiliesEnrolledPrenatallyInPeriod / (countOfFamiliesEnrolledInPeriod * 1.0000), 2) 
+					end as pctOfFamiliesEnrolledPrenatallyInPeriod
+				/* Postnatally */
+				, countOfFamiliesEnrolledPostnatallyInPeriod
+				, case when countOfFamiliesEnrolledInPeriod is null or countOfFamiliesEnrolledInPeriod = 0 then 0
+						else round(countOfFamiliesEnrolledPostnatallyInPeriod / (countOfFamiliesEnrolledInPeriod * 1.0000), 2) 
+					end as pctOfFamiliesEnrolledPostnatallyInPeriod
+			
+				/* Families Served */
+				, countOfFamiliesServedSinceBeginning
+				, countOfFamiliesServedInPeriod
+				, countOfFamiliesEnrolledAtEndOfPeriod
+	
+				/* Target Children born and served */
+				, countOfTargetChildrenBornSinceBeginning
+				, countOfTargetChildrenBornInPeriod
+				, 0 as countOfOtherTargetChildrenServedSinceBeginning
+				--, replace(convert(varchar(20), (cast(countOfOtherTargetChildrenServedSinceBeginning as money)), 1), '.00', '') as countOfOtherTargetChildrenServedSinceBeginning
+				, countOfOtherTargetChildrenServedInPeriod
+				, countOfOtherChildrenServedSinceBeginning
+				, countOfOtherChildrenServedInPeriod
+
+				/* Home Visit Logs*/
+				/* Since Beginning */
+				, countOfHomeVisitLogsSinceBeginning
+				, 1 as pctOfHomeVisitLogsSinceBeginning
+				/* Completed */
+				, countOfCompletedHomeVisitLogsSinceBeginning
+				, case when countOfHomeVisitLogsSinceBeginning is null or countOfHomeVisitLogsSinceBeginning = 0 then 0
+						else round(countOfCompletedHomeVisitLogsSinceBeginning / (countOfHomeVisitLogsSinceBeginning * 1.0000), 2) 
+					end as pctOfCompletedHomeVisitLogsSinceBeginning
+				/* Attempted */
+				, countOfAttemptedHomeVisitLogsSinceBeginning
+				, case when countOfHomeVisitLogsSinceBeginning is null or countOfHomeVisitLogsSinceBeginning = 0 then 0
+						else round(countOfAttemptedHomeVisitLogsSinceBeginning / (countOfHomeVisitLogsSinceBeginning * 1.0000), 2) 
+					end as pctOfAttemptedHomeVisitLogsSinceBeginning
+				/* In Period */
+				, countOfHomeVisitLogsInPeriod
+				, 1 as pctOfHomeVisitLogsInPeriod
+				/* Completed */
+				, countOfCompletedHomeVisitLogsInPeriod
+				, case when countOfHomeVisitLogsInPeriod is null or countOfHomeVisitLogsInPeriod = 0 then 0
+						else round(countOfCompletedHomeVisitLogsInPeriod / (countOfHomeVisitLogsInPeriod * 1.0000), 2) 
+					end as pctOfCompletedHomeVisitLogsInPeriod
+				/* Attempted */
+				, countOfAttemptedHomeVisitLogsInPeriod
+				, case when countOfHomeVisitLogsInPeriod is null or countOfHomeVisitLogsInPeriod = 0 then 0
+						else round(countOfAttemptedHomeVisitLogsInPeriod / (countOfHomeVisitLogsInPeriod * 1.0000), 2) 
+					end as pctOfAttemptedHomeVisitLogsInPeriod
+
+				/* Families with at least one */
+				, countOfFamiliesWithAtLeastOneHomeVisitSinceBeginning
+				--, 0 as pctOfFamiliesWithAtLeastOneHomeVisitSinceBeginning
+				, countOfFamiliesWithAtLeastOneHomeVisitInPeriod
+				--, 0 as pctOfFamiliesWithAtLeastOneHomeVisitInPeriod
+				
+				/* At least one with OBP or father/father figure */
+				, countOfFamiliesWithAtLeastOneHomeVisitIncludingOBPOrFatherSinceBeginning
+				--, 0 as pctOfFamiliesWithAtLeastOneHomeVisitIncludingOBPOrFatherSinceBeginning
+				/* ('+replace(convert(varchar(20), cast(round(countOfFamiliesWithAtLeastOneHomeVisitIncludingOBPOrFatherSinceBeginning / 
+																(countOfFamiliesWithAtLeastOneHomeVisitSinceBeginning * 1.0000) * 100, 0) 
+														as money)), '.00', '') + '%)' as pctOfFamiliesWithAtLeastOneHomeVisitIncludingOBPOrFatherSinceBeginning */
+				, countOfFamiliesWithAtLeastOneHomeVisitIncludingOBPOrFatherInPeriod
+				--, 0 as pctOfFamiliesWithAtLeastOneHomeVisitIncludingOBPOrFatherInPeriod
+		from cteScreensCompletedSinceBeginning
+		inner join cteScreensCompletedInPeriod on 1=1
+		inner join ctePositiveScreensSinceBeginning on 1=1
+		inner join cteNegativeScreensSinceBeginning on 1=1
+		inner join ctePositiveScreensInPeriod on 1=1
+		inner join cteNegativeScreensInPeriod on 1=1
+		inner join cteKempesCompletedSinceBeginning on 1=1
+		inner join cteKempesCompletedInPeriod on 1=1
+
+		inner join ctePreintakeHomeVisitInPeriod on 1=1
+		inner join ctePreintakeHomeVisitSinceBeginning on 1=1
+
+		inner join ctePositiveKempesSinceBeginning on 1=1
+		inner join cteNegativeKempesSinceBeginning on 1=1
+		inner join cteFOBPresentKempesSinceBeginning on 1=1
+
+		inner join ctePositiveKempesInPeriod on 1=1
+		inner join cteNegativeKempesInPeriod on 1=1
+		inner join cteFOBPresentKempesInPeriod on 1=1
+
+		inner join cteFamiliesEnrolledSinceBeginning on 1=1
+		inner join cteFamiliesEnrolledPrenatallySinceBeginning on 1=1
+		inner join cteFamiliesEnrolledPostnatallySinceBeginning on 1=1
+		inner join cteFamiliesEnrolledInPeriod on 1=1
+		inner join cteFamiliesEnrolledPrenatallyInPeriod on 1=1
+		inner join cteFamiliesEnrolledPostnatallyInPeriod on 1=1
+		inner join cteFamiliesServedSinceBeginning on 1=1
+		inner join cteFamiliesServedInPeriod on 1=1
+		inner join cteFamiliesEnrolledAtEndOfPeriod on 1=1
+		inner join cteTargetChildrenBornSinceBeginning on 1=1
+		inner join cteTargetChildrenBornInPeriod on 1=1
+		--inner join cteOtherTargetChildrenServedSinceBeginning on 1=1
+		inner join cteOtherTargetChildrenServedInPeriod on 1=1
+		inner join cteOtherChildrenServedSinceBeginning on 1=1
+		inner join cteOtherChildrenServedInPeriod on 1=1
+		inner join cteHomeVisitLogsSinceBeginning on 1=1
+		inner join cteCompletedHomeVisitLogsSinceBeginning on 1=1
+		inner join cteAttemptedHomeVisitLogsSinceBeginning on 1=1
+		inner join cteHomeVisitLogsInPeriod on 1=1
+		inner join cteCompletedHomeVisitLogsInPeriod on 1=1
+		inner join cteAttemptedHomeVisitLogsInPeriod on 1=1
+		inner join cteFamiliesWithAtLeastOneHomeVisitSinceBeginning on 1=1
+		inner join cteFamiliesWithAtLeastOneHomeVisitInPeriod on 1=1
+		inner join cteFamiliesWithAtLeastOneHomeVisitIncludingOBPOrFatherSinceBeginning on 1=1
+		inner join cteFamiliesWithAtLeastOneHomeVisitIncludingOBPOrFatherInPeriod on 1=1
+	)
+
+	select countOfScreensCompletedSinceBeginning
+		 , pctOfScreensCompletedSinceBeginning
+		 , countOfScreensCompletedInPeriod
+		 , pctOfScreensCompletedInPeriod
+		 , countOfPositiveScreensSinceBeginning
+		 , pctOfPositiveScreensSinceBeginning
+		 , countOfNegativeScreensSinceBeginning
+		 , pctOfNegativeScreensSinceBeginning
+		 , countOfPositiveScreensInPeriod
+		 , pctOfPositiveScreensInPeriod
+		 , countOfNegativeScreensInPeriod
+		 , pctOfNegativeScreensInPeriod
+		 , countOfKempesCompletedSinceBeginning
+		 , pctOfKempesCompletedSinceBeginning
+		 , countOfKempesCompletedInPeriod
+		 , pctOfKempesCompletedInPeriod
+		 , countOfPositiveKempesSinceBeginning
+		 , pctOfPositiveKempesSinceBeginning
+		 , countOfPositiveKempesInPeriod
+		 , pctOfPositiveKempesInPeriod
+		 , countOfNegativeKempesSinceBeginning
+		 , pctOfNegativeKempesSinceBeginning
+		 , countOfNegativeKempesInPeriod
+		 , pctOfNegativeKempesInPeriod
+		 , countOfFOBPresentKempesSinceBeginning
+		 , pctOfFOBPresentKempesSinceBeginning
+		 , countOfFOBPresentKempesInPeriod
+		 , pctOfFOBPresentKempesInPeriod
+		 , countOfPreintakeHomeVisitInPeriod
+		 , countOfPreintakeHomeVisitSinceBeginning
+		 , countOfFamiliesEnrolledSinceBeginning
+		 , pctOfFamiliesEnrolledSinceBeginning
+		 , countOfFamiliesEnrolledPrenatallySinceBeginning
+		 , pctOfFamiliesEnrolledPrenatallySinceBeginning
+		 , countOfFamiliesEnrolledPostnatallySinceBeginning
+		 , pctOfFamiliesEnrolledPostnatallySinceBeginning
+		 , countOfFamiliesEnrolledInPeriod
+		 , pctOfFamiliesEnrolledInPeriod
+		 , countOfFamiliesEnrolledPrenatallyInPeriod
+		 , pctOfFamiliesEnrolledPrenatallyInPeriod
+		 , countOfFamiliesEnrolledPostnatallyInPeriod
+		 , pctOfFamiliesEnrolledPostnatallyInPeriod
+		 , countOfFamiliesServedSinceBeginning
+		 , countOfFamiliesServedInPeriod
+		 , countOfFamiliesEnrolledAtEndOfPeriod
+		 , countOfTargetChildrenBornSinceBeginning
+		 , countOfTargetChildrenBornInPeriod
+		 , countOfOtherTargetChildrenServedSinceBeginning
+		 , countOfOtherTargetChildrenServedInPeriod
+		 , countOfOtherChildrenServedSinceBeginning
+		 , countOfOtherChildrenServedInPeriod
+		 , countOfHomeVisitLogsSinceBeginning
+		 , pctOfHomeVisitLogsSinceBeginning
+		 , countOfCompletedHomeVisitLogsSinceBeginning
+		 , pctOfCompletedHomeVisitLogsSinceBeginning
+		 , countOfAttemptedHomeVisitLogsSinceBeginning
+		 , pctOfAttemptedHomeVisitLogsSinceBeginning
+		 , countOfHomeVisitLogsInPeriod
+		 , pctOfHomeVisitLogsInPeriod
+		 , countOfCompletedHomeVisitLogsInPeriod
+		 , pctOfCompletedHomeVisitLogsInPeriod
+		 , countOfAttemptedHomeVisitLogsInPeriod
+		 , pctOfAttemptedHomeVisitLogsInPeriod
+		 , countOfFamiliesWithAtLeastOneHomeVisitSinceBeginning
+		 --, pctOfFamiliesWithAtLeastOneHomeVisitSinceBeginning
+		 , countOfFamiliesWithAtLeastOneHomeVisitInPeriod
+		 --, pctOfFamiliesWithAtLeastOneHomeVisitInPeriod
+		 , countOfFamiliesWithAtLeastOneHomeVisitIncludingOBPOrFatherSinceBeginning
+		 --, pctOfFamiliesWithAtLeastOneHomeVisitIncludingOBPOrFatherSinceBeginning
+		 , countOfFamiliesWithAtLeastOneHomeVisitIncludingOBPOrFatherInPeriod
+		 --, pctOfFamiliesWithAtLeastOneHomeVisitIncludingOBPOrFatherInPeriod 
+	from cteFinal
+
+end
+
+/*
+	exec Data-Request-From-OCFS
+*/
+/*
+FW: data request
+
+At some point, could you check my numbers. Bernadette doesnt need this until the tenth.
+Here are my numbers and my code:
+Served:5600
+Tcs:5009
+Otherchild:2545
+
+<snip>
+------
+For 10/1/2012-9/30/2013 can I have:
+ 
+number of families served
+number of target children
+and number of other children in the household who received services.
+I need this data by Friday  January 10th, 2014.
+ 
+Thanks!
+Bernadette
+*/
+
+/*
+SELECT count(HVCasePK) 
+		--,[HVCasePK]
+		--,[CaseProgress]
+		--,[Confidentiality]
+		--,[CPFK]
+		--,[DateOBPAdded]
+		--,[EDC]
+		--,[FFFK]
+		--,[FirstChildDOB]
+		--,[FirstPrenatalCareVisit]
+		--,[FirstPrenatalCareVisitUnknown]
+		--,[HVCaseCreateDate]
+		--,[HVCaseCreator]
+		--,[HVCaseEditDate]
+		--,[HVCaseEditor]
+		--,[InitialZip]
+		--,[IntakeDate]
+		--,[IntakeLevel]
+		--,[IntakeWorkerFK]
+		--,[KempeDate]
+		--,[OBPInformationAvailable]
+		--,[OBPFK]
+		--,[OBPinHomeIntake]
+		--,[OBPRelation2TC]
+		--,[PC1FK]
+		--,[PC1Relation2TC]
+		--,[PC1Relation2TCSpecify]
+		--,[PC2FK]
+		--,[PC2inHomeIntake]
+		--,[PC2Relation2TC]
+		--,[PC2Relation2TCSpecify]
+		--,[PrenatalCheckupsB4]
+		--,[ScreenDate]
+		--,t.TCDOB
+		--,[TCNumber]
+		--,oc.LivingArrangement
+  FROM HVCase
+  inner join CaseProgram cp on cp.HVCaseFK = HVCase.HVCasePK
+  inner join TCID T on T.HVCaseFK = HVCase.HVCasePK
+  --inner join OtherChild oc on oc.HVCaseFK = HVCase.HVCasePK
+  where IntakeDate<='09/30/13' and (DischargeDate is null or DischargeDate>='10/01/12')
+  --and T.TCDOB<='09/30/13'
+  --and oc.LivingArrangement='01'
+*/
+--use HFNY
+--go
+
+--declare @StartDate datetime
+--declare @EndDate datetime
+--declare @ProgramFKs varchar(200)
+
+--set @StartDate = '20130101'
+--set @EndDate = '20131231'
+--set @ProgramFKs = '1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39';
+
+--select convert(varchar(12), @StartDate, 101) as StartDate
+--		, convert(varchar(12), @EndDate, 101) as EndDate;
+GO
diff --git a/Stored Procedures/dbo.rspCapacityBuilding.sql b/Stored Procedures/dbo.rspCapacityBuilding.sql
new file mode 100644
index 0000000..7be817b
--- /dev/null
+++ b/Stored Procedures/dbo.rspCapacityBuilding.sql
@@ -0,0 +1,400 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:    dar chen
+-- Create date: Feb/25/2015
+-- Description: <Report: Capacity Building>
+-- =============================================
+CREATE procedure [dbo].[rspCapacityBuilding]
+(
+    @startDt    DATE,
+    @endDT      DATE,
+    @ProgramFK varchar(max) = null
+)
+as
+
+--DECLARE @startDT DATE = '02/25/2014'
+--DECLARE @endDT DATE = '08/25/2014'
+--DECLARE @ProgramFK varchar(max) = '1'
+
+DECLARE @defaultDT DATE = CONVERT(DATE,DATEADD(MS, -3, DATEADD(MM, DATEDIFF(MM, 0, @startDT) , 0)))
+
+SET @endDT = CONVERT(DATE,DATEADD(MS, -3, DATEADD(MM, DATEDIFF(MM, 0, @defaultDT) - 2 , 0)))
+SET @startDT = CONVERT(DATE,DATEADD(MS, 0, DATEADD(MM, DATEDIFF(MM, 0, @defaultDT) - 14 , 0)))
+
+DECLARE @endDTRetention DATE = CONVERT(DATE,DATEADD(MS, -3, DATEADD(MM, DATEDIFF(MM, 0, @defaultDT) - 11 , 0)))
+DECLARE @startDTRetention DATE = CONVERT(DATE,DATEADD(MS, 0, DATEADD(MM, DATEDIFF(MM, 0, @defaultDT) - 23 , 0)))
+
+DECLARE @endDT3 DATE = @defaultDT
+DECLARE @startDT3 DATE = CONVERT(DATE,DATEADD(MS, 0, DATEADD(MM, DATEDIFF(MM, 0, @endDT3) , 0)))
+
+DECLARE @endDT2 DATE = CONVERT(DATE,DATEADD(MS, -3, DATEADD(MM, DATEDIFF(MM, 0, @defaultDT) - 0 , 0)))
+DECLARE @startDT2 DATE = CONVERT(DATE,DATEADD(MS, 0, DATEADD(MM, DATEDIFF(MM, 0, @defaultDT) - 1 , 0)))
+
+DECLARE @endDT1 DATE = CONVERT(DATE,DATEADD(MS, -3, DATEADD(MM, DATEDIFF(MM, 0, @defaultDT) - 1 , 0)))
+DECLARE @startDT1 DATE = CONVERT(DATE,DATEADD(MS, 0, DATEADD(MM, DATEDIFF(MM, 0, @defaultDT) - 2 , 0)))
+
+
+	set nocount on;
+
+	-- Insert statements for procedure here
+	if @ProgramFK is null
+	begin
+		select @ProgramFK =
+			   substring((select ','+LTRIM(RTRIM(STR(HVProgramPK)))
+						from HVProgram for xml path ('')),2,8000)
+	end
+	set @ProgramFK = REPLACE(@ProgramFK,'"','')
+	
+	;
+	with 
+
+	ctemainAgain
+	as
+	(
+	select pc1id
+		  ,case when levelname in ('Preintake','Preintake-enroll') then 1 else 0 end as PreintakeCount
+		  ,CaseProgram.ProgramFK
+		  ,ProgramCapacity
+		from
+			(select * from codeLevel where caseweight is not null) cl
+			left outer join caseprogram on caseprogram.currentLevelFK = cl.codeLevelPK
+			inner join dbo.SplitString(@programfk,',') on caseprogram.programfk = listitem
+			inner join worker on caseprogram.currentFSWFK = worker.workerpk
+			inner join workerprogram wp on wp.workerfk = worker.workerpk AND wp.programfk = listitem
+			left outer join (select workerpk ,firstName as supfname
+							,LastName as suplname from worker) sw on wp.supervisorfk = sw.workerpk
+			left outer join HVProgram h on h.HVProgramPK = CaseProgram.ProgramFK			   
+		where
+			 dischargedate is null --and sw.workerpk = isnull(@SupPK,sw.workerpk)
+		)	
+	,
+	
+	cteProgramCapacityX
+	as
+	( 
+		select ProgramCapacity, ProgramFK,
+			count(PC1ID) - sum(PreintakeCount) AS CurrentCapacity
+			--,case when ProgramCapacity is null then 'Program capacity blank on Program Information Form.' 
+			--ELSE CONVERT(VARCHAR, round(COALESCE(cast((count(PC1ID) - sum(PreintakeCount)) AS FLOAT) * 100 / 
+			--NULLIF(ProgramCapacity,0), 0), 0))  + '%' end AS PerctOfProgramCapacity
+		FROM ctemainAgain
+		group by ProgramCapacity, ProgramFK
+	)	 
+	
+	,
+	cteProgramCapacity
+	AS (
+	
+	select  sum(ProgramCapacity) AS ProgramCapacity,
+			sum(CurrentCapacity) AS CurrentCapacity,
+			case when sum(ProgramCapacity) is null then 'Program capacity blank on Program Information Form.' 
+			ELSE CONVERT(VARCHAR, round(COALESCE(cast(sum(CurrentCapacity) AS FLOAT) * 100 / 
+			NULLIF(sum(ProgramCapacity),0), 0), 0))  + '%' end AS PerctOfProgramCapacity
+		FROM cteProgramCapacityX
+	)
+	
+	-- C and D
+	, cteScreen as
+	(
+		SELECT count(*) AS TotalScreens,
+		sum(CASE WHEN a.ReferralMade = 1 THEN 1 ELSE 0 END) AS PositiveScreens,
+		CONVERT(VARCHAR, round(COALESCE(cast((sum(CASE WHEN a.ReferralMade = 1 THEN 1 ELSE 0 END)) AS FLOAT) * 100 / 
+		NULLIF(count(*),0), 0), 0))  + '%'
+		AS PercentScreen
+		FROM HVScreen AS a
+		inner join dbo.SplitString(@programfk,',') on a.ProgramFK = listitem
+		WHERE a.ScreenDate BETWEEN @startDT AND @endDT
+	)
+	
+	, cteKempe AS
+	(
+		SELECT 
+		sum(CASE WHEN a.CaseStatus IN ('02', '04') THEN 1 ELSE 0 END) AS TotalKempe
+		, sum(CASE WHEN a.CaseStatus IN ('02') AND a.FSWAssignDate IS NOT NULL THEN 1 ELSE 0 END) AS PositiveReferredKempe
+		, CONVERT(VARCHAR, round(COALESCE(cast((sum(CASE WHEN a.CaseStatus IN ('02') AND 
+		a.FSWAssignDate IS NOT NULL THEN 1 ELSE 0 END)) AS FLOAT) * 100 / 
+		NULLIF(sum(CASE WHEN a.CaseStatus IN ('02', '04') THEN 1 ELSE 0 END),0), 0), 0))  + '%'
+		AS PercentKempe
+		FROM Preassessment AS a
+		JOIN Kempe AS b ON a.HVCaseFK = b.HVCaseFK  -- new
+		inner join dbo.SplitString(@programfk,',') on a.ProgramFK = listitem
+		WHERE a.KempeDate BETWEEN @startDT AND @endDT
+	)
+	
+	-- G (acceptance rate)
+	,
+	cteAcceptanceRateX AS 
+	(
+	SELECT HVCasePK ,DischargeDate, IntakeDate, k.KempeDate, KempeResult
+		 FROM HVCase h
+			INNER JOIN CaseProgram cp ON cp.HVCaseFK = h.HVCasePK
+			inner join dbo.SplitString(@ProgramFK,',') on cp.programfk = listitem
+			INNER JOIN Kempe k ON k.HVCaseFK = h.HVCasePK
+			INNER JOIN PC P ON P.PCPK = h.PC1FK
+			LEFT JOIN CommonAttributes ca ON ca.hvcasefk = h.hvcasepk AND ca.formtype = 'KE'
+		WHERE (h.IntakeDate IS NOT NULL OR cp.DischargeDate IS NOT NULL)
+		AND k.KempeResult = 1
+		AND k.KempeDate BETWEEN @startDT AND @endDT
+	)
+
+	, cteAcceptanceRate AS 
+	(SELECT 
+	 CONVERT(VARCHAR, CONVERT(VARCHAR, round(COALESCE(cast(sum(Case WHEN IntakeDate IS NOT NULL 
+    OR (KempeResult = 1 AND IntakeDate IS NULL AND DischargeDate IS NOT NULL 
+	AND (PIVisitMade > 0 AND PIVisitMade IS NOT NULL)) THEN 1 ELSE 0 END) AS FLOAT) 
+	* 100/ NULLIF(count(*),0), 0), 0))  + '%') AS AcceptanceRate	
+
+	FROM HVCase h
+	INNER JOIN CaseProgram cp ON cp.HVCaseFK = h.HVCasePK
+	inner join dbo.SplitString(@ProgramFK, ',') on cp.programfk = listitem
+	INNER JOIN Kempe k ON k.HVCaseFK = h.HVCasePK
+	INNER JOIN PC P ON P.PCPK = h.PC1FK
+	LEFT OUTER JOIN 
+	(SELECT KempeFK, sum(CASE WHEN PIVisitMade > 0 THEN 1 ELSE 0 END) PIVisitMade
+		FROM Preintake AS a
+		INNER JOIN CaseProgram cp ON cp.HVCaseFK = a.HVCaseFK
+	    INNER join dbo.SplitString(@ProgramFK, ',') on cp.programfk = listitem
+		--WHERE ProgramFK = @ProgramFK
+		GROUP BY kempeFK) AS x ON x.KempeFK = k.KempePK
+	WHERE (h.IntakeDate IS NOT NULL OR cp.DischargeDate IS NOT NULL) AND k.KempeResult = 1 
+	AND k.KempeDate BETWEEN @startDt AND @endDT
+	)
+	--(SELECT
+	--    count(*) AS Totals
+	--	, sum(Case WHEN IntakeDate IS NOT NULL THEN 1 ELSE 0 END) TotalEnrolled
+	--	--, sum(Case WHEN DischargeDate IS NOT NULL AND IntakeDate IS NULL THEN 1 ELSE 0 END) TotalNotEnrolled
+	--	,CONVERT(VARCHAR, CONVERT(VARCHAR, round(COALESCE(cast(sum(Case WHEN IntakeDate IS NOT NULL THEN 1 ELSE 0 END) AS FLOAT) 
+	--	* 100/ NULLIF(count(*),0), 0), 0))  + '%') AS AcceptanceRate	 
+	-- FROM cteAcceptanceRateX
+	--)
+	
+	-- retention rate
+	,
+	cteCaseLastHomeVisit AS
+	(select HVCaseFK
+		   ,max(vl.VisitStartTime) as LastHomeVisit
+		   ,count(vl.VisitStartTime) as CountOfHomeVisits
+		from HVLog vl
+		inner join hvcase c on c.HVCasePK = vl.HVCaseFK
+		inner join dbo.SplitString(@ProgramFK, ',') ss on ss.ListItem = vl.ProgramFK
+		where VisitType <> '0001' and (IntakeDate is not null and 
+		IntakeDate between @startDTRetention and @endDTRetention)
+		group by HVCaseFK
+	)
+
+	, cteMain as
+	(select PC1ID
+		   ,IntakeDate
+		   ,LastHomeVisit
+		   ,DischargeDate
+		   ,cp.DischargeReason as DischargeReasonCode
+		   ,cd.ReportDischargeText
+		   ,case
+				when dischargedate is null and current_timestamp-IntakeDate > 182.125 then 1
+				when dischargedate is not null and LastHomeVisit-IntakeDate > 182.125 then 1
+				else 0
+			end as ActiveAt6Months
+		   ,case
+				when dischargedate is null and current_timestamp-IntakeDate > 365.25 then 1
+				when dischargedate is not null and LastHomeVisit-IntakeDate > 365.25 then 1
+				else 0
+			end as ActiveAt12Months
+		   ,case
+				when dischargedate is null and current_timestamp-IntakeDate > 547.375 then 1
+				when dischargedate is not null and LastHomeVisit-IntakeDate > 547.375 then 1
+				else 0
+			end as ActiveAt18Months
+		   ,case
+				when dischargedate is null and current_timestamp-IntakeDate > 730.50 then 1
+				when dischargedate is not null and LastHomeVisit-IntakeDate > 730.50 then 1
+				else 0
+			end as ActiveAt24Months
+	 from HVCase c
+		inner join cteCaseLastHomeVisit lhv on lhv.HVCaseFK = c.HVCasePK
+		inner join CaseProgram cp on cp.HVCaseFK = c.HVCasePK
+		inner join dbo.SplitString(@ProgramFK, ',') ss on ss.ListItem = cp.ProgramFK
+		 left outer join dbo.codeDischarge cd on cd.DischargeCode = cp.DischargeReason and DischargeUsedWhere like '%DS%'
+	 where (IntakeDate is not NULL and IntakeDate between @startDTRetention and @endDTRetention)
+	)
+	
+	, cteRetentionX AS
+	(
+		select distinct pc1id, IntakeDate, DischargeDate, d.ReportDischargeText, LastHomeVisit
+					   ,case when DischargeDate is not null then 
+							datediff(mm,IntakeDate,LastHomeVisit)
+						else
+							datediff(mm,IntakeDate,current_timestamp)
+						end as RetentionMonths
+					   ,ActiveAt6Months
+					   ,ActiveAt12Months
+					   ,ActiveAt18Months
+					   ,ActiveAt24Months
+			from cteMain
+				left outer join codeDischarge d on cteMain.DischargeReasonCode = DischargeCode
+			where DischargeReasonCode is null
+				 or DischargeReasonCode not in ('07', '17', '18', '20', '21', '23', '25', '37') 
+	)
+	
+	,
+	cteRetention AS 
+	(SELECT
+	count(*) AS TotalEnrolledParticipants
+	, sum(case when ActiveAt12Months=1 then 1 else 0 end) as TwelveMonthsTotal
+	,CONVERT(VARCHAR, CONVERT(VARCHAR, round(COALESCE(cast(sum(case when ActiveAt12Months=1 then 1 else 0 end) AS FLOAT) 
+			* 100/ NULLIF(count(*),0), 0), 0))  + '%') AS RetentionRateOneYear	 
+	FROM cteRetentionX
+	)
+
+	, cteCombined AS
+	(
+		SELECT *
+		FROM cteProgramCapacity
+		LEFT OUTER JOIN cteScreen ON 1 = 1
+		LEFT OUTER JOIN cteKempe ON 1 = 1
+		LEFT OUTER JOIN cteAcceptanceRate ON 1 = 1
+		LEFT OUTER JOIN cteRetention ON 1 = 1
+	)
+	,
+	cteRptX AS
+	(
+	  SELECT ProgramCapacity AS A
+	        ,CurrentCapacity AS	B
+	        ,PerctOfProgramCapacity AS [B/A]
+	        ,TotalScreens AS C
+	        ,PositiveScreens AS D
+	        ,PercentScreen AS [D/C]
+	        ,TotalKempe AS E
+	        ,PositiveReferredKempe AS F
+	        ,CONVERT(VARCHAR, CONVERT(VARCHAR, round(COALESCE(cast(PositiveReferredKempe AS FLOAT) 
+			 * 100/ NULLIF(PositiveScreens,0), 0), 0))  + '%') AS [F/D]
+			,ProgramCapacity - CurrentCapacity AS [A-B]
+			,AcceptanceRate AS G
+			,RetentionRateOneYear AS H
+	  FROM cteCombined
+	)
+	,
+	
+	cteRpt AS 
+	(
+	select *
+	, round((A - (convert(FLOAT, replace(H,'%','') / 100.0) * A) + (A - B))/3, 0) AS EN3
+	, round((A - (convert(FLOAT, replace(H,'%','') / 100.0) * A) + (A - B))/6, 0) AS EN6
+	, round((A - (convert(FLOAT, replace(H,'%','') / 100.0) * A) + (A - B))/12, 0) AS EN12
+	
+	, round((A - (convert(FLOAT, replace(H,'%','') / 100.0) * A) + (A - B))/3/(convert(FLOAT, replace(G,'%','') / 100.0)), 0) AS K3
+	, round((A - (convert(FLOAT, replace(H,'%','') / 100.0) * A) + (A - B))/6/(convert(FLOAT, replace(G,'%','') / 100.0)), 0) AS K6
+	, round((A - (convert(FLOAT, replace(H,'%','') / 100.0) * A) + (A - B))/12/(convert(FLOAT, replace(G,'%','') / 100.0)), 0) AS K12
+	
+	, round((A - (convert(FLOAT, replace(H,'%','') / 100.0) * A) + (A - B))/3/(convert(FLOAT, replace(G,'%','') / 100.0))/(convert(FLOAT, replace([F/D],'%','') / 100.0)), 0) AS S3
+	, round((A - (convert(FLOAT, replace(H,'%','') / 100.0) * A) + (A - B))/6/(convert(FLOAT, replace(G,'%','') / 100.0))/(convert(FLOAT, replace([F/D],'%','') / 100.0)), 0) AS S6
+	, round((A - (convert(FLOAT, replace(H,'%','') / 100.0) * A) + (A - B))/12/(convert(FLOAT, replace(G,'%','') / 100.0))/(convert(FLOAT, replace([F/D],'%','') / 100.0)), 0) AS S12
+	
+	from cteRptX
+	)
+    
+    -- d1, d2, and d3
+    
+    , cteD as
+	(
+		SELECT 
+		isnull(sum(CASE WHEN a.ReferralMade = 1 
+		AND a.ScreenDate BETWEEN @startDT1 AND @endDT1
+		THEN 1 ELSE 0 END), 0) AS D1
+		, isnull(sum(CASE WHEN a.ReferralMade = 1 
+		AND a.ScreenDate BETWEEN @startDT2 AND @endDT2
+		THEN 1 ELSE 0 END), 0) AS D2
+		, isnull(sum(CASE WHEN a.ReferralMade = 1 
+		AND a.ScreenDate BETWEEN @startDT3 AND @endDT3
+		THEN 1 ELSE 0 END), 0) AS D3
+		FROM HVScreen AS a
+		inner join dbo.SplitString(@programfk,',') on a.ProgramFK = listitem
+		WHERE a.ScreenDate BETWEEN @startDT1 AND @endDT3
+	)
+    
+    ,
+    cteF AS
+	(
+		SELECT 
+		isnull(sum(CASE WHEN a.CaseStatus IN ('02') 
+		AND a.FSWAssignDate IS NOT NULL 
+		AND a.KempeDate BETWEEN @startDT1 AND @endDT1
+		THEN 1 ELSE 0 END), 0) AS F1
+		, isnull(sum(CASE WHEN a.CaseStatus IN ('02') 
+		AND a.FSWAssignDate IS NOT NULL 
+		AND a.KempeDate BETWEEN @startDT2 AND @endDT2
+		THEN 1 ELSE 0 END), 0) AS F2
+		, isnull(sum(CASE WHEN a.CaseStatus IN ('02') 
+		AND a.FSWAssignDate IS NOT NULL 
+		AND a.KempeDate BETWEEN @startDT3 AND @endDT3
+		THEN 1 ELSE 0 END), 0) AS F3
+		FROM Preassessment AS a
+		inner join dbo.SplitString(@programfk,',') on a.ProgramFK = listitem
+		WHERE a.KempeDate BETWEEN @startDT1 AND @endDT3
+	)
+	
+	,
+	cteX AS 
+	(
+	SELECT 
+	isnull(sum(CASE WHEN h.IntakeDate BETWEEN @startDT1 AND @endDT1
+		THEN 1 ELSE 0 END), 0) AS X1
+	, isnull(sum(CASE WHEN h.IntakeDate BETWEEN @startDT2 AND @endDT2
+		THEN 1 ELSE 0 END), 0) AS X2
+	, isnull(sum(CASE WHEN h.IntakeDate BETWEEN @startDT3 AND @endDT3
+		THEN 1 ELSE 0 END), 0) AS X3
+	FROM HVCase h
+		INNER JOIN CaseProgram cp ON cp.HVCaseFK = h.HVCasePK
+		inner join dbo.SplitString(@ProgramFK,',') on cp.programfk = listitem
+	WHERE (h.IntakeDate IS NOT NULL OR cp.DischargeDate IS NOT NULL)
+	AND h.IntakeDate BETWEEN @startDT1 AND @endDT3
+	)
+	
+	, 
+	cteDateName AS
+	(
+	  SELECT 
+	  DATENAME(month ,@startDT1) + ' ' + convert(varchar(4), datepart(yyyy, @startDT1)) [d1_name]
+	, DATENAME(month ,@startDT2) + ' ' + convert(varchar(4), datepart(yyyy, @startDT2)) [d2_name]
+	, DATENAME(month ,@startDT3) + ' ' + convert(varchar(4), datepart(yyyy, @startDT3)) [d3_name]
+	
+	)
+	
+	, 
+	cteStartEndDate AS
+	(
+	  SELECT 
+	  convert(VARCHAR(10), @startDT, 101) + ' - ' + convert(VARCHAR(10), @endDT, 101) AS [start_end]
+	  , convert(VARCHAR(10), @startDTRetention, 101) + ' - ' + convert(VARCHAR(10), @endDTRetention, 101) AS [start_end_retention]
+	
+	)
+	
+    -- test A/B
+	--SELECT * FROM cteProgramCapacity
+	
+	-- test C/D
+	--SELECT * FROM cteScreen
+	
+	-- test E/F
+	--SELECT * FROM cteKempe
+	
+	-- test G
+    --SELECT * FROM cteAcceptanceRate
+    
+    -- test H
+    --select * FROM cteRetention 
+    
+  -- SELECT * FROM cteCombined
+
+
+  
+   SELECT * 
+   FROM cteRpt
+   LEFT	OUTER JOIN cteD ON 1 = 1
+   LEFT	OUTER JOIN cteF ON 1 = 1
+   LEFT	OUTER JOIN cteX ON 1 = 1
+   LEFT	OUTER JOIN cteDateName ON 1 = 1
+   LEFT	OUTER JOIN cteStartEndDate ON 1 = 1
+GO
diff --git a/Stored Procedures/dbo.rspClosedEnrolledCaseList.sql b/Stored Procedures/dbo.rspClosedEnrolledCaseList.sql
new file mode 100644
index 0000000..edf8499
--- /dev/null
+++ b/Stored Procedures/dbo.rspClosedEnrolledCaseList.sql
@@ -0,0 +1,136 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		Dar Chen
+-- Create date: 06/12/2012
+-- Description:	Closed Enrolled Case List
+-- exec rspClosedEnrolledCaseList 1,'20120701','20120731',null 1
+-- exec rspClosedEnrolledCaseList_original 1,'20120701','20120731'
+-- Edit date: 10/11/2013 CP - workerprogram was duplicating cases when worker transferred
+--            added this code to the workerprogram join condition: AND wp.programfk = listitem
+-- =============================================
+CREATE procedure [dbo].[rspClosedEnrolledCaseList]-- Add the parameters for the stored procedure here
+    @programfk VARCHAR(MAX) = null,
+    @StartDt   datetime,
+    @EndDt     datetime,
+	@WorkerFK  int = NULL,
+    @SiteFK    int = 0,
+    @CaseFiltersPositive varchar(100) = ''
+AS
+
+if @programfk is null
+	begin
+		select @programfk =
+			   substring((select ','+LTRIM(RTRIM(STR(HVProgramPK)))
+							  from HVProgram
+							  for xml path ('')),2,8000)
+	END
+set @programfk = REPLACE(@programfk,'"','')
+
+	--DECLARE @StartDt DATE = '01/01/2011'
+	--DECLARE @EndDt DATE = '05/31/2011'
+	--DECLARE @programfk INT = 17
+	set @SiteFK = isnull(@SiteFK, 0)
+	set @CaseFiltersPositive = case	when @CaseFiltersPositive = '' then null
+									else @CaseFiltersPositive
+							   end;
+	
+	select rtrim(PC.PCLastName)+cast(PC.PCPK as varchar(10)) [key01]
+	      , cp.PC1ID
+		  ,rtrim(PC.PCLastName)+', '+rtrim(PC.PCFirstName) [Name]
+		  ,convert(varchar(12),PC.PCDOB,101) [DOB]
+		  ,PC.SSNo [SSNo]
+		  ,convert(varchar(12),Kempe.KempeDate,101) [KemptDate]
+		  ,convert(varchar(12),HVScreen.ScreenDate,101) [ScreenDate]
+		  ,rtrim(w.LastName)+', '+rtrim(w.FirstName) [FSW]
+		  ,convert(varchar(12),Intake.IntakeDate,101) [IntakeDate]
+		  ,CAST(DATEDIFF(year,PC.PCDOB,Intake.IntakeDate) as varchar(10))+' y' [AgeAtIntake]
+		  ,case when cp.DischargeDate is null then '' else convert(varchar(12),cp.DischargeDate,101) end [CloseDate]
+		  ,case when cp.DischargeDate is null then 'Case Open' else rtrim(codeDischarge.DischargeReason) end [CloseReason]
+		  
+		  --,CAST(DATEDIFF(month,Intake.IntakeDate,@EndDt) as varchar(10))+' m' [LengthInProgram]
+		  ,CASE WHEN cp.DischargeDate is NOT NULL THEN CAST(DATEDIFF(month,Intake.IntakeDate,cp.DischargeDate) as varchar(10))+' m' ELSE 
+		   CAST(DATEDIFF(month,Intake.IntakeDate,@EndDt) as varchar(10))+' m' END [LengthInProgram]
+		  
+		  ,case when ca.TANFServices = 1 then 'Yes' else 'No' end [TANF]
+		  ,case when ca.FormType = 'IN' then 'Intake' else (select top 1 codeApp.AppCodeText
+																from codeApp
+																where ca.FormInterval = codeApp.AppCode
+																	 and codeApp.AppCodeUsedWhere like '%FU%'
+																	 and codeApp.AppCodeGroup = 'TCAge'
+														   ) end [TANFServiceAt]
+		  ,convert(varchar(12),ca.FormDate,101) [Eligible]
+		  ,(select count(*)
+				from HVLog
+				inner join CaseProgram cp1 on cp1.HVCaseFK = HVLog.HVCaseFK
+				join dbo.SplitString(@programfk,',') on cp1.programfk = listitem
+				inner join dbo.udfCaseFilters(@casefilterspositive, '', @programfk) cf on cf.HVCaseFK = cp1.HVCaseFK
+				inner join WorkerProgram wp1 on wp1.WorkerFK = cp1.CurrentFSWFK AND wp1.programfk = listitem
+				where VisitType <> '0001'
+					 and cast(VisitStartTime AS DATE) <= @EndDt
+					 and cast(VisitStartTime AS DATE) >= c.IntakeDate
+					 and HVLog.HVCaseFK = c.HVCasePK
+					 --and HVLog.ProgramFK = @programfk
+					 and (case when @SiteFK = 0 then 1 when wp1.SiteFK = @SiteFK then 1 else 0 end = 1)) [HomeVisits]
+		  -- following fields are used for validating (to be removed)
+		  ,(select top 1 ca1.CommonAttributesPK
+				from CommonAttributes ca1
+				where ca1.HVCaseFK = c.HVCasePK
+					 and ca1.FormDate <= @EndDt
+					 and ca1.FormType in ('FU','IN')
+				order by ca1.FormDate desc
+		   ) [CommonAttributesPKID]
+		  ,ca.FormDate
+		  ,ca.TANFServices
+		  ,ca.FormType
+		  ,ca.FormInterval
+		  ,rtrim(T.TCLastName)+', '+rtrim(T.TCFirstName) [tcName]
+		  ,convert(varchar(12),T.TCDOB,101) [tcDOB]
+
+		from CaseProgram cp
+		    join dbo.SplitString(@programfk,',') on cp.programfk = listitem
+			join HVCase c on cp.HVCaseFK = c.HVCasePK
+			-- pc1 name, dob, and SS# =  c.PC1FK <-> PC.PCPK -> PC.PCLastName + PC.PCFirstName, PC.PCDOB, PC.SSNo
+			join PC on PC.PCPK = c.PC1FK
+			-- screen date = cp.HVCaseFK <-> Kempe.HVCaseFK -> Kempe.KempeDate
+			join Kempe on Kempe.HVCaseFK = c.HVCasePK
+			-- kempe date = cp.HVCaseFK <-> HVScreen.HVCaseFK -> HVScreen.ScreenDate
+			join HVScreen on HVScreen.HVCaseFK = c.HVCasePK
+			-- FSW & site = cp.CurrentFSWFK <-> Worker.WorkerPK -> Worker.LastName + Worker.FirstName ?? site ??
+			left outer join Worker w on w.WorkerPK = cp.CurrentFSWFK and w.WorkerPK = isnull(@WorkerFK, w.WorkerPK)
+			join Workerprogram as wp on wp.WorkerFK = w.WorkerPK AND wp.programfk = @programfk
+			-- intake date & age at intake = cp.HVCaseFK <-> Intake.HVCaseFK -> Intake.IntakeDate -> (PCDOB - IntakeDate)
+			join Intake on Intake.HVCaseFK = c.HVCasePK
+			-- closed date & close reason = cp.DischargeDate, cp.DischargeReason <-> codeDischarge.DischargeCode 
+			--                              -> codeDischarge.DischargeReason
+			left outer join codeDischarge on cp.DischargeReason = codeDischarge.DischargeCode
+			-- length in program = @EndDt - IntakeDate
+
+			-- TANFservices, &  eligible = CA (CommonAttributes) : cp.HVCaseFK <-> CA.HVCaseFK and CA.FormType IN ('FU', 'IN')
+			-- , CA.FormDate <= @EndDt and CA.TANFServices = 1 
+			-- if CA.FormType = 'IN' then FormInterval = 'In Take' else CA.FormInterval <-> codeApp.AppCode and
+			-- codeApp.AppCodeUsedWhere LIKE '%FU%' and AppCodeGroup = 'TCAge' -> codeApp.AppCodeText
+			-- CA.FormDate = Eligible date
+			-- CA.TANFServices = TANF
+			-- ON ca.HVCaseFK =  c.HVCasePK AND ca.FormDate <= @EndDt AND ca.FormType IN ('FU', 'IN')
+			left outer join CommonAttributes ca
+						   on ca.CommonAttributesPK = (select top 1 CommonAttributesPK
+														   from CommonAttributes
+														   where HVCaseFK = c.HVCasePK
+																and FormDate <= @EndDt
+																and FormType in ('FU','IN')
+														   order by FormDate desc)
+
+			-- # of actual home visits since intake = cp.HVCaseFK <-> HVLog.HVCaseFK, ProgramFK, 
+			-- VisitType <> '0001', VisitStartTime < @EndDt and VisitStartTime >=  c.IntakeDate
+
+			left outer join TCID T on T.HVCaseFK = c.HVCasePK
+			inner join dbo.udfCaseFilters(@casefilterspositive, '', @programfk) cf on cf.HVCaseFK = c.HVCasePK
+
+		where cp.DischargeDate between @StartDt and @EndDt
+			 --and cp.ProgramFK = @programfk
+			 and (case when @SiteFK = 0 then 1 when wp.SiteFK = @SiteFK then 1 else 0 end = 1)
+		order by [key01]
+GO
diff --git a/Stored Procedures/dbo.rspHFAHomeVisitCompletionRate_Detail.sql b/Stored Procedures/dbo.rspHFAHomeVisitCompletionRate_Detail.sql
new file mode 100644
index 0000000..97acaf4
--- /dev/null
+++ b/Stored Procedures/dbo.rspHFAHomeVisitCompletionRate_Detail.sql
@@ -0,0 +1,224 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		<Jay Robohn>
+-- Create date: <Jan 4, 2012>
+-- Description:	<Converted FamSys report - Home Visit Achievement Rate - Aggregate>
+-- [rspHFAHomeVisitCompletionRate_Detail] 9
+-- =============================================
+CREATE procedure [dbo].[rspHFAHomeVisitCompletionRate_Detail](@programfk    varchar(max)    = null,
+                                                        @sdate        datetime,
+                                                        @edate        datetime,
+                                                        @supervisorfk int             = null,
+                                                        @workerfk     int             = null,
+														@sitefk		 int			 = null,
+														@posclause	 varchar(200), 
+														@negclause	 varchar(200)
+                                                        )
+
+as
+begin
+
+	if @programfk is null
+	begin
+		select @programfk =
+			   substring((select ','+LTRIM(RTRIM(STR(HVProgramPK)))
+							  from HVProgram
+							  for xml path ('')),2,8000)
+	end;
+
+	set @SiteFK = case when dbo.IsNullOrEmpty(@SiteFK) = 1 then 0 else @SiteFK end
+	set @posclause = case when @posclause = '' then null else @posclause end;
+	set @negclause = case when @negclause = '' then null else @negclause end;
+
+	with cteHVRecords
+	as
+	(select distinct rtrim(firstname)+' '+rtrim(lastname) as workername
+					,hvr.workerfk
+					,count(distinct casefk) as casecount
+					,pc1id
+					, hvlevelpk
+					,startdate
+					,enddate
+					,hvr.levelname
+					,(select max(hld.StartLevelDate)
+						  from hvleveldetail hld
+						  where hvr.casefk = hld.hvcasefk
+							   and StartLevelDate <= @edate
+							   and hvr.programfk = hld.programfk) as levelstart
+					,floor(reqvisit) as expvisitcount
+					,sum(case
+							 when visittype <> '0001' then
+								 1
+							 else
+								 0
+						 end) as actvisitcount
+					,sum(case
+							 when substring(visittype,1,1) = '1' or substring(visittype,2,1) = '1' then
+								 1
+							 else
+								 0
+						 end) as inhomevisitcount
+					,sum(case
+							 when visittype = '0001' then
+								 1
+							 else
+								 0
+						 end) as attvisitcount
+					,(dateadd(mi,sum(visitlengthminute),dateadd(hh,sum(visitlengthhour),'01/01/2001'))) DirectServiceTime
+					,sum(visitlengthminute)+sum(visitlengthhour)*60 as visitlengthminute
+					,sum(visitlengthhour) as visitlengthhour
+					,dischargedate
+					,pc1id+convert(char(10),hvr.workerfk) as pc1wrkfk --use for a distinct unique field for the OVER(PARTITION BY) above	
+					,hvr.casefk
+		 from [dbo].[udfHVRecords](@programfk,@sdate,@edate) hvr
+			 inner join worker on workerpk = hvr.workerfk
+			 inner join workerprogram wp on wp.workerfk = workerpk
+			 inner join dbo.SplitString(@programfk,',') on wp.programfk = listitem
+			 inner join dbo.udfCaseFilters(@posclause, @negclause, @programfk) cf on cf.HVCaseFK = hvr.casefk
+		 where workerpk = isnull(@workerfk,workerpk)
+			  and supervisorfk = isnull(@supervisorfk,supervisorfk)
+			  and startdate < enddate --Chris Papas 05/25/2011 due to problem with pc1id='IW8601030812'
+			  and (case when @SiteFK = 0 then 1 when wp.SiteFK = @SiteFK then 1 else 0 end = 1)
+		 group by firstname
+				 ,lastname
+				 ,hvr.workerfk
+				 ,pc1id
+				 ,startdate
+				 ,enddate
+				 ,hvr.levelname
+				 ,reqvisit
+				 ,dischargedate
+				 ,hvr.casefk
+				 ,hvr.programfk
+				, hvlevelpk
+	)
+	,
+	cteLevelChanges
+	as
+	(select casefk
+		   ,count(casefk)-1 as LevelChanges
+		 from cteHVRecords
+		 group by casefk
+	)
+	,
+	cteSummary
+	as
+	(select distinct workername
+					,workerfk
+					,pc1id
+					,casecount
+					--EDIT: Chris Papas 10/11/2013
+					--removed max(hvlevelpk) bringing in wrong pk when someone inserts a previous level (e.g. hvlevelpk is larger, but levelstart is not)
+					--, max(hvlevelpk) over (partition by pc1id ) as  'UseThisLevelPK'
+					--END 10/11/2013 EDIT
+					
+					
+					,(select top 1 levelname
+						  from hvleveldetail hld
+						  where hld.hvcasefk = hvr.casefk
+							   and hld.StartLevelDate = hvr.levelstart
+							   ) as levelname
+							   		   
+					,sum(visitlengthminute) over (partition by pc1wrkfk ) as 'Minutes'
+					,sum(expvisitcount) over (partition by pc1wrkfk ) as expvisitcount
+					,min(startdate) over (partition by pc1wrkfk ) as 'startdate'
+					,max(enddate) over (partition by pc1wrkfk ) as 'enddate'
+					--,levelname
+					,max(levelstart) over (partition by pc1wrkfk ) as 'levelstart'
+					,sum(actvisitcount) over (partition by pc1wrkfk ) as actvisitcount
+					,sum(inhomevisitcount) over (partition by pc1wrkfk ) as inhomevisitcount
+					,sum(attvisitcount) over (partition by pc1wrkfk ) as attvisitcount
+					,max(dischargedate) over (partition by pc1wrkfk ) as 'dischargedate'
+					,IntakeDate
+					,case when TCDOB is null
+							then EDC
+						  else TCDOB
+					end as TCDOB
+					,LevelChanges
+		 from cteHVRecords hvr
+			 inner join cteLevelChanges on cteLevelChanges.casefk = hvr.casefk
+			 inner join HVCase c on hvr.casefk = c.HVCasePK
+	)
+	,
+	cteMain
+	as
+	-- make the aggregate table
+	(select distinct workername
+					,workerfk
+					,pc1id
+					,casecount
+					,dateadd(yy,(2003-1900),0)+dateadd(mm,11-1,0)+6-1+dateadd(mi,minutes,0) as DirectServiceTime
+					,expvisitcount
+					,startdate
+					,enddate
+					,levelname
+					--, (select levelname  from HVLevel inner join codeLevel l on l.codeLevelPK = HVLevel.LevelFK
+					--		where HVLevel.HVLevelPK=UseThisLevelPK) as levelname
+					--CHRIS PAPAS - below line was bringing in duplicates (ex. AL8713016704 for July 2010 - June 2011)
+					 --, (SELECT TOP 1 levelname ORDER BY enddate) AS levelname
+					 ,levelstart
+					,actvisitcount
+					,inhomevisitcount
+					,attvisitcount
+					,case
+						 when actvisitcount is null or actvisitcount = 0
+							 then
+							 0
+						 when expvisitcount is null or expvisitcount = 0
+							 then
+							 1
+						 else
+							 case
+								 when (actvisitcount/(expvisitcount*1.000)) > 1
+									 then
+									 1
+								 else
+									 actvisitcount/(expvisitcount*1.000)
+							 end
+					 end as VisitRate
+					,case
+						 when inhomevisitcount is null or inhomevisitcount = 0
+							 then
+							 0
+						 when expvisitcount is null or expvisitcount = 0
+							 then
+							 1
+						 else
+							 case
+								 when (inhomevisitcount/(case when expvisitcount>=actvisitcount then actvisitcount else expvisitcount end*1.000)) > 1
+									 then
+									 1
+								 else
+									 inhomevisitcount/(case when expvisitcount>=actvisitcount then actvisitcount else expvisitcount end*1.000)
+							 end
+					 end as InHomeRate
+					,dischargedate
+					,IntakeDate
+					,TCDOB
+					,LevelChanges
+		 from cteSummary
+	)
+	select *
+		  ,case
+			   when expvisitcount = 0
+				   then
+				   0
+			   when VisitRate >= .9 and InHomeRate >= .75
+				   then
+				   3
+			   when VisitRate >= .75 and InHomeRate >= .75
+				   then
+				   2
+			   else
+				   1
+		   end as ScoreForCase
+		from cteMain
+		where isnull(dischargedate, getdate()) > @sdate
+		order by WorkerName
+				,pc1id
+
+end
+GO
diff --git a/Stored Procedures/dbo.rspHFAHomeVisitCompletionRate_Summary.sql b/Stored Procedures/dbo.rspHFAHomeVisitCompletionRate_Summary.sql
new file mode 100644
index 0000000..76ff59a
--- /dev/null
+++ b/Stored Procedures/dbo.rspHFAHomeVisitCompletionRate_Summary.sql
@@ -0,0 +1,217 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		<Jay Robohn>
+-- Create date: <Jan 4, 2012>
+-- Description:	<Converted FamSys report - Home Visit Achievement Rate - Aggregate>
+-- Edit date: 10/11/2013 CP - workerprogram was NOT duplicating transferred workers - YEAH!
+
+-- =============================================
+CREATE procedure [dbo].[rspHFAHomeVisitCompletionRate_Summary](@programfk    varchar(max)    = null,
+                                                       @sdate        datetime,
+                                                       @edate        datetime,
+                                                       @supervisorfk int             = null,
+                                                       @workerfk     int             = null,
+                                                       @sitefk		 int			 = null,
+                                                       @posclause	 varchar(200), 
+                                                       @negclause	 varchar(200)
+                                                       )
+
+as
+begin
+
+	if @programfk is null
+	begin
+		select @programfk =
+			   substring((select ','+LTRIM(RTRIM(STR(HVProgramPK)))
+							  from HVProgram
+							  for xml path ('')),2,8000)
+	end;
+
+	set @SiteFK = case when dbo.IsNullOrEmpty(@SiteFK) = 1 then 0 else @SiteFK end
+	set @posclause = case when @posclause = '' then null else @posclause end;
+	set @negclause = case when @negclause = '' then null else @negclause end;
+
+	with cteHVRecords
+	as
+	(select distinct rtrim(firstname)+' '+rtrim(lastname) as workername
+					,hvr.workerfk
+					,count(distinct casefk) as casecount
+					,pc1id
+					,startdate
+					,enddate
+					,hvr.levelname
+					,(select max(hld.StartLevelDate)
+						  from hvleveldetail hld
+						  where hvr.casefk = hld.hvcasefk
+							   and StartLevelDate <= @edate
+							   and hvr.programfk = hld.programfk) as levelstart
+					,floor(reqvisit) as expvisitcount
+					,sum(case
+							 when visittype <> '0001' then
+								 1
+							 else
+								 0
+						 end) as actvisitcount
+					,sum(case
+							 when substring(visittype,1,1) = '1' or substring(visittype,2,1) = '1' then
+								 1
+							 else
+								 0
+						 end) as inhomevisitcount
+					,sum(case
+							 when visittype = '0001' then
+								 1
+							 else
+								 0
+						 end) as attvisitcount
+					,(dateadd(mi,sum(visitlengthminute),dateadd(hh,sum(visitlengthhour),'01/01/2001'))) DirectServiceTime
+					,sum(visitlengthminute)+sum(visitlengthhour)*60 as visitlengthminute
+					,sum(visitlengthhour) as visitlengthhour
+					,dischargedate
+					,pc1id+convert(char(10),hvr.workerfk) as pc1wrkfk --use for a distinct unique field for the OVER(PARTITION BY) above	
+					 ,hvr.casefk
+		 from [dbo].[udfHVRecords](@programfk,@sdate,@edate) hvr
+			 inner join worker on workerpk = hvr.workerfk
+			 inner join workerprogram wp on wp.workerfk = workerpk
+			 inner join dbo.SplitString(@programfk,',') on wp.programfk = listitem
+			 inner join dbo.udfCaseFilters(@posclause, @negclause, @programfk) cf on cf.HVCaseFK = hvr.casefk
+		 where workerpk = isnull(@workerfk,workerpk)
+			  and supervisorfk = isnull(@supervisorfk,supervisorfk)
+			  and startdate < enddate --Chris Papas 05/25/2011 due to problem with pc1id='IW8601030812'
+			  and (case when @SiteFK = 0 then 1 when wp.SiteFK = @SiteFK then 1 else 0 end = 1)
+		 group by firstname
+				 ,lastname
+				 ,hvr.workerfk
+				 ,pc1id
+				 ,startdate
+				 ,enddate
+				 ,hvr.levelname
+				 ,reqvisit
+				 ,dischargedate
+				 ,hvr.casefk
+				 ,hvr.programfk --,hld.StartLevelDate
+	)
+	,
+	cteLevelChanges
+	as
+	(select casefk
+		   ,count(casefk)-1 as LevelChanges
+		 from cteHVRecords
+		 group by casefk
+	)
+	,
+	cteSummary
+	as
+	(select distinct workername
+					,workerfk
+					,pc1id
+					,casecount
+					,sum(visitlengthminute) over (partition by pc1wrkfk) as 'Minutes'
+					,sum(expvisitcount) over (partition by pc1wrkfk) as expvisitcount
+					,min(startdate) over (partition by pc1wrkfk) as 'startdate'
+					,max(enddate) over (partition by pc1wrkfk) as 'enddate'
+					,levelname
+					,max(levelstart) over (partition by pc1wrkfk) as 'levelstart'
+					,sum(actvisitcount) over (partition by pc1wrkfk) as actvisitcount
+					,sum(inhomevisitcount) over (partition by pc1wrkfk) as inhomevisitcount
+					,sum(attvisitcount) over (partition by pc1wrkfk) as attvisitcount
+					,max(dischargedate) over (partition by pc1wrkfk) as 'dischargedate'
+					,IntakeDate
+					,case when TCDOB is null
+							then EDC
+						  else TCDOB
+					end as TCDOB
+					,LevelChanges
+		 from cteHVRecords hvr
+			 inner join cteLevelChanges on cteLevelChanges.casefk = hvr.casefk
+			 inner join HVCase c on hvr.casefk = c.HVCasePK
+	)
+	,
+	cteMain
+	as
+	-- make the aggregate table
+	(select distinct workername
+					,workerfk
+					,pc1id
+					,casecount
+					,dateadd(yy,(2003-1900),0)+dateadd(mm,11-1,0)+6-1+dateadd(mi,minutes,0) as DirectServiceTime
+					,expvisitcount
+					,startdate
+					,enddate
+					,max(levelname) over (partition by pc1id) as levelname
+					--CHRIS PAPAS - below line was bringing in duplicates (ex. AL8713016704 for July 2010 - June 2011)
+					 --, (SELECT TOP 1 levelname ORDER BY enddate) AS levelname
+					 ,levelstart
+					,actvisitcount
+					,inhomevisitcount
+					,attvisitcount
+					,case
+						 when actvisitcount is null or actvisitcount = 0
+							 then
+							 0
+						 when expvisitcount is null or expvisitcount = 0
+							 then
+							 1
+						 else
+							 case
+								 when (actvisitcount/(expvisitcount*1.000)) > 1
+									 then
+									 1
+								 else
+									 actvisitcount/(expvisitcount*1.000)
+							 end
+					 end as VisitRate
+					,case
+						 when inhomevisitcount is null or inhomevisitcount = 0
+							 then
+							 0
+						 when expvisitcount is null or expvisitcount = 0
+							 then
+							 1
+						 else
+							 case
+								 when (inhomevisitcount/(case when expvisitcount>=actvisitcount then actvisitcount else expvisitcount end*1.000)) > 1
+									 then
+									 1
+								 else
+									 inhomevisitcount/(case when expvisitcount>=actvisitcount then actvisitcount else expvisitcount end*1.000)
+							 end
+					 end as InHomeRate
+					,dischargedate
+					,IntakeDate
+					,TCDOB
+					,LevelChanges
+		 from cteSummary
+	), 
+	cteMainWithScores as 
+	(select *
+		  ,case
+			   when expvisitcount = 0
+				   then
+				   0
+			   when VisitRate >= .9 and InHomeRate >= .75
+				   then
+				   3
+			   when VisitRate >= .75 and InHomeRate >= .75
+				   then
+				   2
+			   else
+				   1
+		   end as ScoreForCase
+		from cteMain
+	)
+	select *
+			,case when ScoreForCase=1 then 1 else 0 end as ScoreForCase1
+			,case when ScoreForCase=2 then 1 else 0 end as ScoreForCase2
+			,case when ScoreForCase=3 then 1 else 0 end as ScoreForCase3
+		from cteMainWithScores
+		where expvisitcount > 0
+				and not (levelname = 'Level X' and levelstart < @sdate)
+		order by WorkerName
+				,pc1id
+
+end
+GO
diff --git a/Stored Procedures/dbo.rspHomeVisitLogSummaryQuarterly.sql b/Stored Procedures/dbo.rspHomeVisitLogSummaryQuarterly.sql
new file mode 100644
index 0000000..1b3bef5
--- /dev/null
+++ b/Stored Procedures/dbo.rspHomeVisitLogSummaryQuarterly.sql
@@ -0,0 +1,385 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		Dar Chen
+-- Create date: Jul/23/2012
+-- Description:	Home Visit Log Summary Quarterly
+-- Edit date: 10/11/2013 CP - workerprogram was duplicating cases when worker transferred
+-- =============================================
+CREATE procedure [dbo].[rspHomeVisitLogSummaryQuarterly]
+    @programfk VARCHAR(MAX) = null,
+    @StartDt   datetime,
+    @EndDt     datetime,
+    @StartDtX    datetime,
+    @EndDtX     datetime,
+    @SiteFK	   int = null,
+    @casefilterspositive varchar(200)
+as
+
+--DECLARE	@programfk int = 4
+--DECLARE @StartDt   DATETIME = '09/01/2012'
+--DECLARE @EndDt     DATETIME = '11/30/2012'
+--DECLARE @SiteFK	   int = null
+--DECLARE @casefilterspositive varchar(200) = null
+--DECLARE @StartDtX   DATETIME = '09/01/2012'
+--DECLARE @EndDtX     DATETIME = '11/30/2012'
+
+if @programfk is null
+  begin
+	select @programfk = substring((select ','+ltrim(rtrim(str(HVProgramPK)))
+									   from HVProgram
+									   for xml path ('')),2,8000)
+  end
+set @programfk = replace(@programfk,'"','')
+
+	--declare @xDate datetime = '07/01/'+str(year(@StartDt))
+	--declare @StartDtX datetime = case when @xDate > @StartDt then '07/01/'+str(year(@StartDt)-1) else @xDate end
+	--declare @EndDtX datetime = @EndDt
+
+	set @SiteFK = case when dbo.IsNullOrEmpty(@SiteFK) = 1 then 0 else @SiteFK end
+	set @casefilterspositive = case when @casefilterspositive = '' then null else @casefilterspositive end
+
+	declare @x int = 0
+	declare @y int = 0
+	declare @OutOfHome int = 0
+	select
+		  @y = count(*)
+		 ,@x = sum(case when substring(a.VisitType,4,1) = '1' then 0 else 1 end)
+		 ,@OutOfHome = sum(case when substring(a.VisitType,4,1) != '1' and substring(a.VisitType,3,1) = '1' then 1 else 0 end)
+		from HVLog as a
+			join CaseProgram as b on b.HVCaseFK = a.HVCaseFK
+			INNER JOIN dbo.SplitString(@programfk,',') on b.programfk = listitem
+			inner join WorkerProgram wp on WorkerFK = FSWFK AND wp.programfk = listitem
+			inner join dbo.udfCaseFilters(@casefilterspositive,'', @programfk) cf on cf.HVCaseFK = b.HVCaseFK
+		where 
+		--b.ProgramFK = @programfk and 
+		cast(a.VisitStartTime as date)  between @StartDt and @EndDt --jh fix
+		--and (b.DischargeDate is null
+		--or b.DischargeDate > @EndDt)
+		and (case when @SiteFK = 0 then 1 when wp.SiteFK = @SiteFK then 1 else 0 end = 1)
+	if @x = 0
+	begin
+		set @x = 1
+	end
+	if @y = 0
+	begin
+		set @y = 1
+	end
+	if @OutOfHome = 0
+	begin
+		set @OutOfHome = 1
+	end
+
+	--SELECT @StartDt, @StartDtX
+--cast(VisitStartTime as date) 
+	declare @xX int = 0
+	declare @yX int = 0
+	declare @OutOfHomeX int = 0
+	select
+		  @yX = count(*)
+		 ,@xX = sum(case when substring(a.VisitType,4,1) = '1' then 0 else 1 end)
+		 ,@OutOfHomeX = sum(case when substring(a.VisitType,4,1) != '1' and substring(a.VisitType,3,1) = '1' then 1 else 0 end)
+		from HVLog as a
+			join CaseProgram as b on b.HVCaseFK = a.HVCaseFK
+			INNER JOIN dbo.SplitString(@programfk,',') on b.programfk = listitem
+			inner join WorkerProgram wp on WorkerFK = FSWFK AND wp.programfk = listitem
+			inner join dbo.udfCaseFilters(@casefilterspositive,'', @programfk) cf on cf.HVCaseFK = b.HVCaseFK
+		where 
+		--b.ProgramFK = @programfk and 
+		cast(a.VisitStartTime as date)  between @StartDtX and @EndDtX
+		--and (b.DischargeDate is null
+		--or b.DischargeDate > @EndDtX)
+		and (case when @SiteFK = 0 then 1 when wp.SiteFK = @SiteFK then 1 else 0 end = 1)
+	if @xX = 0
+	begin
+		set @xX = 1
+	end
+	if @yX = 0
+	begin
+		set @yX = 1
+	end
+	if @OutOfHomeX = 0
+	begin
+		set @OutOfHomeX = 1
+	end
+
+	;
+	with q1
+	as
+	(
+	select
+		  sum(case when substring(c.VisitType,4,1) <> '1' then 1 else 0 end) as [n]
+		 ,sum(case when substring(c.VisitType,4,1) = '1' then 1 else 0 end) [Attemped]
+		 ,avg(case when substring(c.VisitType,4,1) != '1' 
+		 then (c.VisitLengthHour * 60 + c.VisitLengthMinute) else null end) [AverageLength]
+		 ,str(sum(case when isnull(a.TCDOB,a.EDC) >= cast(c.VisitStartTime as date)  then 1 else 0 end)*100.0/@y,10,0)+'%' [Prenatal]
+		 ,str(sum(case when isnull(a.TCDOB,a.EDC) < cast(c.VisitStartTime as date) then 1 else 0 end)*100.0/@y,10,0)+'%' [Postnatal]
+		 
+		 -- type of visit
+		 ,str(sum(case when c.VisitType = '1000' then 1 else 0 end)*100.0/@x,10,0)+'%' [InPC1HomeOnly]
+		 ,str(sum(case when c.VisitType = '0100' then 1 else 0 end)*100.0/@x,10,0)+'%' [InFatherFigureOBPHomeOnly]
+		 ,str(sum(case when c.VisitType = '1010' then 1 else 0 end)*100.0/@x,10,0)+'%' [InOutOfPC1Home]
+		 ,str(sum(case when c.VisitType = '0110' then 1 else 0 end)*100.0/@x,10,0)+'%' [InOutOfFatherFigureOBPHome]
+		 ,str(sum(case when c.VisitType = '1100' then 1 else 0 end)*100.0/@x,10,0)+'%' [InBothPC1FatherFigureOBPHome]
+		 ,str(sum(case when c.VisitType = '0010' then 1 else 0 end)*100.0/@x,10,0)+'%' [OutOfBothPC1FatherFigureOBPHome]
+		 ,str(sum(case when c.VisitType = '1110' then 1 else 0 end)*100.0/@x,10,0)+'%' [InBothPC1FatherFigureOBPHomeAndOutBoth]
+		 -- new type of visit
+		 
+		 
+		 ,str(sum(case when substring(c.VisitType,1,1) = '1' or substring(c.VisitType,2,1) = '1' then 1 else 0 end)
+		  *100.0/@x,10,0)+'%' [InParticipantHome]
+		 ,str(sum(case when substring(c.VisitType,3,1) = '1' and substring(c.VisitType,1,1) != '1'
+				  and substring(c.VisitType,2,1) != '1' then 1 else 0 end)*100.0/@x,10,0)+'%' [OutParticipantHome]
+		 ,str(sum(case when (substring(c.VisitType,1,1) = '1' or substring(c.VisitType,2,1) = '1')
+				  and substring(c.VisitType,3,1) = '1'
+				  then 1 else 0 end)*100.0/@x,10,0)+'%' [InOutParticipantHome]
+
+		 ,sum(case when substring(c.VisitType,4,1) != '1' and substring(c.VisitType,3,1) = '1' then 1 else 0 end) [OutOfHome]
+		 ,str(sum(case when substring(c.VisitType,3,1) = '1' and substring(c.VisitLocation,1,1) = '1' then 1 else 0 end)*100.0/
+			 @OutOfHome,10,0)+'%' [MedicalProviderOffice]
+		 ,str(sum(case when substring(c.VisitType,3,1) = '1' and substring(c.VisitLocation,2,1) = '1' then 1 else 0 end)*100.0/
+			 @OutOfHome,10,0)+'%' [OtherProviderOffice]
+		 ,str(sum(case when substring(c.VisitType,3,1) = '1' and substring(c.VisitLocation,3,1) = '1' then 1 else 0 end)*100.0/
+			 @OutOfHome,10,0)+'%' [HomeVisitOffice]
+		 ,str(sum(case when substring(c.VisitType,3,1) = '1' and substring(c.VisitLocation,4,1) = '1' then 1 else 0 end)*100.0/
+			 @OutOfHome,10,0)+'%' [Hospital]
+		 ,str(sum(case when substring(c.VisitType,3,1) = '1' and substring(c.VisitLocation,5,1) = '1' then 1 else 0 end)*100.0/
+			 @OutOfHome,10,0)+'%' [OtherLocation]
+
+		 ,str(sum(case when c.PC1Participated = 1 then 1 else 0 end)*100.0/@x,10,0)+'%' [PC1Participated]
+		 ,str(sum(case when c.PC2Participated = 1 then 1 else 0 end)*100.0/@x,10,0)+'%' [PC2Participated]
+		 ,str(sum(case when c.OBPParticipated = 1 then 1 else 0 end)*100.0/@x,10,0)+'%' [OBPParticipated]
+		 ,str(sum(case when c.FatherFigureParticipated = 1 then 1 else 0 end)*100.0/@x,10,0)+'%' [FatherFigureParticipated]
+		 ,str(sum(case when c.TCParticipated = 1 then 1 else 0 end)*100.0/@x,10,0)+'%' [TCParticipated]
+		 ,str(sum(case when c.GrandParentParticipated = 1 then 1 else 0 end)*100.0/@x,10,0)+'%' [GrandParentParticipated]
+		 ,str(sum(case when c.SiblingParticipated = 1 then 1 else 0 end)*100.0/@x,10,0)+'%' [SiblingParticipated]
+		 ,str(sum(case when c.NonPrimaryFSWParticipated = 1 then 1 else 0 end)*100.0/@x,10,0)+'%' [NonPrimaryFSWParticipated]
+		 -- new 
+		 ,str(sum(case when c.FatherAdvocateParticipated = 1 then 1 else 0 end)*100.0/@x,10,0)+'%' [FatherAdvocateParticipated]
+		 ,str(sum(case when c.HVSupervisorParticipated = 1 then 1 else 0 end)*100.0/@x,10,0)+'%' [HVSupervisorParticipated]
+		 ,str(sum(case when c.SupervisorObservation = 1 then 1 else 0 end)*100.0/@x,10,0)+'%' [SupervisorObservation]
+		 ,str(sum(case when c.OtherParticipated = 1 then 1 else 0 end)*100.0/@x,10,0)+'%' [OtherParticipated]
+
+/*
+	.PC1Participated = chkPC1Participated.Checked
+	.PC2Participated = chkPC2Participated.Checked
+	.OBPParticipated = chkOBPParticipated.Checked
+	.FatherFigureParticipated = chkFatherFigureParticipated.Checked	 ' new
+	.TCParticipated = chkTCParticipated.Checked
+	.GrandParentParticipated = chkGrandParentParticipated.Checked
+	.SiblingParticipated = chkSiblingParticipated.Checked
+	.NonPrimaryFSWParticipated = chkNonPrimaryFSWParticipated.Checked	 ' new
+	
+	.FatherAdvocateParticipated = chkFatherAdvocateParticipated.Checked	 ' new
+	.HVSupervisorParticipated = chkHVSupervisorParticipated.Checked
+	.SupervisorObservation = chkSupervisorObservation.Checked
+	.OtherParticipated = chkOtherParticipated.Checked
+*/
+
+
+
+		 ,str(sum(case when (isnull(c.CDChildDevelopment,'00') = '00' and isnull(c.CDToys,'00') = '00'
+				  and isnull(c.CDOther,'00') = '00') or substring(c.VisitType,4,1) = '1'
+				  then 0 else 1 end)*100.0/@x,10,0)+'%' [ChildDevelopment]
+
+		 ,str(sum(case when (isnull(c.PCChildInteraction,'00') = '00' and isnull(c.PCChildManagement,'00') = '00'
+				  and isnull(c.PCFeelings,'00') = '00' and isnull(c.PCStress,'00') = '00'
+				  and isnull(c.PCBasicNeeds,'00') = '00' and isnull(c.PCShakenBaby,'00') = '00' and isnull(c.PCShakenBabyVideo,
+					  '00') = '00'
+				  and isnull(c.PCOther,'00') = '00') or substring(c.VisitType,4,1) = '1' then 0 else 1 end)*100.0/@x,10,0)+'%' 
+					  [PCInteraction]
+
+		 ,str(sum(case when (isnull(c.HCGeneral,'00') = '00' and isnull(c.HCChild,'00') = '00' and isnull(c.HCDental,'00') = '00'
+				  and isnull(c.HCFeeding,'00') = '00' and isnull(c.HCBreastFeeding,'00') = '00'
+				  and isnull(c.HCNutrition,'00') = '00' and isnull(c.HCFamilyPlanning,'00') = '00' and isnull(c.HCProviders,'00') 
+					  = '00'
+				  and isnull(c.HCFASD,'00') = '00' and isnull(c.HCSexEducation,'00') = '00'
+				  and isnull(c.HCPrenatalCare,'00') = '00' and isnull(c.HCMedicalAdvocacy,'00') = '00' and isnull(c.HCSafety,'00') 
+					  = '00'
+				  and isnull(c.HCSmoking,'00') = '00' and isnull(c.HCSIDS,'00') = '00'
+				  and isnull(c.HCOther,'00') = '00') or substring(c.VisitType,4,1) = '1' then 0 else 1 end)*100.0/@x,10,0)+'%' 
+					  [HealthCare]
+
+		 ,str(sum(case when (isnull(c.FFDomesticViolence,'00') = '00' and isnull(c.FFFamilyRelations,'00') = '00'
+				  and isnull(c.FFSubstanceAbuse,'00') = '00'
+				  and isnull(c.FFMentalHealth,'00') = '00' and isnull(c.FFCommunication,'00') = '00'
+				  and isnull(c.FFOther,'00') = '00') or substring(c.VisitType,4,1) = '1'
+				  then 0 else 1 end)*100.0/@x,10,0)+'%' [FamilyFunction]
+
+		 ,str(sum(case when (isnull(c.SSCalendar,'00') = '00' and isnull(c.SSHousekeeping,'00') = '00'
+				  and isnull(c.SSTransportation,'00') = '00' and isnull(c.SSEmployment,'00') = '00'
+				  and isnull(c.SSMoneyManagement,'00') = '00' and isnull(c.SSChildCare,'00') = '00'
+				  and isnull(c.SSProblemSolving,'00') = '00' and isnull(c.SSEducation,'00') = '00' and isnull(c.SSJob,'00') = '00'
+				  and isnull(c.SSOther,'00') = '00') or substring(c.VisitType,4,1) = '1'
+				  then 0 else 1 end)*100.0/@x,10,0)+'%' [SelfSufficincy]
+
+		 ,str(sum(case when (isnull(c.CIProblems,'00') = '00' and isnull(c.CIOther,'00') = '00') or substring(c.VisitType,4,1) = 
+			 '1'
+				  then 0 else 1 end)*100.0/@x,10,0)+'%' [CrisisIntervention]
+
+		 ,str(sum(case when (isnull(c.PAForms,'00') = '00' and isnull(c.PAVideo,'00') = '00'
+				  and isnull(c.PAGroups,'00') = '00' and isnull(c.PAIFSP,'00') = '00'
+				  and isnull(c.PARecreation,'00') = '00' and isnull(c.PAOther,'00') = '00'
+				  ) or substring(c.VisitType,4,1) = '1'
+				  then 0 else 1 end)*100.0/@x,10,0)+'%' [ProgramActivity]
+
+		 ,str(sum(case when (isnull(c.CATransportation,'00') = '00' and isnull(c.CAGoods,'00') = '00' and isnull(c.CALegal,'00') = 
+			 '00'
+				  and isnull(c.CAHousing,'00') = '00'
+				  and isnull(c.CAAdvocacy,'00') = '00' and isnull(c.CATranslation,'00') = '00' and isnull(c.CALaborSupport,'00') = 
+					  '00'
+				  and isnull(c.CAChildSupport,'00') = '00'
+				  and isnull(c.CAParentRights,'00') = '00' and isnull(c.CAVisitation,'00') = '00' and isnull(c.CAOther,'00') = 
+					  '00')
+				  or substring(c.VisitType,4,1) = '1'
+				  then 0 else 1 end)*100.0/@x,10,0)+'%' [ConcreteAcivities]
+
+		from HVCase as a
+			join CaseProgram as b on b.HVCaseFK = a.HVCasePK
+			INNER JOIN dbo.SplitString(@programfk,',') on b.programfk = listitem
+			join HVLog as c on a.HVCasePK = c.HVCaseFK
+			inner join WorkerProgram wp on WorkerFK = FSWFK AND wp.programfk = listitem
+			inner join dbo.udfCaseFilters(@casefilterspositive,'', @programfk) cf on cf.HVCaseFK = a.HVCasePK
+		where 
+		--b.ProgramFK = @programfk and 
+		cast(c.VisitStartTime as date)  between @StartDt and @EndDt
+		--and (b.DischargeDate is null
+		--or b.DischargeDate > @EndDt)
+		and (case when @SiteFK = 0 then 1 when wp.SiteFK = @SiteFK then 1 else 0 end = 1)
+	),
+
+	---------------------------------------------------------------------
+
+	q2
+	as (
+
+	select
+		  sum(case when substring(c.VisitType,4,1) <> '1' then 1 else 0 end) as [nX]
+		 ,sum(case when substring(c.VisitType,4,1) = '1' then 1 else 0 end) [AttempedX]
+		 ,avg(case when substring(c.VisitType,4,1) != '1' 
+		 then (c.VisitLengthHour * 60 + c.VisitLengthMinute) else null end) [AverageLengthX]
+		 ,str(sum(case when isnull(a.TCDOB,a.EDC) >= cast(c.VisitStartTime as date) then 1 else 0 end)*100.0/@yX,10,0)+'%' [PrenatalX]
+		 ,str(sum(case when isnull(a.TCDOB,a.EDC) < cast(c.VisitStartTime as date) then 1 else 0 end)*100.0/@yX,10,0)+'%' [PostnatalX]
+
+         -- type of visit
+		 ,str(sum(case when c.VisitType = '1000' then 1 else 0 end)*100.0/@xX,10,0)+'%' [InPC1HomeOnlyX]
+		 ,str(sum(case when c.VisitType = '0100' then 1 else 0 end)*100.0/@xX,10,0)+'%' [InFatherFigureOBPHomeOnlyX]
+		 ,str(sum(case when c.VisitType = '1010' then 1 else 0 end)*100.0/@xX,10,0)+'%' [InOutOfPC1HomeX]
+		 ,str(sum(case when c.VisitType = '0110' then 1 else 0 end)*100.0/@xX,10,0)+'%' [InOutOfFatherFigureOBPHomeX]
+		 ,str(sum(case when c.VisitType = '1100' then 1 else 0 end)*100.0/@xX,10,0)+'%' [InBothPC1FatherFigureOBPHomeX]
+		 ,str(sum(case when c.VisitType = '0010' then 1 else 0 end)*100.0/@xX,10,0)+'%' [OutOfBothPC1FatherFigureOBPHomeX]
+		 ,str(sum(case when c.VisitType = '1110' then 1 else 0 end)*100.0/@xX,10,0)+'%' [InBothPC1FatherFigureOBPHomeAndOutBothX]
+		 -- new type of visit
+
+
+		 ,str(sum(case when substring(c.VisitType,1,1) = '1' or substring(c.VisitType,2,1) = '1' then 1 else 0 end)
+		  *100.0/@xX,10,0)+'%' [InParticipantHomeX]
+		 ,str(sum(case when substring(c.VisitType,3,1) = '1' and substring(c.VisitType,1,1) != '1'
+				  and substring(c.VisitType,2,1) != '1' then 1 else 0 end)*100.0/@xX,10,0)+'%' [OutParticipantHomeX]
+		 ,str(sum(case when (substring(c.VisitType,1,1) = '1' or substring(c.VisitType,2,1) = '1')
+				  and substring(c.VisitType,3,1) = '1'
+				  then 1 else 0 end)*100.0/@xX,10,0)+'%' [InOutParticipantHomeX]
+
+		 ,sum(case when substring(c.VisitType,4,1) != '1' and substring(c.VisitType,3,1) = '1' then 1 else 0 end) [OutOfHomeX]
+		 ,str(sum(case when substring(c.VisitType,3,1) = '1' and substring(c.VisitLocation,1,1) = '1' then 1 else 0 end)*100.0/
+			 @OutOfHomeX,10,0)+'%' [MedicalProviderOfficeX]
+		 ,str(sum(case when substring(c.VisitType,3,1) = '1' and substring(c.VisitLocation,2,1) = '1' then 1 else 0 end)*100.0/
+			 @OutOfHomeX,10,0)+'%' [OtherProviderOfficeX]
+		 ,str(sum(case when substring(c.VisitType,3,1) = '1' and substring(c.VisitLocation,3,1) = '1' then 1 else 0 end)*100.0/
+			 @OutOfHomeX,10,0)+'%' [HomeVisitOfficeX]
+		 ,str(sum(case when substring(c.VisitType,3,1) = '1' and substring(c.VisitLocation,4,1) = '1' then 1 else 0 end)*100.0/
+			 @OutOfHomeX,10,0)+'%' [HospitalX]
+		 ,str(sum(case when substring(c.VisitType,3,1) = '1' and substring(c.VisitLocation,5,1) = '1' then 1 else 0 end)*100.0/
+			 @OutOfHomeX,10,0)+'%' [OtherLocationX]
+
+		 ,str(sum(case when c.PC1Participated = 1 then 1 else 0 end)*100.0/@xX,10,0)+'%' [PC1ParticipatedX]
+		 ,str(sum(case when c.PC2Participated = 1 then 1 else 0 end)*100.0/@xX,10,0)+'%' [PC2ParticipatedX]
+		 ,str(sum(case when c.OBPParticipated = 1 then 1 else 0 end)*100.0/@xX,10,0)+'%' [OBPParticipatedX]
+		 ,str(sum(case when c.FatherFigureParticipated = 1 then 1 else 0 end)*100.0/@xX,10,0)+'%' [FatherFigureParticipatedX]
+		 ,str(sum(case when c.TCParticipated = 1 then 1 else 0 end)*100.0/@xX,10,0)+'%' [TCParticipatedX]
+		 ,str(sum(case when c.GrandParentParticipated = 1 then 1 else 0 end)*100.0/@xX,10,0)+'%' [GrandParentParticipatedX]
+		 ,str(sum(case when c.SiblingParticipated = 1 then 1 else 0 end)*100.0/@xX,10,0)+'%' [SiblingParticipatedX]
+		 ,str(sum(case when c.NonPrimaryFSWParticipated = 1 then 1 else 0 end)*100.0/@xX,10,0)+'%' [NonPrimaryFSWParticipatedX]
+		  -- new 
+		 ,str(sum(case when c.FatherAdvocateParticipated = 1 then 1 else 0 end)*100.0/@xX,10,0)+'%' [FatherAdvocateParticipatedX]
+		 ,str(sum(case when c.HVSupervisorParticipated = 1 then 1 else 0 end)*100.0/@xX,10,0)+'%' [HVSupervisorParticipatedX]
+		 ,str(sum(case when c.SupervisorObservation = 1 then 1 else 0 end)*100.0/@xX,10,0)+'%' [SupervisorObservationX]
+		 ,str(sum(case when c.OtherParticipated = 1 then 1 else 0 end)*100.0/@xX,10,0)+'%' [OtherParticipatedX]
+
+		 ,str(sum(case when (isnull(c.CDChildDevelopment,'00') = '00' and isnull(c.CDToys,'00') = '00'
+				  and isnull(c.CDOther,'00') = '00') or substring(c.VisitType,4,1) = '1'
+				  then 0 else 1 end)*100.0/@xX,10,0)+'%' [ChildDevelopmentX]
+
+		 ,str(sum(case when (isnull(c.PCChildInteraction,'00') = '00' and isnull(c.PCChildManagement,'00') = '00'
+				  and isnull(c.PCFeelings,'00') = '00' and isnull(c.PCStress,'00') = '00'
+				  and isnull(c.PCBasicNeeds,'00') = '00' and isnull(c.PCShakenBaby,'00') = '00' and isnull(c.PCShakenBabyVideo,
+					  '00') = '00'
+				  and isnull(c.PCOther,'00') = '00') or substring(c.VisitType,4,1) = '1' then 0 else 1 end)*100.0/@xX,10,0)+'%' 
+					  [PCInteractionX]
+
+		 ,str(sum(case when (isnull(c.HCGeneral,'00') = '00' and isnull(c.HCChild,'00') = '00' and isnull(c.HCDental,'00') = '00'
+				  and isnull(c.HCFeeding,'00') = '00' and isnull(c.HCBreastFeeding,'00') = '00'
+				  and isnull(c.HCNutrition,'00') = '00' and isnull(c.HCFamilyPlanning,'00') = '00' and isnull(c.HCProviders,'00') 
+					  = '00'
+				  and isnull(c.HCFASD,'00') = '00' and isnull(c.HCSexEducation,'00') = '00'
+				  and isnull(c.HCPrenatalCare,'00') = '00' and isnull(c.HCMedicalAdvocacy,'00') = '00' and isnull(c.HCSafety,'00') 
+					  = '00'
+				  and isnull(c.HCSmoking,'00') = '00' and isnull(c.HCSIDS,'00') = '00'
+				  and isnull(c.HCOther,'00') = '00') or substring(c.VisitType,4,1) = '1' then 0 else 1 end)*100.0/@xX,10,0)+'%' 
+					  [HealthCareX]
+
+		 ,str(sum(case when (isnull(c.FFDomesticViolence,'00') = '00' and isnull(c.FFFamilyRelations,'00') = '00'
+				  and isnull(c.FFSubstanceAbuse,'00') = '00'
+				  and isnull(c.FFMentalHealth,'00') = '00' and isnull(c.FFCommunication,'00') = '00'
+				  and isnull(c.FFOther,'00') = '00') or substring(c.VisitType,4,1) = '1'
+				  then 0 else 1 end)*100.0/@xX,10,0)+'%' [FamilyFunctionX]
+
+		 ,str(sum(case when (isnull(c.SSCalendar,'00') = '00' and isnull(c.SSHousekeeping,'00') = '00'
+				  and isnull(c.SSTransportation,'00') = '00' and isnull(c.SSEmployment,'00') = '00'
+				  and isnull(c.SSMoneyManagement,'00') = '00' and isnull(c.SSChildCare,'00') = '00'
+				  and isnull(c.SSProblemSolving,'00') = '00' and isnull(c.SSEducation,'00') = '00' and isnull(c.SSJob,'00') = '00'
+				  and isnull(c.SSOther,'00') = '00') or substring(c.VisitType,4,1) = '1'
+				  then 0 else 1 end)*100.0/@xX,10,0)+'%' [SelfSufficincyX]
+
+		 ,str(sum(case when (isnull(c.CIProblems,'00') = '00' and isnull(c.CIOther,'00') = '00') or substring(c.VisitType,4,1) = 
+			 '1'
+				  then 0 else 1 end)*100.0/@xX,10,0)+'%' [CrisisInterventionX]
+
+
+		 ,str(sum(case when (isnull(c.PAForms,'00') = '00' and isnull(c.PAVideo,'00') = '00'
+				  and isnull(c.PAGroups,'00') = '00' and isnull(c.PAIFSP,'00') = '00'
+				  and isnull(c.PARecreation,'00') = '00' and isnull(c.PAOther,'00') = '00'
+				  ) or substring(c.VisitType,4,1) = '1'
+				  then 0 else 1 end)*100.0/@xX,10,0)+'%' [ProgramActivityX]
+
+		 ,str(sum(case when (isnull(c.CATransportation,'00') = '00' and isnull(c.CAGoods,'00') = '00' and isnull(c.CALegal,'00') = 
+			 '00'
+				  and isnull(c.CAHousing,'00') = '00'
+				  and isnull(c.CAAdvocacy,'00') = '00' and isnull(c.CATranslation,'00') = '00' and isnull(c.CALaborSupport,'00') = 
+					  '00'
+				  and isnull(c.CAChildSupport,'00') = '00'
+				  and isnull(c.CAParentRights,'00') = '00' and isnull(c.CAVisitation,'00') = '00' and isnull(c.CAOther,'00') = 
+					  '00')
+				  or substring(c.VisitType,4,1) = '1'
+				  then 0 else 1 end)*100.0/@xX,10,0)+'%' [ConcreteAcivitiesX]
+
+		from HVCase as a
+			join CaseProgram as b on b.HVCaseFK = a.HVCasePK
+			INNER JOIN dbo.SplitString(@programfk,',') on b.programfk = listitem
+			join HVLog as c on a.HVCasePK = c.HVCaseFK
+			inner join WorkerProgram wp on WorkerFK = FSWFK AND wp.programfk = listitem
+			inner join dbo.udfCaseFilters(@casefilterspositive,'', @programfk) cf on cf.HVCaseFK = a.HVCasePK
+		where 
+		--b.ProgramFK = @programfk and 
+		cast(c.VisitStartTime as date)  between @StartDtX and @EndDtX
+		--and (b.DischargeDate is null
+		--or b.DischargeDate > @EndDtX)
+		and (case when @SiteFK = 0 then 1 when wp.SiteFK = @SiteFK then 1 else 0 end = 1)
+	)
+
+	select *
+		from q1
+			join q2 on 1 = 1
+GO
diff --git a/Stored Procedures/dbo.rspNYSFSWHomeVisitRecord_Detail.sql b/Stored Procedures/dbo.rspNYSFSWHomeVisitRecord_Detail.sql
new file mode 100644
index 0000000..743b9e1
--- /dev/null
+++ b/Stored Procedures/dbo.rspNYSFSWHomeVisitRecord_Detail.sql
@@ -0,0 +1,248 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		<Jay Robohn>
+-- Create date: <Jan 4, 2012>
+-- Edit date: 7/10/2013 (Chris Papas) - cteMain levelname fix
+-- Description:	<Converted FamSys report - Home Visit Achievement Rate - Aggregate>
+--				04/29 Changed to NYS FSW Home Visit Record
+-- Edit date: 10/11/2013 CP - workerprogram was NOT duplicating cases when worker transferred
+--			  02/24/2015 jr - add support for Site and Case Filter criteria
+-- =============================================
+CREATE procedure [dbo].[rspNYSFSWHomeVisitRecord_Detail]
+				(@programfk    varchar(max)    = null
+					, @sdate        datetime
+					, @edate        datetime
+					, @supervisorfk int             = null
+					, @workerfk     int             = null
+					, @SiteFK int = null
+					, @CaseFiltersPositive varchar(100) = ''
+				)
+
+as
+begin
+
+	if @programfk is null
+	begin
+		select @programfk =
+			   substring((select ','+LTRIM(RTRIM(STR(HVProgramPK)))
+							  from HVProgram
+							  for xml path ('')),2,8000)
+	end
+	set @programfk = REPLACE(@programfk,'"','');
+
+	set @SiteFK = case when dbo.IsNullOrEmpty(@SiteFK) = 1 then 0
+					   else @SiteFK
+				  end
+	set @CaseFiltersPositive = case	when @CaseFiltersPositive = '' then null
+									else @CaseFiltersPositive
+							   end;
+
+	with cteHVRecords
+	as
+	(select distinct rtrim(firstname)+' '+rtrim(lastname) as workername
+					,hvr.workerfk
+					,count(distinct casefk) as casecount
+					,pc1id
+					,startdate
+					,enddate
+					,hvr.levelname
+					,(select max(hld.StartLevelDate)
+						  from hvleveldetail hld
+						  where hvr.casefk = hld.hvcasefk
+							   and StartLevelDate <= @edate
+							   and hvr.programfk = hld.programfk) as levelstart
+					,(reqvisit) as expvisitcount
+					,sum(case
+							 when visittype <> '0001' then
+								 1
+							 else
+								 0
+						 end) as actvisitcount
+					,sum(case
+							 when substring(visittype,1,1) = '1' or substring(visittype,2,1) = '1' then
+								 1
+							 else
+								 0
+						 end) as inhomevisitcount
+					,sum(case
+							 when visittype = '0001' then
+								 1
+							 else
+								 0
+						 end) as attvisitcount
+					,(dateadd(mi,sum(visitlengthminute),dateadd(hh,sum(visitlengthhour),'01/01/2001'))) DirectServiceTime
+					,sum(visitlengthminute)+sum(visitlengthhour)*60 as visitlengthminute
+					,sum(visitlengthhour) as visitlengthhour
+					,dischargedate
+					,pc1id+convert(char(10),hvr.workerfk) as pc1wrkfk --use for a distinct unique field for the OVER(PARTITION BY) above	
+					 ,hvr.casefk
+		 from [dbo].[udfHVRecords](@programfk,@sdate,@edate) hvr
+			inner join worker on workerpk = hvr.workerfk
+			inner join workerprogram wp on wp.workerfk = workerpk
+			inner join dbo.SplitString(@programfk,',') on wp.programfk = listitem
+			inner join dbo.udfCaseFilters(@casefilterspositive, '', @programfk) cf on cf.HVCaseFK = hvr.casefk
+			where case when @SiteFK = 0 then 1
+							 when wp.SiteFK = @SiteFK then 1
+							 else 0
+						end = 1
+					and workerpk = isnull(@workerfk,workerpk)
+					and supervisorfk = isnull(@supervisorfk,supervisorfk)
+					and startdate < enddate --Chris Papas 05/25/2011 due to problem with pc1id='IW8601030812'
+		 group by firstname
+				 ,lastname
+				 ,hvr.workerfk
+				 ,pc1id
+				 ,startdate
+				 ,enddate
+				 ,hvr.levelname
+				 ,reqvisit
+				 ,dischargedate
+				 ,hvr.casefk
+				 ,hvr.programfk --,hld.StartLevelDate
+	)
+	,
+	cteLevelChanges
+	as
+	(select casefk
+		   ,count(casefk)-1 as LevelChanges
+		 from cteHVRecords
+		 group by casefk
+	)
+	,
+	cteSummary
+	as
+	(select distinct workername
+					,workerfk
+					,pc1id
+					,hvr.casefk
+					,casecount
+					,sum(visitlengthminute) over (partition by pc1wrkfk) as 'Minutes'
+					,sum(expvisitcount) over (partition by pc1wrkfk) as expvisitcount
+					,min(startdate) over (partition by pc1wrkfk) as 'startdate'
+					,max(enddate) over (partition by pc1wrkfk) as 'enddate'
+					,levelname
+					,max(levelstart) over (partition by pc1wrkfk) as 'levelstart'
+					,sum(actvisitcount) over (partition by pc1wrkfk) as actvisitcount
+					,sum(inhomevisitcount) over (partition by pc1wrkfk) as inhomevisitcount
+					,sum(attvisitcount) over (partition by pc1wrkfk) as attvisitcount
+					,max(dischargedate) over (partition by pc1wrkfk) as 'dischargedate'
+					,IntakeDate
+					,case when TCDOB is null
+							then EDC
+						  else TCDOB
+					end as TCDOB
+					,LevelChanges
+		 from cteHVRecords hvr
+			 inner join cteLevelChanges on cteLevelChanges.casefk = hvr.casefk
+			 inner join HVCase c on hvr.casefk = c.HVCasePK
+)
+	--07/10/2013 [Chris Papas], continual errors with getting the correct Level.
+	-- both ,max(levelname) over (partition by pc1id) as levelname
+	--and (SELECT TOP 1 levelname ORDER BY enddate) AS levelname, were returning the wrong levels in certain circumstances.
+	--FIX is below and as follows: Row_Number() OVER (Partition By casefk ORDER BY [levelstart] DESC) as RowNum
+	--END 7/10/2013 fix
+	
+	, cteMain as
+	-- make the aggregate table
+	(select workername
+			,workerfk
+			,pc1id
+			,casecount
+			,DirectServiceTime
+			,expvisitcount
+			,startdate
+			,enddate
+			,levelname
+			,levelstart
+			,actvisitcount
+			,inhomevisitcount
+			,attvisitcount
+			,VisitRate
+			,InHomeRate
+			,dischargedate
+			,IntakeDate
+			,TCDOB
+			,LevelChanges
+			from (
+				select distinct workername
+					,workerfk
+					,pc1id
+					,casecount
+					,dateadd(yy,(2003-1900),0)+dateadd(mm,11-1,0)+6-1+dateadd(mi,minutes,0) as DirectServiceTime
+					,FLOOR(expvisitcount) AS expvisitcount
+					,startdate
+					,enddate
+					,(select top 1 levelname
+						  from hvleveldetail hld
+						  where hld.hvcasefk = cteSummary.casefk
+							   and hld.StartLevelDate = cteSummary.levelstart
+							   ) as levelname
+					,levelstart
+					,actvisitcount
+					,inhomevisitcount
+					,attvisitcount
+					,case
+						 when actvisitcount is null or actvisitcount = 0
+							 then
+							 0
+						 when expvisitcount is null or expvisitcount = 0
+							 then
+							 1
+						 else
+							 case
+								 when (actvisitcount/(expvisitcount*1.000)) > 1
+									 then
+									 1
+								 else
+									 actvisitcount/(expvisitcount*1.000)
+							 end
+					 end as VisitRate
+					,case
+						 when inhomevisitcount is null or inhomevisitcount = 0
+							 then
+							 0
+						 when expvisitcount is null or expvisitcount = 0
+							 then
+							 1
+						 else
+							 case
+								 when (inhomevisitcount/(case when expvisitcount>=actvisitcount then actvisitcount else expvisitcount end*1.000)) > 1
+									 then
+									 1
+								 else
+									 inhomevisitcount/(case when expvisitcount>=actvisitcount then actvisitcount else expvisitcount end*1.000)
+							 end
+					 end as InHomeRate
+					,dischargedate
+					,IntakeDate
+					,TCDOB
+					,LevelChanges
+				from cteSummary
+			) a 
+	)
+	
+	
+	select *
+		  ,case
+			   when expvisitcount = 0
+				   then
+				   0
+			   when VisitRate >= .9 and InHomeRate >= .75
+				   then
+				   3
+			   when VisitRate >= .75 and InHomeRate >= .75
+				   then
+				   2
+			   else
+				   1
+		   end as ScoreForCase
+		from cteMain
+		where isnull(dischargedate, getdate()) > @sdate
+		order by WorkerName
+				,pc1id
+
+end
+GO
diff --git a/Stored Procedures/dbo.rspNYSFSWHomeVisitRecord_Summary.sql b/Stored Procedures/dbo.rspNYSFSWHomeVisitRecord_Summary.sql
new file mode 100644
index 0000000..872ad65
--- /dev/null
+++ b/Stored Procedures/dbo.rspNYSFSWHomeVisitRecord_Summary.sql
@@ -0,0 +1,165 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		<Jay Robohn>
+-- Create date: <Jan 4, 2012>
+-- Description:	<Converted FamSys report - Home Visit Achievement Rate - Aggregate>
+--				04/29 Changed to NYS FSW Home Visit Record
+-- Edit date: 10/11/2013 CP - workerprogram was NOT duplicating cases when worker transferred
+--			  02/24/2015 jr - add support for Site and Case Filter criteria
+-- =============================================
+CREATE procedure [dbo].[rspNYSFSWHomeVisitRecord_Summary]
+				(@programfk    varchar(max)    = null
+					, @sdate        datetime
+					, @edate        datetime
+					, @supervisorfk int             = null
+					, @workerfk     int             = null
+					, @SiteFK int = null
+					, @CaseFiltersPositive varchar(100) = ''
+				)
+
+as
+begin
+
+	if @programfk is null
+	begin
+		select @programfk =
+			   substring((select ','+LTRIM(RTRIM(STR(HVProgramPK)))
+							  from HVProgram
+							  for xml path ('')),2,8000)
+	end
+	set @programfk = REPLACE(@programfk,'"','');
+
+	set @SiteFK = case when dbo.IsNullOrEmpty(@SiteFK) = 1 then 0
+					   else @SiteFK
+				  end
+	set @CaseFiltersPositive = case	when @CaseFiltersPositive = '' then null
+									else @CaseFiltersPositive
+							   end;
+
+	with cteHVRecords
+	as
+	(select rtrim(firstname)+' '+rtrim(lastname) as workername
+					,hvr.workerfk
+					,hvr.casefk
+					,pc1id
+					,startdate
+					,enddate
+					,hvr.levelname
+					,(select max(hld.StartLevelDate)
+						  from hvleveldetail hld
+						  where hvr.casefk = hld.hvcasefk
+							   and StartLevelDate <= @edate
+							   and hvr.programfk = hld.programfk) as levelstart
+					,reqvisit as expvisitcount
+					,sum(case
+							 when visittype <> '0001' then
+								 1
+							 else
+								 0
+						 end) as actvisitcount
+					,sum(case
+							 when substring(visittype,1,1) = '1' or substring(visittype,2,1) = '1' then
+								 1
+							 else
+								 0
+						 end) as inhomevisitcount
+					,sum(case
+							 when visittype = '0001' then
+								 1
+							 else
+								 0
+						 end) as attvisitcount
+					,(dateadd(mi,sum(visitlengthminute),dateadd(hh,sum(visitlengthhour),'01/01/2001'))) DirectServiceTime
+					,sum(visitlengthminute)+sum(visitlengthhour)*60 as visitlengthminute
+					,sum(visitlengthhour) as visitlengthhour
+					,dischargedate
+					,pc1id+convert(char(10),hvr.workerfk) as pc1wrkfk --use for a distinct unique field for the OVER(PARTITION BY) above	
+		 from [dbo].[udfHVRecords](@programfk,@sdate,@edate) hvr
+			inner join worker on workerpk = hvr.workerfk
+			inner join workerprogram wp on wp.workerfk = workerpk
+			inner join dbo.SplitString(@programfk,',') on wp.programfk = listitem
+			inner join dbo.udfCaseFilters(@casefilterspositive, '', @programfk) cf on cf.HVCaseFK = hvr.casefk
+			where case when @SiteFK = 0 then 1
+							 when wp.SiteFK = @SiteFK then 1
+							 else 0
+						end = 1
+				and workerpk = isnull(@workerfk,workerpk)
+				and supervisorfk = isnull(@supervisorfk,supervisorfk)
+				and startdate < enddate --Chris Papas 05/25/2011 due to problem with pc1id='IW8601030812'
+		 group by rtrim(firstname)+' '+rtrim(lastname)
+				 ,hvr.workerfk
+				 ,pc1id
+				 ,startdate
+				 ,enddate
+				 ,hvr.levelname
+				 ,reqvisit
+				 ,dischargedate
+				 ,hvr.casefk
+				 ,hvr.programfk --,hld.StartLevelDate
+	), 
+	cteCaseCount 
+	as 
+	(select count(distinct casefk) as casecount
+		from cteHVRecords
+	),
+	cteMain 
+	as 
+	(select workername
+			 ,workerfk
+			 ,pc1id
+			 ,sum(visitlengthminute) as Minutes
+			 ,sum(expvisitcount) as expvisitcount
+			 ,min(startdate) as startdate
+			 ,max(enddate) as enddate
+			 ,max(levelstart) as levelstart
+			 ,sum(actvisitcount) as actvisitcount
+			 ,sum(inhomevisitcount) as inhomevisitcount
+			 ,sum(attvisitcount) as attvisitcount
+			 ,max(dischargedate) as dischargedate
+
+			 --,sum(casecount) over (partition by pc1wrkfk) as CaseCount
+			 --,sum(visitlengthminute) over (partition by pc1wrkfk) as Minutes
+			 --,sum(expvisitcount) over (partition by pc1wrkfk) as expvisitcount
+			 --,min(startdate) over (partition by pc1wrkfk) as startdate
+			 --,max(enddate) over (partition by pc1wrkfk) as enddate
+			 --,(select top 1 levelname
+				--   from cteHVRecords
+				--   where enddate <= @edate) as levelname
+			 --,max(levelstart) over (partition by pc1wrkfk) as levelstart
+			 --,sum(actvisitcount) over (partition by pc1wrkfk) as actvisitcount
+			 --,sum(inhomevisitcount) over (partition by pc1wrkfk) as inhomevisitcount
+			 --,sum(attvisitcount) over (partition by pc1wrkfk) as attvisitcount
+			 --,max(dischargedate) over (partition by pc1wrkfk) as dischargedate
+
+		from cteHVRecords
+		group by workername
+			,pc1wrkfk
+			,workerfk
+			,pc1id
+	)
+	
+	-- make the aggregate table
+	select workername
+		  ,rtrim(LastName)+', '+rtrim(FirstName) as WorkerLastFirst
+		  ,workerfk
+		  ,pc1id
+		  ,CaseCount
+		  ,dateadd(yy,(2003-1900),0)+dateadd(mm,11-1,0)+6-1+dateadd(mi,minutes,0) as DirectServiceTime
+		  ,floor(expvisitcount) as expvisitcount
+		  ,startdate
+		  ,enddate
+		  ,levelstart
+		  ,actvisitcount
+		  ,inhomevisitcount
+		  ,attvisitcount
+		  ,dischargedate
+		from cteMain
+		inner join Worker w on workerfk=w.WorkerPK
+		left outer join cteCaseCount on casecount=casecount
+		where isnull(dischargedate, getdate()) > @sdate
+		
+end
+GO
diff --git a/Stored Procedures/dbo.rspProgramInformationFor8Quarters.sql b/Stored Procedures/dbo.rspProgramInformationFor8Quarters.sql
new file mode 100644
index 0000000..c459eec
--- /dev/null
+++ b/Stored Procedures/dbo.rspProgramInformationFor8Quarters.sql
@@ -0,0 +1,1712 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+
+-- =============================================
+-- Author:		<Devinder Singh Khalsa>
+-- Create date: <January 4th, 2013>
+-- Description:	<gets you data for Quarterly report i.e. J. Program Information for 8 Quarters>
+-- exec [rspProgramInformationFor8Quarters] '5','03/31/13'
+-- exec [rspProgramInformationFor8Quarters] '2','06/30/12'
+-- exec [rspProgramInformationFor8Quarters] '5','06/30/12'
+-- exec dbo.rspProgramInformationFor8Quarters @programfk=',13,',@edate='2013-03-31 00:00:00',@sitefk=NULL,@casefilterspositive=NULL
+-- exec dbo.rspProgramInformationFor8Quarters @programfk=',19,',@edate='2013-03-31 00:00:00',@sitefk=NULL,@casefilterspositive=NULL
+
+-- exec [rspProgramInformationFor8Quarters] '39','12/31/13'
+-- exec [rspProgramInformationFor8Quarters] '19','06/30/13'
+
+-- 02/02/2013 
+-- handling when there is no data available e.g. for a new program that just joins hfny like Dominican Womens
+
+-- exec [rspProgramInformationFor8Quarters] '31','2012-06-30'
+-- =============================================
+CREATE procedure [dbo].[rspProgramInformationFor8Quarters] (@programfk varchar(300) = null
+														 , @edate datetime
+														 , @sitefk int = 0
+														 , @casefilterspositive varchar(100) = ''  
+														  )
+as
+	begin
+
+
+
+
+		if @programfk is null
+			begin
+				select	@programfk = substring((select	',' + ltrim(rtrim(str(HVProgramPK)))
+												from	HVProgram
+											   for
+												xml	path('')
+											   ), 2, 8000)
+			end
+		set @programfk = replace(@programfk, '"', '')	
+
+
+
+
+		set @SiteFK = case when dbo.IsNullOrEmpty(@SiteFK) = 1 then 0
+						   else @SiteFK
+					  end
+		set @casefilterspositive = case	when @casefilterspositive = '' then null
+										else @casefilterspositive
+								   end
+
+
+---- create a table that will be filled in with data at the end
+		create table #tblQ8ReportMain (QuarterNumber [varchar](10)
+									 , QuarterEndDate [varchar](200) null
+									 , numberOfScreens [varchar](200) null
+									 , numberOfKempAssessments [varchar](200) null
+									 , KempPositivePercentage [varchar](200) null
+									 , KempPositiveEnrolled [varchar](200) null
+									 , KempPositivePending [varchar](200) null
+									 , KempPositiveTerminated [varchar](200) null
+									 , AvgPositiveMotherScore [varchar](200) null
+									 , EnrolledAtBeginningOfQrtr [varchar](200) null
+									 , NewEnrollmentsThisQuarter [varchar](200) null
+									 , NewEnrollmentsPrenatal [varchar](200) null
+									 , TANFServicesEligible [varchar](200) null
+									 , FamiliesDischargedThisQuarter [varchar](200) null
+									 , FamiliesCompletingProgramThisQuarter [varchar](200) null
+									 , FamiliesActiveAtEndOfThisQuarter [varchar](200) null
+									 , FamiliesActiveAtEndOfThisQuarterOnLevel1 [varchar](200) null
+									 , FamiliesActiveAtEndOfThisQuarterOnLevelX [varchar](200) null
+									 , FamiliesWithNoServiceReferrals [varchar](200) null
+									 , AverageVisitsPerMonthPerCase [varchar](200) null
+									 , TotalServedInQuarterIncludesClosedCases [varchar](200) null
+									 , AverageVisitsPerFamily [varchar](200) null
+									 , TANFServicesEligibleAtEnrollment [varchar](200) null
+									 , rowBlankforItem9 [varchar](200) null
+									 , LengthInProgramUnder6Months [varchar](200) null
+									 , LengthInProgramUnder6MonthsTo1Year [varchar](200) null
+									 , LengthInProgramUnder1YearTo2Year [varchar](200) null
+									 , LengthInProgramUnder2YearsAndOver [varchar](200) null
+									  )	
+
+
+
+
+
+-- Create 8 quarters given a starting quarter end date
+-- 02/02/2013 
+-- handling when there is no data available. In order to handle, I added the following columns i.e. col1-col26
+		create table #tblMake8Quarter ([QuarterNumber] [int]
+									 , [QuarterStartDate] [date]
+									 , [QuarterEndDate] [date]
+									 , [Col1] [varchar](200) default ' '
+									 , [Col2] [varchar](200) default ' '
+									 , [Col3] [varchar](200) default ' '
+									 , [Col4] [varchar](200) default ' '
+									 , [Col5] [varchar](200) default ' '
+									 , [Col6] [varchar](200) default ' '
+									 , [Col7] [varchar](200) default ' '
+									 , [Col8] [varchar](200) default ' '
+									 , [Col9] [varchar](200) default ' '
+									 , [Col10] [varchar](200) default ' '
+									 , [Col11] [varchar](200) default ' '
+									 , [Col12] [varchar](200) default ' '
+									 , [Col13] [varchar](200) default ' '
+									 , [Col14] [varchar](200) default ' '
+									 , [Col15] [varchar](200) default ' '
+									 , [Col16] [varchar](200) default ' '
+									 , [Col17] [varchar](200) default ' '
+									 , [Col18] [varchar](200) default ' '
+									 , [Col19] [varchar](200) default ' '
+									 , [Col20] [varchar](200) default ' '
+									 , [Col21] [varchar](200) default ' '
+									 , [Col22] [varchar](200) default ' '
+									 , [Col23] [varchar](200) default ' '
+									 , [Col24] [varchar](200) default ' '
+									 , [Col25] [varchar](200) default ' '
+									 , [Col26] [varchar](200) default ' '
+									  )
+
+		insert	into #tblMake8Quarter
+				([QuarterNumber]
+			   , [QuarterStartDate]
+			   , [QuarterEndDate]
+				)
+				select	8
+					  , dateadd(dd, 1, dateadd(s, -1, dateadd(mm, datediff(m, 0, dateadd(mm, -3, @edate)) + 1, 0)))
+					  , @edate as QuarterEndDate
+		insert	into #tblMake8Quarter
+				([QuarterNumber]
+			   , [QuarterStartDate]
+			   , [QuarterEndDate]
+				)
+				select	7
+					  , dateadd(dd, 1, dateadd(s, -1, dateadd(mm, datediff(m, 0, dateadd(mm, -6, @edate)) + 1, 0)))
+					  , dateadd(s, -1, dateadd(mm, datediff(m, 0, dateadd(mm, -3, @edate)) + 1, 0)) as QuarterEndDate
+		insert	into #tblMake8Quarter
+				([QuarterNumber]
+			   , [QuarterStartDate]
+			   , [QuarterEndDate]
+				)
+				select	6
+					  , dateadd(dd, 1, dateadd(s, -1, dateadd(mm, datediff(m, 0, dateadd(mm, -9, @edate)) + 1, 0)))
+					  , dateadd(s, -1, dateadd(mm, datediff(m, 0, dateadd(mm, -6, @edate)) + 1, 0)) as QuarterEndDate
+		insert	into #tblMake8Quarter
+				([QuarterNumber]
+			   , [QuarterStartDate]
+			   , [QuarterEndDate]
+				)
+				select	5
+					  , dateadd(dd, 1, dateadd(s, -1, dateadd(mm, datediff(m, 0, dateadd(mm, -12, @edate)) + 1, 0)))
+					  , dateadd(s, -1, dateadd(mm, datediff(m, 0, dateadd(mm, -9, @edate)) + 1, 0)) as QuarterEndDate
+		insert	into #tblMake8Quarter
+				([QuarterNumber]
+			   , [QuarterStartDate]
+			   , [QuarterEndDate]
+				)
+				select	4
+					  , dateadd(dd, 1, dateadd(s, -1, dateadd(mm, datediff(m, 0, dateadd(mm, -15, @edate)) + 1, 0)))
+					  , dateadd(s, -1, dateadd(mm, datediff(m, 0, dateadd(mm, -12, @edate)) + 1, 0)) as QuarterEndDate
+		insert	into #tblMake8Quarter
+				([QuarterNumber]
+			   , [QuarterStartDate]
+			   , [QuarterEndDate]
+				)
+				select	3
+					  , dateadd(dd, 1, dateadd(s, -1, dateadd(mm, datediff(m, 0, dateadd(mm, -18, @edate)) + 1, 0)))
+					  , dateadd(s, -1, dateadd(mm, datediff(m, 0, dateadd(mm, -15, @edate)) + 1, 0)) as QuarterEndDate
+		insert	into #tblMake8Quarter
+				([QuarterNumber]
+			   , [QuarterStartDate]
+			   , [QuarterEndDate]
+				)
+				select	2
+					  , dateadd(dd, 1, dateadd(s, -1, dateadd(mm, datediff(m, 0, dateadd(mm, -21, @edate)) + 1, 0)))
+					  , dateadd(s, -1, dateadd(mm, datediff(m, 0, dateadd(mm, -18, @edate)) + 1, 0)) as QuarterEndDate
+		insert	into #tblMake8Quarter
+				([QuarterNumber]
+			   , [QuarterStartDate]
+			   , [QuarterEndDate]
+				)
+				select	1
+					  , dateadd(dd, 1, dateadd(s, -1, dateadd(mm, datediff(m, 0, dateadd(mm, -24, @edate)) + 1, 0)))
+					  , dateadd(s, -1, dateadd(mm, datediff(m, 0, dateadd(mm, -21, @edate)) + 1, 0)) as QuarterEndDate
+
+
+-- SELECT * FROM #tblMake8Quarter  -- equivalent to csr8q cursor
+-- exec [rspProgramInformationFor8Quarters] '5','06/30/2012'
+
+
+---- ***************** ----
+-- Please use Pivot to change columns to rows (hint Pivoted on RowNumber) --- .... khalsa
+---- ***************** ----
+
+-- Create a Summary table, where we will store values of all 8 quarters
+--create table #tblMain8Quarters(
+--	[RowNumber] [int],
+--	[Title] VARCHAR(250),
+--	[LastDayOfQuarter1] VARCHAR(10),
+--	[LastDayOfQuarter2] VARCHAR(10),
+--	[LastDayOfQuarter3] VARCHAR(10),
+--	[LastDayOfQuarter4] VARCHAR(10),
+--	[LastDayOfQuarter5] VARCHAR(10),
+--	[LastDayOfQuarter6] VARCHAR(10),
+--	[LastDayOfQuarter7] VARCHAR(10),
+--	[LastDayOfQuarter8] VARCHAR(10)	
+--)
+
+
+-- Initially, get the subset of data that we are interested in ... Good Practice ... Khalsa 
+-- We will use this cohort starting item # 3
+		create table #tblInitial_cohort ([HVCasePK] [int]
+									   , [CaseProgress] [numeric](3, 1) null
+									   , [Confidentiality] [bit] null
+									   , [CPFK] [int] null
+									   , [DateOBPAdded] [datetime] null
+									   , [EDC] [datetime] null
+									   , [FFFK] [int] null
+									   , [FirstChildDOB] [datetime] null
+									   , [FirstPrenatalCareVisit] [datetime] null
+									   , [FirstPrenatalCareVisitUnknown] [bit] null
+									   , [HVCaseCreateDate] [datetime] not null
+									   , [HVCaseCreator] [char](10) not null
+									   , [HVCaseEditDate] [datetime] null
+									   , [HVCaseEditor] [char](10) null
+									   , [InitialZip] [char](10) null
+									   , [IntakeDate] [datetime] null
+									   , [IntakeLevel] [char](1) null
+									   , [IntakeWorkerFK] [int] null
+									   , [KempeDate] [datetime] null
+									   , [OBPInformationAvailable] [bit] null
+									   , [OBPFK] [int] null
+									   , [OBPinHomeIntake] [bit] null
+									   , [OBPRelation2TC] [char](2) null
+									   , [PC1FK] [int] not null
+									   , [PC1Relation2TC] [char](2) null
+									   , [PC1Relation2TCSpecify] [varchar](30) null
+									   , [PC2FK] [int] null
+									   , [PC2inHomeIntake] [bit] null
+									   , [PC2Relation2TC] [char](2) null
+									   , [PC2Relation2TCSpecify] [varchar](30) null
+									   , [PrenatalCheckupsB4] [int] null
+									   , [ScreenDate] [datetime] not null
+									   , [TCDOB] [datetime] null
+									   , [TCDOD] [datetime] null
+									   , [TCNumber] [int] null
+									   , [CaseProgramPK] [int]
+									   , [CaseProgramCreateDate] [datetime] not null
+									   , [CaseProgramCreator] [char](10) not null
+									   , [CaseProgramEditDate] [datetime] null
+									   , [CaseProgramEditor] [char](10) null
+									   , [CaseStartDate] [datetime] not null
+									   , [CurrentFAFK] [int] null
+									   , [CurrentFAWFK] [int] null
+									   , [CurrentFSWFK] [int] null
+									   , [CurrentLevelDate] [datetime] not null
+									   , [CurrentLevelFK] [int] not null
+									   , [DischargeDate] [datetime] null
+									   , [DischargeReason] [char](2) null
+									   , [DischargeReasonSpecify] [varchar](500) null
+									   , [ExtraField1] [char](30) null
+									   , [ExtraField2] [char](30) null
+									   , [ExtraField3] [char](30) null
+									   , [ExtraField4] [char](30) null
+									   , [ExtraField5] [char](30) null
+									   , [ExtraField6] [char](30) null
+									   , [ExtraField7] [char](30) null
+									   , [ExtraField8] [char](30) null
+									   , [ExtraField9] [char](30) null
+									   , [HVCaseFK] [int] not null
+									   , [HVCaseFK_old] [int] not null
+									   , [OldID] [char](23) null
+									   , [PC1ID] [char](13) not null
+									   , [ProgramFK] [int] not null
+									   , [TransferredtoProgram] [varchar](50) null
+									   , [TransferredtoProgramFK] [int] null
+									   , [CalcTCDOB] [datetime] null
+										)
+
+
+		insert	into #tblInitial_cohort
+				select	[HVCasePK]
+					  , [CaseProgress]
+					  , [Confidentiality]
+					  , [CPFK]
+					  , [DateOBPAdded]
+					  , [EDC]
+					  , [FFFK]
+					  , [FirstChildDOB]
+					  , [FirstPrenatalCareVisit]
+					  , [FirstPrenatalCareVisitUnknown]
+					  , [HVCaseCreateDate]
+					  , [HVCaseCreator]
+					  , [HVCaseEditDate]
+					  , [HVCaseEditor]
+					  , [InitialZip]
+					  , [IntakeDate]
+					  , [IntakeLevel]
+					  , [IntakeWorkerFK]
+					  , [KempeDate]
+					  , [OBPInformationAvailable]
+					  , [OBPFK]
+					  , [OBPinHomeIntake]
+					  , [OBPRelation2TC]
+					  , [PC1FK]
+					  , [PC1Relation2TC]
+					  , [PC1Relation2TCSpecify]
+					  , [PC2FK]
+					  , [PC2inHomeIntake]
+					  , [PC2Relation2TC]
+					  , [PC2Relation2TCSpecify]
+					  , [PrenatalCheckupsB4]
+					  , [ScreenDate]
+					  , [TCDOB]
+					  , [TCDOD]
+					  , [TCNumber]
+					  , [CaseProgramPK]
+					  , [CaseProgramCreateDate]
+					  , [CaseProgramCreator]
+					  , [CaseProgramEditDate]
+					  , [CaseProgramEditor]
+					  , [CaseStartDate]
+					  , [CurrentFAFK]
+					  , [CurrentFAWFK]
+					  , [CurrentFSWFK]
+					  , [CurrentLevelDate]
+					  , [CurrentLevelFK]
+					  , [DischargeDate]
+					  , [DischargeReason]
+					  , [DischargeReasonSpecify]
+					  , [ExtraField1]
+					  , [ExtraField2]
+					  , [ExtraField3]
+					  , [ExtraField4]
+					  , [ExtraField5]
+					  , [ExtraField6]
+					  , [ExtraField7]
+					  , [ExtraField8]
+					  , [ExtraField9]
+					  , cp.[HVCaseFK]
+					  , [HVCaseFK_old]
+					  , [OldID]
+					  , [PC1ID]
+					  , cp.[ProgramFK]
+					  , [TransferredtoProgram]
+					  , [TransferredtoProgramFK]
+					  , case when h.tcdob is not null then h.tcdob
+							 else h.edc
+						end as [CalcTCDOB]
+				from	HVCase h
+				inner join CaseProgram cp on h.HVCasePK = cp.HVCaseFK
+				inner join dbo.SplitString(@programfk, ',') on cp.programfk = listitem
+				left outer join Worker w on w.WorkerPK = cp.CurrentFSWFK
+				left outer join WorkerProgram wp on wp.WorkerFK = w.WorkerPK and wp.ProgramFK = cp.ProgramFK
+				inner join dbo.udfCaseFilters(@casefilterspositive, '', @programfk) cf on cf.HVCaseFK = h.HVCasePK
+				where	case when @SiteFK = 0 then 1
+							 when wp.SiteFK = @SiteFK then 1
+							 else 0
+						end = 1
+						and cp.CaseStartDate < @edate  -- handling transfer cases
+						and (DischargeDate is null
+							 or DischargeDate >= dateadd(mm, -27, @edate)
+							);
+	-- 1
+		with	cteScreensFor1Cohort
+				  as (	-- "1. Total Screens"
+		-- Screens Row 1
+					  select distinct
+								--Chris Papas
+								CONVERT(varchar(10), QuarterNumber) as QuarterNumber
+							  , count(*) over (partition by [QuarterNumber]) as 'numberOfScreens'
+					  from		#tblInitial_cohort h
+					  inner join #tblMake8Quarter q8 on h.screendate between [QuarterStartDate] and [QuarterEndDate]
+					 ) ,
+				cteScreensFor1
+				  as (	-- "1. Total Screens"
+		-- Screens Row 1
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(numberOfScreens, 0) as numberOfScreens
+					  from		cteScreensFor1Cohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,		
+
+	-- 2
+				cteKempAssessmentsFor2Cohort
+				  as (	-- "2. Total Kempe Assessments"
+		-- Kempe Assessment Row 2
+					  select distinct
+								QuarterNumber
+							  , count(*) over (partition by [QuarterNumber]) as 'numberOfKempAssessments'
+					  from		#tblInitial_cohort h
+					  inner join Kempe k on k.HVCaseFK = h.HVCaseFK
+					  inner join #tblMake8Quarter q8 on k.KempeDate between [QuarterStartDate] and [QuarterEndDate]
+					 ) ,
+				cteKempAssessmentsFor2
+				  as (	-- "2. Total Kempe Assessments"
+		-- Kempe Assessment Row 2		
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(numberOfKempAssessments, 0) as numberOfKempAssessments
+					  from		cteKempAssessmentsFor2Cohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,		
+
+	-- 2a
+				cteKempAssessments_For2aCohort
+				  as ( 	
+	-- Kempe Assessment Percentage
+	-- It will be done in two steps i.e. 1. Get numbers like KempPositive and TotalKemp 2. Then calc Percentage from them in cteKempAssessments_For2a_Calc_Percentage ... khalsa
+					  select distinct
+								q8.QuarterNumber
+							  , count(h.HVCasePK) over (partition by [QuarterNumber]) as 'TotalKemp'
+							  , sum(case when k.KempeResult = 1 then 1
+										 else 0
+									end) over (partition by [QuarterNumber]) as 'KempPositive'
+					  from		#tblInitial_cohort h
+					  left join Kempe k on k.HVCaseFK = h.HVCasePK
+					  inner join #tblMake8Quarter q8 on k.KempeDate between [QuarterStartDate] and [QuarterEndDate]
+					 ) ,
+				cteKempAssessments_For2a
+				  as ( 	
+	-- Kempe Assessment Percentage
+	-- It will be done in two steps i.e. 1. Get numbers like KempPositive and TotalKemp 2. Then calc Percentage from them in cteKempAssessments_For2a_Calc_Percentage ... khalsa
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(TotalKemp, 0) as TotalKemp
+							  , isnull(KempPositive, 0) as KempPositive
+					  from		cteKempAssessments_For2aCohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,
+				cteKempAssessments_For2a_Calc_Percentage
+				  as (	-- "    a. % Positive" 
+				-- Kempe Assessment Percentage Row 3				
+					  select	QuarterNumber
+							  , convert(varchar, KempPositive) + ' ('
+								+ convert(varchar, round(coalesce(cast(KempPositive as float) * 100 / nullif(TotalKemp,
+																										0), 0), 0))
+								+ '%)' as KempPositivePercentage
+					  from		cteKempAssessments_For2a
+					 ) ,		
+
+	-- 2a1
+				cteKempAssessments_For2a_1Cohort
+				  as ( 
+	-- Kempe Assessment Percentage - Positive Enrolled
+	-- It will be done in two steps i.e. 1. Get numbers like KempPositiveEnrolled and KempPositive 2. Then calc Percentage from them in cteKempAssessments_For2a_1_Calc_Percentage ... khalsa
+					  select distinct
+								q8.QuarterNumber
+							  , sum(case when ((k.KempeResult = 1)
+											   and (h.IntakeDate is not null
+													and h.IntakeDate <> ''
+												   )
+											  ) then 1
+										 else 0
+									end) over (partition by [QuarterNumber]) as 'KempPositiveEnrolled'
+							  , sum(case when k.KempeResult = 1 then 1
+										 else 0
+									end) over (partition by [QuarterNumber]) as 'KempPositive'
+					  from		#tblInitial_cohort h
+					  left join Kempe k on k.HVCaseFK = h.HVCasePK
+					  inner join #tblMake8Quarter q8 on k.KempeDate between [QuarterStartDate] and [QuarterEndDate]
+					 ) ,
+				cteKempAssessments_For2a_1
+				  as ( 
+	-- Kempe Assessment Percentage - Positive Enrolled
+	-- It will be done in two steps i.e. 1. Get numbers like KempPositiveEnrolled and KempPositive 2. Then calc Percentage from them in cteKempAssessments_For2a_1_Calc_Percentage ... khalsa
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(KempPositiveEnrolled, 0) as KempPositiveEnrolled
+							  , isnull(KempPositive, 0) as KempPositive
+					  from		cteKempAssessments_For2a_1Cohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,
+				cteKempAssessments_For2a_1_Calc_Percentage
+				  as (	-- "        1. % Positive Enrolled" 
+				-- Kempe Assessment Percentage Row 3				
+					  select	QuarterNumber
+							  , convert(varchar, KempPositiveEnrolled) + ' ('
+								+ convert(varchar, round(coalesce(cast(KempPositiveEnrolled as float) * 100
+																  / nullif(KempPositive, 0), 0), 0)) + '%)' as KempPositiveEnrolled
+					  from		cteKempAssessments_For2a_1
+					 ) ,		
+
+	-- 2a2
+				cteKempAssessments_For2a_2Cohort
+				  as ( 
+	-- Kempe Assessment Percentage - Positive Pending Enrollment
+	-- It will be done in two steps i.e. 1. Get numbers like KempPositivePending and KempPositive 2. Then calc Percentage from them in cteKempAssessments_For2a_2_Calc_Percentage ... khalsa
+					  select distinct
+								q8.QuarterNumber
+							  , sum(case when ((k.KempeResult = 1)
+											   and (h.DischargeDate is null
+													and h.IntakeDate is null
+												   )
+											  ) then 1
+										 else 0
+									end) over (partition by [QuarterNumber]) as 'KempPositivePending'
+							  , sum(case when k.KempeResult = 1 then 1
+										 else 0
+									end) over (partition by [QuarterNumber]) as 'KempPositive'
+					  from		#tblInitial_cohort h
+					  left join Kempe k on k.HVCaseFK = h.HVCasePK
+					  inner join #tblMake8Quarter q8 on k.KempeDate between [QuarterStartDate] and [QuarterEndDate]
+					 ) ,
+				cteKempAssessments_For2a_2
+				  as ( 
+	-- Kempe Assessment Percentage - Positive Pending Enrollment
+	-- It will be done in two steps i.e. 1. Get numbers like KempPositivePending and KempPositive 2. Then calc Percentage from them in cteKempAssessments_For2a_2_Calc_Percentage ... khalsa
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(KempPositivePending, 0) as KempPositivePending
+							  , isnull(KempPositive, 0) as KempPositive
+					  from		cteKempAssessments_For2a_2Cohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,
+				cteKempAssessments_For2a_2_Calc_Percentage
+				  as (	--	"        2. % Positive Pending Enrollment" 
+				-- Kempe Assessment Percentage Row 3				
+					  select	QuarterNumber
+							  , convert(varchar, KempPositivePending) + ' ('
+								+ convert(varchar, round(coalesce(cast(KempPositivePending as float) * 100
+																  / nullif(KempPositive, 0), 0), 0)) + '%)' as KempPositivePending
+					  from		cteKempAssessments_For2a_2
+					 ) ,		
+
+	-- 2a3
+				cteKempAssessments_For2a_3Cohort
+				  as ( 
+	-- Kempe Assessment Percentage - Positive Terminated
+	-- It will be done in two steps i.e. 1. Get numbers like KempPositivePending and KempPositive 2. Then calc Percentage from them in cteKempAssessments_For2a_3_Calc_Percentage ... khalsa
+					  select distinct
+								q8.QuarterNumber
+							  , sum(case when ((k.KempeResult = 1)
+											   and (h.DischargeDate is not null
+													and h.IntakeDate is null
+												   )
+											  ) then 1
+										 else 0
+									end) over (partition by [QuarterNumber]) as 'KempPositiveTerminated'
+							  , sum(case when k.KempeResult = 1 then 1
+										 else 0
+									end) over (partition by [QuarterNumber]) as 'KempPositive'
+					  from		#tblInitial_cohort h
+					  left join Kempe k on k.HVCaseFK = h.HVCasePK
+					  inner join #tblMake8Quarter q8 on k.KempeDate between [QuarterStartDate] and [QuarterEndDate]
+					 ) ,
+				cteKempAssessments_For2a_3
+				  as ( 
+	-- Kempe Assessment Percentage - Positive Terminated
+	-- It will be done in two steps i.e. 1. Get numbers like KempPositivePending and KempPositive 2. Then calc Percentage from them in cteKempAssessments_For2a_3_Calc_Percentage ... khalsa
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(KempPositiveTerminated, 0) as KempPositiveTerminated
+							  , isnull(KempPositive, 0) as KempPositive
+					  from		cteKempAssessments_For2a_3Cohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,
+				cteKempAssessments_For2a_3_Calc_Percentage
+				  as ( --"        3. % Positive Terminated"
+			  -- Kempe Assessment Percentage Row 3				
+					  select	QuarterNumber
+							  , convert(varchar, KempPositiveTerminated) + ' ('
+								+ convert(varchar, round(coalesce(cast(KempPositiveTerminated as float) * 100
+																  / nullif(KempPositive, 0), 0), 0)) + '%)' as KempPositiveTerminated
+					  from		cteKempAssessments_For2a_3
+					 ) ,		
+
+	-- 2b
+				ctePositiveKempeScore
+				  as (  -- find max score of mom/father/partner ... khalsa
+					  select distinct
+								q8.QuarterNumber
+							  , (select	max(thisValue)
+								 from	(select	isnull(cast(k.MomScore as decimal), 0) as thisValue
+										 union all
+										 select	isnull(cast(k.DadScore as decimal), 0) as thisValue
+										 union all
+										 select	isnull(cast(k.PartnerScore as decimal), 0) as thisValue
+										) as khalsaTable
+								) as KempeScore
+					  from		#tblInitial_cohort h
+					  left join Kempe k on k.HVCaseFK = h.HVCasePK
+										   and k.KempeResult = 1 -- keeping 'k.KempeResult = 1' it here (not as in where clause down), it saved 3 seconds of execution time ... Khalsa
+					  inner join #tblMake8Quarter q8 on k.KempeDate between [QuarterStartDate] and [QuarterEndDate]
+					 ) ,
+				cteKempAssessments_For2bCohort
+				  as ( -- "    b. Average Positive Mother Score"
+	-- MomScore
+					  select distinct
+								QuarterNumber
+							  , avg(KempeScore) over (partition by [QuarterNumber]) as 'AvgPositiveMotherScore'
+					  from		ctePositiveKempeScore
+					 ) ,
+				cteKempAssessments_For2b
+				  as ( -- "    b. Average Positive Mother Score"
+	-- MomScore
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(AvgPositiveMotherScore, 0) as AvgPositiveMotherScore
+					  from		cteKempAssessments_For2bCohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,	
+
+
+
+
+
+
+	-- 3
+				cteEnrolledAtBeginingOfQuarter3Cohort
+				  as ( -- 3. Families Enrolled at Beginning of quarter
+					  select distinct
+								QuarterNumber
+							  , count(HVCasePK) over (partition by [QuarterNumber]) as 'EnrolledAtBeginningOfQrtr'
+					  from		#tblInitial_cohort ic
+					  inner join #tblMake8Quarter q8 on ic.IntakeDate <= [QuarterStartDate]
+														and ic.IntakeDate is not null
+														and (ic.DischargeDate >= [QuarterStartDate]
+															 or ic.DischargeDate is null
+															)
+					 ) ,
+				cteEnrolledAtBeginingOfQuarter3
+				  as ( -- 3. Families Enrolled at Beginning of quarter
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(EnrolledAtBeginningOfQrtr, 0) as EnrolledAtBeginningOfQrtr
+					  from		cteEnrolledAtBeginingOfQuarter3Cohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,	
+
+	-- 4
+				cteNewEnrollmentsThisQuarter4Cohort
+				  as ( -- "4. New Enrollments this quarter"
+					  select distinct
+								QuarterNumber
+							  , count(h.HVCasePK) over (partition by [QuarterNumber]) as 'NewEnrollmentsThisQuarter'
+					  from		#tblInitial_cohort h
+					  inner join #tblMake8Quarter q8 on h.IntakeDate between [QuarterStartDate] and [QuarterEndDate]
+					 ) ,
+				cteNewEnrollmentsThisQuarter4
+				  as ( -- "4. New Enrollments this quarter"
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(NewEnrollmentsThisQuarter, 0) as NewEnrollmentsThisQuarter
+					  from		cteNewEnrollmentsThisQuarter4Cohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,	
+
+	--- 4a
+				cteNewEnrollmentsThisQuarter4Again
+				  as ( -- We will use this one in cteNewEnrollmentsThisQuarter4a. 
+	  -- I am repeating it again here for code clarity. I mean that item 4a have its own code, one can see how I did
+					  select distinct
+								QuarterNumber
+							  , count(h.HVCasePK) over (partition by [QuarterNumber]) as 'NewEnrollmentsThisQuarter'
+					  from		#tblInitial_cohort h
+					  inner join #tblMake8Quarter q8 on h.IntakeDate between [QuarterStartDate] and [QuarterEndDate]
+					 ) ,
+				cteNewEnrollmentsThisQuarter4aCohort
+				  as ( 
+	-- "    a. % Prenatal"
+	-- It will be done in two steps i.e. 1. Get numbers like cteNewEnrollmentsThisQuarter4 and cteNewEnrollmentsThisQuarter4a 2. Then calc Percentage from them in cteNewEnrollmentsThisQuarter4a_Calc_Percentage ... khalsa
+					  select distinct
+								q8.QuarterNumber
+							  , count(h.HVCasePK) over (partition by q8.[QuarterNumber]) as 'NewEnrollmentsPrenatal'
+							  , q8Again.NewEnrollmentsThisQuarter as NewEnrollmentsThisQuarter
+					  from		#tblInitial_cohort h
+					  inner join #tblMake8Quarter q8 on h.IntakeDate between [QuarterStartDate] and [QuarterEndDate]
+					  inner join cteNewEnrollmentsThisQuarter4Again q8Again on q8Again.QuarterNumber = q8.QuarterNumber
+					  where		h.[CalcTCDOB] > IntakeDate
+					 ) ,
+				cteNewEnrollmentsThisQuarter4a
+				  as ( 
+	-- "    a. % Prenatal"
+	-- It will be done in two steps i.e. 1. Get numbers like cteNewEnrollmentsThisQuarter4 and cteNewEnrollmentsThisQuarter4a 2. Then calc Percentage from them in cteNewEnrollmentsThisQuarter4a_Calc_Percentage ... khalsa
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(NewEnrollmentsPrenatal, 0) as NewEnrollmentsPrenatal
+							  , isnull(NewEnrollmentsThisQuarter, 0) as NewEnrollmentsThisQuarter
+					  from		cteNewEnrollmentsThisQuarter4aCohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,
+				cteNewEnrollmentsThisQuarter4a_Calc_Percentage
+				  as (select	QuarterNumber
+							  , convert(varchar, NewEnrollmentsPrenatal) + ' ('
+								+ convert(varchar, round(coalesce(cast(NewEnrollmentsPrenatal as float) * 100
+																  / nullif(NewEnrollmentsThisQuarter, 0), 0), 0)) + '%)' as NewEnrollmentsPrenatal
+					  from		cteNewEnrollmentsThisQuarter4a
+					 ) ,	
+
+	--- 4b
+				cteNewEnrollmentsThisQuarter4Again2
+				  as ( -- We will use this one in cteNewEnrollmentsThisQuarter4b. 
+	  -- I am repeating it again here for code clarity. I mean that item 4a have its own code, one can see how I did
+					  select distinct
+								QuarterNumber
+							  , count(h.HVCasePK) over (partition by [QuarterNumber]) as 'NewEnrollmentsThisQuarter'
+					  from		#tblInitial_cohort h
+					  inner join #tblMake8Quarter q8 on h.IntakeDate between [QuarterStartDate] and [QuarterEndDate]
+					 ) ,
+				cteNewEnrollmentsThisQuarter4bCohort
+				  as ( -- "    b. % TANF Services Eligible at Enrollment**"
+					  select distinct
+								q8.QuarterNumber
+							  , count(*) over (partition by q8.[QuarterNumber]) as 'TANFServicesEligible'
+							  , q8Again2.NewEnrollmentsThisQuarter
+					  from		#tblInitial_cohort h
+					  inner join CommonAttributes ca on ca.HVCaseFK = h.HVCaseFK
+					  inner join #tblMake8Quarter q8 on h.IntakeDate between [QuarterStartDate] and [QuarterEndDate]
+					  inner join cteNewEnrollmentsThisQuarter4Again2 q8Again2 on q8Again2.QuarterNumber = q8.QuarterNumber
+					  where		ca.TANFServices = 1
+								and ca.FormType = 'IN'  -- only from Intake form here
+								
+					 ) ,
+				cteNewEnrollmentsThisQuarter4b
+				  as ( -- "    b. % TANF Services Eligible at Enrollment**"
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(TANFServicesEligible, 0) as TANFServicesEligible
+							  , isnull(NewEnrollmentsThisQuarter, 0) as NewEnrollmentsThisQuarter
+					  from		cteNewEnrollmentsThisQuarter4bCohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,
+				cteNewEnrollmentsThisQuarter4b_Calc_Percentage
+				  as (select	QuarterNumber
+							  , convert(varchar, TANFServicesEligible) + ' ('
+								+ convert(varchar, round(coalesce(cast(TANFServicesEligible as float) * 100
+																  / nullif(NewEnrollmentsThisQuarter, 0), 0), 0)) + '%)' as TANFServicesEligible
+					  from		cteNewEnrollmentsThisQuarter4b
+					 ) ,	
+
+
+
+	-- 5
+				cteFamiliesDischargedThisQuarter5Cohort
+				  as ( -- "5. Families Discharged this quarter"
+					  select distinct
+								QuarterNumber
+							  , count(h.HVCasePK) over (partition by [QuarterNumber]) as 'FamiliesDischargedThisQuarter'
+					  from		#tblInitial_cohort h
+					  inner join #tblMake8Quarter q8 on h.DischargeDate between [QuarterStartDate] and [QuarterEndDate]
+					  where		h.IntakeDate is not null
+					 ) ,
+				cteFamiliesDischargedThisQuarter5
+				  as ( -- "5. Families Discharged this quarter"
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(FamiliesDischargedThisQuarter, 0) as FamiliesDischargedThisQuarter
+					  from		cteFamiliesDischargedThisQuarter5Cohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,		
+
+
+	-- 5a
+				cteFamiliesCompletingProgramThisQuarter5aCohort
+				  as ( -- "    a. Families completing the program"
+		-- Discharged after completing the program through Discharge Form
+					  select distinct
+								QuarterNumber
+							  , sum(case when DischargeReason in (27, 29) then 1
+										 else 0
+									end) over (partition by [QuarterNumber]) as 'FamiliesCompletingProgramThisQuarter'
+					  from		#tblInitial_cohort h
+					  inner join #tblMake8Quarter q8 on h.DischargeDate between [QuarterStartDate] and [QuarterEndDate]
+					  where		h.IntakeDate is not null
+					 ) ,
+				cteFamiliesCompletingProgramThisQuarter5a
+				  as ( -- "    a. Families completing the program"
+		-- Discharged after completing the program through Discharge Form
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(FamiliesCompletingProgramThisQuarter, 0) as FamiliesCompletingProgramThisQuarter
+					  from		cteFamiliesCompletingProgramThisQuarter5aCohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,		
+
+	-- 6
+				cteFamiliesActiveAtEndOfThisQuarter6Cohort
+				  as ( -- "6. Families Active at end of this Quarter"
+					  select distinct
+								QuarterNumber
+							  , count(h.HVCasePK) over (partition by [QuarterNumber]) as 'FamiliesActiveAtEndOfThisQuarter'
+					  from		#tblInitial_cohort h
+					  inner join #tblMake8Quarter q8 on h.IntakeDate <= [QuarterEndDate]
+					  where		h.IntakeDate is not null
+								and (h.DischargeDate is null
+									 or h.DischargeDate > QuarterEndDate
+									)
+					 ) ,
+				cteFamiliesActiveAtEndOfThisQuarter6
+				  as ( -- "6. Families Active at end of this Quarter"
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(FamiliesActiveAtEndOfThisQuarter, 0) as FamiliesActiveAtEndOfThisQuarter
+					  from		cteFamiliesActiveAtEndOfThisQuarter6Cohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,		
+
+
+
+	-- 6a
+				cteFamiliesActiveAtEndOfThisQuarter6Again
+				  as ( -- "6. Families Active at end of this Quarter"
+					  select distinct
+								QuarterNumber
+							  , count(h.HVCasePK) over (partition by [QuarterNumber]) as 'FamiliesActiveAtEndOfThisQuarter'
+					  from		#tblInitial_cohort h
+					  inner join #tblMake8Quarter q8 on h.IntakeDate <= [QuarterEndDate]
+					  where		h.IntakeDate is not null
+								and (h.DischargeDate is null
+									 or h.DischargeDate > QuarterEndDate
+									)
+					 ) ,
+				cteFamiliesActiveAtEndOfThisQuarter6aCohort
+				  as ( -- "    a. % on Level 1 at end of Quarter"
+					  select distinct
+								q8.QuarterNumber
+							  , count(h.HVCasePK) over (partition by q8.[QuarterNumber]) as 'FamiliesActiveAtEndOfThisQuarterOnLevel1'
+							  , q86a.FamiliesActiveAtEndOfThisQuarter as FamiliesActiveAtEndOfThisQuarter
+					  from		#tblInitial_cohort h
+					  inner join #tblMake8Quarter q8 on h.IntakeDate <= [QuarterEndDate]
+					  inner join cteFamiliesActiveAtEndOfThisQuarter6Again q86a on q86a.QuarterNumber = q8.QuarterNumber
+					  left join HVLevelDetail hd on hd.hvcasefk = h.hvcasefk
+					  where		h.IntakeDate is not null
+								and (h.DischargeDate is null
+									 or h.DischargeDate > QuarterEndDate
+									)
+								and ((q8.QuarterEndDate between hd.StartLevelDate and hd.EndLevelDate)
+									 or (q8.QuarterEndDate >= hd.StartLevelDate
+										 and hd.EndLevelDate is null
+										)
+									)  -- note: they still may be on level 1
+								and LevelName in ('Level 1', 'Level 1-SS')
+					 ) ,
+				cteFamiliesActiveAtEndOfThisQuarter6a
+				  as ( -- "    a. % on Level 1 at end of Quarter"
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(FamiliesActiveAtEndOfThisQuarterOnLevel1, 0) as FamiliesActiveAtEndOfThisQuarterOnLevel1
+							  , isnull(FamiliesActiveAtEndOfThisQuarter, 0) as FamiliesActiveAtEndOfThisQuarter
+					  from		cteFamiliesActiveAtEndOfThisQuarter6aCohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,
+				cteFamiliesActiveAtEndOfThisQuarter6a_Calc_Percentage
+				  as (select	QuarterNumber
+							  , convert(varchar, FamiliesActiveAtEndOfThisQuarterOnLevel1) + ' ('
+								+ convert(varchar, round(coalesce(cast(FamiliesActiveAtEndOfThisQuarterOnLevel1 as float)
+																  * 100 / nullif(FamiliesActiveAtEndOfThisQuarter, 0), 0),
+														 0)) + '%)' as FamiliesActiveAtEndOfThisQuarterOnLevel1
+					  from		cteFamiliesActiveAtEndOfThisQuarter6a
+					 ) ,	
+
+	-- 6b
+				cteFamiliesActiveAtEndOfThisQuarter6Again2
+				  as ( -- "    b. % on Level X at end of Quarter"
+					  select distinct
+								QuarterNumber
+							  , count(h.HVCasePK) over (partition by [QuarterNumber]) as 'FamiliesActiveAtEndOfThisQuarter'
+					  from		#tblInitial_cohort h
+					  inner join #tblMake8Quarter q8 on h.IntakeDate <= [QuarterEndDate]
+					  where		h.IntakeDate is not null
+								and (h.DischargeDate is null
+									 or h.DischargeDate > QuarterEndDate
+									)
+					 ) ,
+				cteFamiliesActiveAtEndOfThisQuarter6b
+				  as ( -- "    b. % on Level X at end of Quarter"
+					  select distinct
+								q8.QuarterNumber
+							  , count(h.HVCasePK) over (partition by q8.[QuarterNumber]) as 'FamiliesActiveAtEndOfThisQuarterOnLevelX'
+							  , q86b.FamiliesActiveAtEndOfThisQuarter as FamiliesActiveAtEndOfThisQuarter
+					  from		#tblInitial_cohort h
+					  inner join #tblMake8Quarter q8 on h.IntakeDate <= [QuarterEndDate]
+					  inner join cteFamiliesActiveAtEndOfThisQuarter6Again2 q86b on q86b.QuarterNumber = q8.QuarterNumber	
+			--Note: we are making use of operator i.e. 'Outer Apply'
+			-- because a columns values cann't be passed to a function in a join without this operator  ... khalsa
+					  outer apply [udfHVLevel](@programfk, q8.QuarterEndDate) e3
+					  where		h.IntakeDate is not null
+								and h.IntakeDate <= q8.QuarterEndDate
+								and (h.DischargeDate is null
+									 or h.DischargeDate > QuarterEndDate
+									)
+								and e3.LevelName like 'Level X'
+								and e3.hvcasefk = h.hvcasepk
+								and e3.programfk = h.programfk
+					 ) ,
+				cteFamiliesActiveAtEndOfThisQuarter6bHandlingMissingQuarters
+				  as ( -- "    b. % on Level X at end of Quarter"
+					  select	isnull(f6bmissing.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(FamiliesActiveAtEndOfThisQuarterOnLevelX, 0) as FamiliesActiveAtEndOfThisQuarterOnLevelX
+							  , isnull(FamiliesActiveAtEndOfThisQuarter, 0) as FamiliesActiveAtEndOfThisQuarter
+					  from		cteFamiliesActiveAtEndOfThisQuarter6b f6bmissing
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = f6bmissing.QuarterNumber
+					 ) ,
+				cteFamiliesActiveAtEndOfThisQuarter6b_Calc_Percentage
+				  as (select	QuarterNumber
+							  , convert(varchar, FamiliesActiveAtEndOfThisQuarterOnLevelX) + ' ('
+								+ convert(varchar, round(coalesce(cast(FamiliesActiveAtEndOfThisQuarterOnLevelX as float)
+																  * 100 / nullif(FamiliesActiveAtEndOfThisQuarter, 0), 0),
+														 0)) + '%)' as FamiliesActiveAtEndOfThisQuarterOnLevelX
+					  from		cteFamiliesActiveAtEndOfThisQuarter6bHandlingMissingQuarters
+					 ) ,	
+
+	-- 6c
+				cteFamiliesActiveAtEndOfThisQuarter6Again3
+				  as ( -- "6. Families Active at end of this Quarter"
+					  select distinct
+								QuarterNumber
+							  , count(h.HVCasePK) over (partition by [QuarterNumber]) as 'FamiliesActiveAtEndOfThisQuarter'
+					  from		#tblInitial_cohort h
+					  inner join #tblMake8Quarter q8 on h.IntakeDate <= [QuarterEndDate]
+					  where		h.IntakeDate is not null
+								and (h.DischargeDate is null
+									 or h.DischargeDate > QuarterEndDate
+									)
+					 ) ,
+				cteFamiliesWithNoServiceReferrals6c
+				  as ( -- "    c. % Families with no Service Referrals"
+	  -- Find those records (hvcasepk) that are in cteFamiliesActiveAtEndOfThisQuarter6 but does not have Service Referral in table i.e.ServiceReferral
+					  select distinct
+								q8.QuarterNumber
+							  , count(h.HVCasePK) over (partition by q8.[QuarterNumber]) as 'FamiliesWithNoServiceReferrals'
+					  from		#tblInitial_cohort h
+					  inner join #tblMake8Quarter q8 on h.IntakeDate <= [QuarterEndDate]
+					  left join ServiceReferral sr on sr.HVCaseFK = h.HVCaseFK
+													  and (ReferralDate <= [QuarterEndDate]) -- leave it here the extra condition
+					  where		h.IntakeDate is not null
+								and h.IntakeDate <= [QuarterEndDate]
+								and (h.DischargeDate is null
+									 or h.DischargeDate > [QuarterEndDate]
+									)
+								and ReferralDate is null  -- This is important
+								
+					 ) ,
+				cteFamiliesWithNoServiceReferrals6cMergeCohort
+				  as ( -- "    c. % Families with no Service Referrals"
+	  -- Note: There are quarters which are missing in cteFamiliesWithNoServiceReferrals6c because all active families have service referrals in those quarters.
+	  -- therefore, we need  to merge to bring back missing quarters
+					  select	a.QuarterNumber
+							  , FamiliesActiveAtEndOfThisQuarter
+							  , case when FamiliesWithNoServiceReferrals > 0 then FamiliesWithNoServiceReferrals
+									 else 0
+								end as FamiliesWithNoServiceReferrals
+					  from		cteFamiliesActiveAtEndOfThisQuarter6Again3 a
+					  left join cteFamiliesWithNoServiceReferrals6c b on a.QuarterNumber = b.QuarterNumber
+					 ) ,
+				cteFamiliesWithNoServiceReferrals6cMerge
+				  as ( -- "    c. % Families with no Service Referrals"
+	  -- Note: There are quarters which are missing in cteFamiliesWithNoServiceReferrals6c because all active families have service referrals in those quarters.
+	  -- therefore, we need  to merge to bring back missing quarters
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(FamiliesActiveAtEndOfThisQuarter, 0) as FamiliesActiveAtEndOfThisQuarter
+							  , isnull(FamiliesWithNoServiceReferrals, 0) as FamiliesWithNoServiceReferrals
+					  from		cteFamiliesWithNoServiceReferrals6cMergeCohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,
+				cteFamiliesWithNoServiceReferrals6c_Calc_Percentage
+				  as (select	QuarterNumber
+							  , convert(varchar, FamiliesWithNoServiceReferrals) + ' ('
+								+ convert(varchar, round(coalesce(cast(FamiliesWithNoServiceReferrals as float) * 100
+																  / nullif(FamiliesActiveAtEndOfThisQuarter, 0), 0), 0))
+								+ '%)' as FamiliesWithNoServiceReferrals
+					  from		cteFamiliesWithNoServiceReferrals6cMerge
+					 ) ,	
+
+	-- 7	
+				cteFamiliesActiveAtEndOfThisQuarter7LevelRateCohort
+				  as -- calculate level for each case
+	( -- "7. Average Visits per Month per Case on Level 1"
+	 select distinct
+			q8.QuarterNumber
+		  , count(h.HVCasePK) over (partition by q8.[QuarterNumber]) as 'FamiliesActiveAtEndOfThisQuarterOnLevel1'
+		  , sum(case when hd.StartLevelDate <= q8.QuarterStartDate then 1
+					 when hd.StartLevelDate between q8.QuarterStartDate and q8.QuarterEndDate
+					 then round(coalesce(cast(datediff(dd, hd.StartLevelDate, q8.QuarterEndDate) as float) * 100
+										 / nullif(datediff(dd, q8.QuarterStartDate, q8.QuarterEndDate), 0), 0), 0) / 100
+					 else 0
+				end) over (partition by q8.[QuarterNumber]) as 'TotalLevelRate'
+	 from	#tblInitial_cohort h
+	 inner join #tblMake8Quarter q8 on h.IntakeDate <= [QuarterEndDate]
+	 left join HVLevelDetail hd on hd.hvcasefk = h.hvcasefk
+	 where	h.IntakeDate is not null
+			and (h.DischargeDate is null
+				 or h.DischargeDate > QuarterEndDate
+				)
+			and ((q8.QuarterEndDate between hd.StartLevelDate and hd.EndLevelDate)
+				 or (q8.QuarterEndDate >= hd.StartLevelDate
+					 and hd.EndLevelDate is null
+					)
+				)  -- note: they still may be on level 1
+			and LevelName in ('Level 1', 'Level 1-SS')
+	) ,			cteFamiliesActiveAtEndOfThisQuarter7LevelRate
+				  as -- calculate level for each case
+	( -- "7. Average Visits per Month per Case on Level 1"
+	 select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+		  , isnull(FamiliesActiveAtEndOfThisQuarterOnLevel1, 0) as FamiliesActiveAtEndOfThisQuarterOnLevel1
+		  , isnull(TotalLevelRate, 0) as TotalLevelRate
+	 from	cteFamiliesActiveAtEndOfThisQuarter7LevelRateCohort s1
+	 right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+	) ,			cteFamiliesActiveAtEndOfThisQuarter7NumberOfVisitsCohort
+				  as -- calculate visits per case
+	( -- "7. Average Visits per Month per Case on Level 1"
+	 select distinct
+			q8.QuarterNumber
+		  , count(h.HVCasePK) over (partition by q8.[QuarterNumber]) as 'FamiliesActiveAtEndOfThisQuarterOnLevel1'
+		  , sum(case when hd.StartLevelDate <= q8.QuarterStartDate then 1    -- count(hvcasepk) over (partition by q8.QuarterNumber) -- count of num of visits for the entire quarter if he was on level 1 before quarterstart
+					 when VisitStartTime between hd.StartLevelDate and q8.QuarterEndDate then 1
+					 else 0
+				end) over (partition by q8.[QuarterNumber]) as 'TotalVisitRate'
+	 from	#tblInitial_cohort h
+	 left join HVLevelDetail hd on hd.hvcasefk = h.hvcasefk
+	 left outer join hvlog on h.hvcasefk = hvlog.hvcasefk
+	 inner join #tblMake8Quarter q8 on hvlog.VisitStartTime between q8.QuarterStartDate and q8.QuarterEndDate
+	 where	h.IntakeDate is not null
+			and (h.DischargeDate is null
+				 or h.DischargeDate > QuarterEndDate
+				)
+			and ((q8.QuarterEndDate between hd.StartLevelDate and hd.EndLevelDate)
+				 or (q8.QuarterEndDate >= hd.StartLevelDate
+					 and hd.EndLevelDate is null
+					)
+				)  -- note: they still may be on level 1
+			and LevelName in ('Level 1', 'Level 1-SS')
+	) ,			cteFamiliesActiveAtEndOfThisQuarter7NumberOfVisits
+				  as -- calculate visits per case
+	( -- "7. Average Visits per Month per Case on Level 1"
+	 select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+		  , isnull(FamiliesActiveAtEndOfThisQuarterOnLevel1, 0) as FamiliesActiveAtEndOfThisQuarterOnLevel1
+		  , isnull(TotalVisitRate, 0) as TotalVisitRate
+	 from	cteFamiliesActiveAtEndOfThisQuarter7NumberOfVisitsCohort s1
+	 right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+	) ,			cteFamiliesActiveAtEndOfThisQuarter7
+				  as -- calculate visits per case
+		( -- "7. Average Visits per Month per Case on Level 1"	
+		 select	lr.QuarterNumber
+			 --, lr.FamiliesActiveAtEndOfThisQuarterOnLevel1
+			 --, TotalLevelRate
+			 ----, nv.QuarterNumber
+			 --, nv.FamiliesActiveAtEndOfThisQuarterOnLevel1
+			 --, TotalVisitRate
+			 --, ( TotalVisitRate / (3 * TotalLevelRate) ) AS AverageVisitsPerMonthPerCase
+			  , round(coalesce(cast(TotalVisitRate as float) * 100 / nullif(3 * TotalLevelRate, 0), 0), 0) / 100 as AverageVisitsPerMonthPerCase
+		 from	cteFamiliesActiveAtEndOfThisQuarter7LevelRate lr
+		 inner join cteFamiliesActiveAtEndOfThisQuarter7NumberOfVisits nv on nv.QuarterNumber = lr.QuarterNumber
+		) ,	
+
+	-- 8
+				cteTotalServedInQuarterIncludesClosedCases8Cohort
+				  as ( -- "8. Total Served in Quarter(includes closed cases)"
+					  select distinct
+								QuarterNumber
+							  , count(h.HVCasePK) over (partition by [QuarterNumber]) as 'TotalServedInQuarterIncludesClosedCases'
+					  from		#tblInitial_cohort h
+					  inner join #tblMake8Quarter q8 on h.IntakeDate <= [QuarterEndDate]
+					  where		h.IntakeDate is not null
+								and (h.DischargeDate is null
+									 or h.DischargeDate >= QuarterStartDate
+									) -- not discharged or discharged after the quarter start date		
+								
+					 ) ,
+				cteTotalServedInQuarterIncludesClosedCases8
+				  as ( -- "8. Total Served in Quarter(includes closed cases)"
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(TotalServedInQuarterIncludesClosedCases, 0) as TotalServedInQuarterIncludesClosedCases
+					  from		cteTotalServedInQuarterIncludesClosedCases8Cohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,	
+
+
+
+	-- 8a
+				cteAllFamilies8AgainFor8aCohort
+				  as ( -- "8    a. Average Visits per Family"
+					  select distinct
+								QuarterNumber
+							  , count(h.HVCasePK) over (partition by [QuarterNumber]) as 'TotalFamiliesServed'
+					  from		#tblInitial_cohort h
+					  inner join #tblMake8Quarter q8 on h.IntakeDate <= [QuarterEndDate]
+					  where		h.IntakeDate is not null
+								and (h.DischargeDate is null
+									 or h.DischargeDate >= QuarterStartDate
+									) -- not discharged or discharged after the quarter start date		
+								
+					 ) ,
+				cteAllFamilies8AgainFor8a
+				  as ( -- "8    a. Average Visits per Family"
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(TotalFamiliesServed, 0) as TotalFamiliesServed
+					  from		cteAllFamilies8AgainFor8aCohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,
+				cteAllFamilies8aVisitsCohort
+				  as ( -- "8    a. Average Visits per Family"
+					  select  distinct
+								QuarterNumber
+							  , count(HVLog.HVLogPK) over (partition by [QuarterNumber]) as 'TotalHVlogActivities'
+					  from		#tblInitial_cohort h
+					  left join HVLevelDetail hd on hd.hvcasefk = h.hvcasefk
+					  left outer join hvlog on h.hvcasefk = hvlog.hvcasefk
+					  inner join #tblMake8Quarter q8 on hvlog.VisitStartTime between q8.QuarterStartDate and q8.QuarterEndDate
+					  where		h.IntakeDate is not null
+								and h.IntakeDate <= q8.[QuarterEndDate]
+								and (h.DischargeDate is null
+									 or h.DischargeDate >= [QuarterStartDate]
+									) -- not discharged or discharged after the quarter start date	
+								and HVLog.VisitType <> '0001'
+					 ) ,
+				cteAllFamilies8aVisits
+				  as ( -- "8    a. Average Visits per Family"
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(TotalHVlogActivities, 0) as TotalHVlogActivities
+					  from		cteAllFamilies8aVisitsCohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,
+				cteAverageVisitsPerFamily8a
+				  as (  -- "8    a. Average Visits per Family"
+					  select	lr.QuarterNumber
+			 --, TotalFamiliesServed
+			 ----, nv.QuarterNumber
+			 --, TotalHVlogActivities		
+							  , round(coalesce(cast(TotalHVlogActivities as float) * 100 / nullif(3
+																								  * TotalFamiliesServed,
+																								  0), 0), 0) / 100 as AverageVisitsPerFamily
+					  from		cteAllFamilies8AgainFor8a lr
+					  inner join cteAllFamilies8aVisits nv on nv.QuarterNumber = lr.QuarterNumber
+					 ) ,	
+
+	-- 8b	
+				cteAllFamilies8AgainFor8b
+				  as ( -- "8    a. Average Visits per Family"
+					  select distinct
+								QuarterNumber
+							  , count(h.HVCasePK) over (partition by [QuarterNumber]) as 'TotalFamiliesServed'
+					  from		#tblInitial_cohort h
+					  inner join #tblMake8Quarter q8 on h.IntakeDate <= [QuarterEndDate]
+					  where		h.IntakeDate is not null
+								and (h.DischargeDate is null
+									 or h.DischargeDate >= QuarterStartDate
+									) -- not discharged or discharged after the quarter start date		
+								
+					 ) ,	
+
+
+	-- 8b
+				cteAverageVisitsPerFamily8bCohort
+				  as (  -- "8    b. % TANF Services Eligible at enrollment**"
+					  select distinct
+								q8.QuarterNumber
+							  , count(*) over (partition by q8.[QuarterNumber]) as 'TANFServicesEligible'
+							  , q8b.TotalFamiliesServed
+					  from		#tblInitial_cohort h
+					  inner join CommonAttributes ca on ca.HVCaseFK = h.HVCaseFK
+					  inner join #tblMake8Quarter q8 on h.IntakeDate <= [QuarterEndDate]
+					  inner join cteAllFamilies8AgainFor8b q8b on q8b.QuarterNumber = q8.QuarterNumber
+					  where		h.IntakeDate is not null
+								and (h.DischargeDate is null
+									 or h.DischargeDate >= QuarterStartDate
+									) -- not discharged or discharged after the quarter start date	
+								and ca.TANFServices = 1
+								and ca.FormType = 'IN'  -- only from Intake form here	
+								
+					 ) ,
+				cteAverageVisitsPerFamily8b
+				  as (  -- "8    b. % TANF Services Eligible at enrollment**"
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(TANFServicesEligible, 0) as TANFServicesEligible
+							  , isnull(TotalFamiliesServed, 0) as TotalFamiliesServed
+					  from		cteAverageVisitsPerFamily8bCohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,	
+
+	-- 8b
+				cteAverageVisitsPerFamily8bFinal
+				  as (  -- "8    b. % TANF Services Eligible at enrollment**"
+					  select	QuarterNumber
+							  , convert(varchar, TANFServicesEligible) + ' ('
+								+ convert(varchar, round(coalesce(cast(TANFServicesEligible as float) * 100
+																  / nullif(TotalFamiliesServed, 0), 0), 0)) + '%)' as TANFServicesEligibleAtEnrollment
+					  from		cteAverageVisitsPerFamily8b
+					 ) ,	
+
+	-- 9
+				cteLengthInProgram9
+				  as ( -- "9. Length in Program for Active at End of Quarter"
+					  select	q8.QuarterNumber
+							  , case when (datediff(dd, h.IntakeDate, q8.[QuarterEndDate]) between 0 and 182) then 1
+									 else 0
+								end as 'LengthInProgramUnder6Months'
+							  , case when (datediff(dd, h.IntakeDate, q8.[QuarterEndDate]) between 183 and 365) then 1
+									 else 0
+								end as 'LengthInProgramUnder6MonthsTo1Year'
+							  , case when (datediff(dd, h.IntakeDate, q8.[QuarterEndDate]) between 366 and 730) then 1
+									 else 0
+								end as 'LengthInProgramUnder1YearTo2Year'
+							  , case when (datediff(dd, h.IntakeDate, q8.[QuarterEndDate]) > 730) then 1
+									 else 0
+								end as 'LengthInProgramUnder2YearsAndOver'
+					  from		#tblInitial_cohort h
+					  inner join #tblMake8Quarter q8 on h.IntakeDate <= [QuarterEndDate]
+					  where		h.IntakeDate is not null
+								and (h.DischargeDate is null
+									 or h.DischargeDate > [QuarterEndDate]
+									) -- active cases			
+								
+					 ) ,
+				cteLengthInProgram9SumCohort
+				  as ( -- "9. Length in Program for Active at End of Quarter"
+					  select distinct
+								QuarterNumber
+							  , sum(LengthInProgramUnder6Months) over (partition by [QuarterNumber]) as 'LengthInProgramUnder6Months'
+							  , sum(LengthInProgramUnder6MonthsTo1Year) over (partition by [QuarterNumber]) as 'LengthInProgramUnder6MonthsTo1Year'
+							  , sum(LengthInProgramUnder1YearTo2Year) over (partition by [QuarterNumber]) as 'LengthInProgramUnder1YearTo2Year'
+							  , sum(LengthInProgramUnder2YearsAndOver) over (partition by [QuarterNumber]) as 'LengthInProgramUnder2YearsAndOver'
+					  from		cteLengthInProgram9
+					 ) ,
+				cteLengthInProgram9Sum
+				  as ( -- "9. Length in Program for Active at End of Quarter"
+					  select	isnull(s1.QuarterNumber, q8.QuarterNumber) as QuarterNumber
+							  , isnull(LengthInProgramUnder6Months, 0) as LengthInProgramUnder6Months
+							  , isnull(LengthInProgramUnder6MonthsTo1Year, 0) as LengthInProgramUnder6MonthsTo1Year
+							  , isnull(LengthInProgramUnder1YearTo2Year, 0) as LengthInProgramUnder1YearTo2Year
+							  , isnull(LengthInProgramUnder2YearsAndOver, 0) as LengthInProgramUnder2YearsAndOver
+					  from		cteLengthInProgram9SumCohort s1
+					  right join #tblMake8Quarter q8 on q8.QuarterNumber = s1.QuarterNumber
+					 ) ,
+				cteLengthInProgramAtEndOfThisQuarter9
+				  as ( -- "6. Families Active at end of this Quarter"
+					  select distinct
+								QuarterNumber
+							  , count(h.HVCasePK) over (partition by [QuarterNumber]) as 'FamiliesActiveAtEndOfThisQuarter'
+					  from		#tblInitial_cohort h
+					  inner join #tblMake8Quarter q8 on h.IntakeDate <= [QuarterEndDate]
+					  where		h.IntakeDate is not null
+								and (h.DischargeDate is null
+									 or h.DischargeDate >= QuarterEndDate
+									)
+					 ) ,
+				cteLengthInProgramFinal
+				  as (  -- "9. Length in Program for Active at End of Quarter"
+					  select	cl.QuarterNumber
+							  , convert(varchar, LengthInProgramUnder6Months) + ' ('
+								+ convert(varchar, round(coalesce(cast(LengthInProgramUnder6Months as float) * 100
+																  / nullif(ct.FamiliesActiveAtEndOfThisQuarter, 0), 0),
+														 0)) + '%)' as LengthInProgramUnder6Months
+							  , convert(varchar, LengthInProgramUnder6MonthsTo1Year) + ' ('
+								+ convert(varchar, round(coalesce(cast(LengthInProgramUnder6MonthsTo1Year as float)
+																  * 100 / nullif(ct.FamiliesActiveAtEndOfThisQuarter, 0),
+																  0), 0)) + '%)' as LengthInProgramUnder6MonthsTo1Year
+							  , convert(varchar, LengthInProgramUnder1YearTo2Year) + ' ('
+								+ convert(varchar, round(coalesce(cast(LengthInProgramUnder1YearTo2Year as float) * 100
+																  / nullif(ct.FamiliesActiveAtEndOfThisQuarter, 0), 0),
+														 0)) + '%)' as LengthInProgramUnder1YearTo2Year
+							  , convert(varchar, LengthInProgramUnder2YearsAndOver) + ' ('
+								+ convert(varchar, round(coalesce(cast(LengthInProgramUnder2YearsAndOver as float) * 100
+																  / nullif(ct.FamiliesActiveAtEndOfThisQuarter, 0), 0),
+														 0)) + '%)' as LengthInProgramUnder2YearsAndOver
+					  from		cteLengthInProgram9Sum cl
+					  inner join cteLengthInProgramAtEndOfThisQuarter9 ct on ct.QuarterNumber = cl.QuarterNumber
+					 )
+			---- exec [rspProgramInformationFor8Quarters] '2','06/30/2012'
+
+
+--SELECT * FROM cteLengthInProgramFinal
+
+
+	-- For report Summary - Just add the new row (add another inner join for a newly created cte for the new row in the report summary) ... Khalsa
+
+	insert	into #tblQ8ReportMain
+			(QuarterNumber
+		   , QuarterEndDate
+		   , numberOfScreens
+		   , numberOfKempAssessments
+		   , KempPositivePercentage
+		   , KempPositiveEnrolled
+		   , KempPositivePending
+		   , KempPositiveTerminated
+		   , AvgPositiveMotherScore
+		   , EnrolledAtBeginningOfQrtr
+		   , NewEnrollmentsThisQuarter
+		   , NewEnrollmentsPrenatal
+		   , TANFServicesEligible
+		   , FamiliesDischargedThisQuarter
+		   , FamiliesCompletingProgramThisQuarter
+		   , FamiliesActiveAtEndOfThisQuarter
+		   , FamiliesActiveAtEndOfThisQuarterOnLevel1
+		   , FamiliesActiveAtEndOfThisQuarterOnLevelX
+		   , FamiliesWithNoServiceReferrals
+		   , AverageVisitsPerMonthPerCase
+		   , TotalServedInQuarterIncludesClosedCases
+		   , AverageVisitsPerFamily
+		   , TANFServicesEligibleAtEnrollment
+		   , rowBlankforItem9
+		   , LengthInProgramUnder6Months
+		   , LengthInProgramUnder6MonthsTo1Year
+		   , LengthInProgramUnder1YearTo2Year
+		   , LengthInProgramUnder2YearsAndOver	
+			)
+			select	scrns.QuarterNumber
+				  , left(convert(varchar, q8.QuarterEndDate, 120), 10) as QuarterEndDate -- convert into string
+				  , numberOfScreens
+				  , numberOfKempAssessments
+				  , q82a.KempPositivePercentage
+				  , q82a1.KempPositiveEnrolled
+				  , q82a2.KempPositivePending
+				  , q82a3.KempPositiveTerminated
+				  , convert(decimal(4, 1), q82b.AvgPositiveMotherScore) as AvgPositiveMotherScore
+				  , q83.EnrolledAtBeginningOfQrtr
+				  , q84.NewEnrollmentsThisQuarter
+				  , q84a.NewEnrollmentsPrenatal
+				  , q84b.TANFServicesEligible
+				  , q85.FamiliesDischargedThisQuarter
+				  , q85a.FamiliesCompletingProgramThisQuarter
+				  , q86.FamiliesActiveAtEndOfThisQuarter
+				  , q86a.FamiliesActiveAtEndOfThisQuarterOnLevel1
+				  , q86b.FamiliesActiveAtEndOfThisQuarterOnLevelX
+				  , q86c.FamiliesWithNoServiceReferrals
+				  , q87.AverageVisitsPerMonthPerCase
+				  , q88.TotalServedInQuarterIncludesClosedCases
+				  , q88a.AverageVisitsPerFamily
+				  , q88b.TANFServicesEligibleAtEnrollment
+				  , '' as rowBlankforItem9
+				  , q9.LengthInProgramUnder6Months
+				  , q9.LengthInProgramUnder6MonthsTo1Year
+				  , q9.LengthInProgramUnder1YearTo2Year
+				  , q9.LengthInProgramUnder2YearsAndOver
+			from	cteScreensFor1 scrns
+			inner join cteKempAssessmentsFor2 ka on ka.QuarterNumber = scrns.QuarterNumber
+			inner join cteKempAssessments_For2a_Calc_Percentage q82a on q82a.QuarterNumber = scrns.QuarterNumber
+			inner join cteKempAssessments_For2a_1_Calc_Percentage q82a1 on q82a1.QuarterNumber = scrns.QuarterNumber
+			inner join cteKempAssessments_For2a_2_Calc_Percentage q82a2 on q82a2.QuarterNumber = scrns.QuarterNumber
+			inner join cteKempAssessments_For2a_3_Calc_Percentage q82a3 on q82a3.QuarterNumber = scrns.QuarterNumber
+			inner join cteKempAssessments_For2b q82b on q82b.QuarterNumber = scrns.QuarterNumber
+			inner join cteEnrolledAtBeginingOfQuarter3 q83 on q83.QuarterNumber = scrns.QuarterNumber
+			inner join cteNewEnrollmentsThisQuarter4 q84 on q84.QuarterNumber = scrns.QuarterNumber
+			inner join cteNewEnrollmentsThisQuarter4a_Calc_Percentage q84a on q84a.QuarterNumber = scrns.QuarterNumber
+			inner join cteNewEnrollmentsThisQuarter4b_Calc_Percentage q84b on q84b.QuarterNumber = scrns.QuarterNumber
+			inner join cteFamiliesDischargedThisQuarter5 q85 on q85.QuarterNumber = scrns.QuarterNumber
+			inner join cteFamiliesCompletingProgramThisQuarter5a q85a on q85a.QuarterNumber = scrns.QuarterNumber
+			inner join cteFamiliesActiveAtEndOfThisQuarter6 q86 on q86.QuarterNumber = scrns.QuarterNumber
+			inner join cteFamiliesActiveAtEndOfThisQuarter6a_Calc_Percentage q86a on q86a.QuarterNumber = scrns.QuarterNumber
+			inner join cteFamiliesActiveAtEndOfThisQuarter6b_Calc_Percentage q86b on q86b.QuarterNumber = scrns.QuarterNumber
+			inner join cteFamiliesWithNoServiceReferrals6c_Calc_Percentage q86c on q86c.QuarterNumber = scrns.QuarterNumber
+			inner join cteFamiliesActiveAtEndOfThisQuarter7 q87 on q87.QuarterNumber = scrns.QuarterNumber
+			inner join cteTotalServedInQuarterIncludesClosedCases8 q88 on q88.QuarterNumber = scrns.QuarterNumber
+			inner join cteAverageVisitsPerFamily8a q88a on q88a.QuarterNumber = scrns.QuarterNumber
+			inner join cteAverageVisitsPerFamily8bFinal q88b on q88b.QuarterNumber = scrns.QuarterNumber
+			inner join cteLengthInProgramFinal q9 on q9.QuarterNumber = scrns.QuarterNumber
+			inner join #tblMake8Quarter q8 on q8.QuarterNumber = scrns.QuarterNumber
+			order by scrns.QuarterNumber 
+
+
+
+		insert	into #tblQ8ReportMain
+				(QuarterNumber
+			   , QuarterEndDate
+			   , numberOfScreens
+			   , numberOfKempAssessments
+			   , KempPositivePercentage
+			   , KempPositiveEnrolled
+			   , KempPositivePending
+			   , KempPositiveTerminated
+			   , AvgPositiveMotherScore
+			   , EnrolledAtBeginningOfQrtr
+			   , NewEnrollmentsThisQuarter
+			   , NewEnrollmentsPrenatal
+			   , TANFServicesEligible
+			   , FamiliesDischargedThisQuarter
+			   , FamiliesCompletingProgramThisQuarter
+			   , FamiliesActiveAtEndOfThisQuarter
+			   , FamiliesActiveAtEndOfThisQuarterOnLevel1
+			   , FamiliesActiveAtEndOfThisQuarterOnLevelX
+			   , FamiliesWithNoServiceReferrals
+			   , AverageVisitsPerMonthPerCase
+			   , TotalServedInQuarterIncludesClosedCases
+			   , AverageVisitsPerFamily
+			   , TANFServicesEligibleAtEnrollment
+			   , rowBlankforItem9
+			   , LengthInProgramUnder6Months
+			   , LengthInProgramUnder6MonthsTo1Year
+			   , LengthInProgramUnder1YearTo2Year
+			   , LengthInProgramUnder2YearsAndOver	
+
+				)
+				select	99
+					  , 'Last day of Quarter'
+					  , '1. Total Screens'
+					  , '2. Total Kempe Assessments'
+					  , '    a. % Positive'
+					  , '        1. % Positive Enrolled'
+					  , '        2. % Positive Pending Enrollment'
+					  , '        3. % Positive Terminated'
+					  , '    b. Average Positive Score'
+					  , '3. Families Enrolled at Beginning of quarter'
+					  , '4. New Enrollments this quarter'
+					  , '    a. % Prenatal'
+					  , '    b. % TANF Services Eligible at Enrollment**'
+					  , '5. Families Discharged this quarter'
+					  , '    a. Families completing the program'
+					  , '6. Families Active at end of this Quarter'
+					  , '    a. % on Level 1 at end of Quarter'
+					  , '    b. % on Level X at end of Quarter'
+					  , '    c. % Families with no Service Referrals'
+					  , '7. Average Visits per Month per Case on Level 1 or Level 1-SS'
+					  , '8. Total Served in Quarter(includes closed cases)'
+					  , '    a. Average Visits per Family'
+					  , '    b. % TANF Services Eligible at enrollment**'
+					  , '9. Length in Program for Active at End of Quarter'
+					  , '    a. Under 6 months'
+					  , '    b. 6 months up to 1 year'
+					  , '    c. 1 year up to 2 years'
+					  , '    d. 2 years and Over'			
+
+-- handling when there is no data available e.g. for a new program that just joins hfny like Dominican Womens
+-- add quarters with missing data. just add rows for those quarters with placeholders containing fake/imaginery data
+				union all
+				select	[QuarterNumber]
+					  , left(convert(varchar, QuarterEndDate, 120), 10) as QuarterEndDate
+					  , [Col1]
+					  , [Col2]
+					  , [Col3]
+					  , [Col4]
+					  , [Col5]
+					  , [Col6]
+					  , [Col7]
+					  , [Col8]
+					  , [Col9]
+					  , [Col10]
+					  , [Col11]
+					  , [Col12]
+					  , [Col13]
+					  , [Col14]
+					  , [Col15]
+					  , [Col16]
+					  , [Col17]
+					  , [Col18]
+					  , [Col19]
+					  , [Col20]
+					  , [Col21]
+					  , [Col22]
+					  , [Col23]
+					  , [Col24]
+					  , [Col25]
+					  , [Col26]
+				from	#tblMake8Quarter
+				where	QuarterNumber not in (select	QuarterNumber
+											  from		#tblQ8ReportMain)
+
+---- exec [rspProgramInformationFor8Quarters] '2','06/30/2012'
+--SELECT * from #tblQ8ReportMain
+
+-- Objective: Transpose Rows into Columns - what a pain in the ...
+-- Idea: Create 9 variable tables and later join them to get our final result
+-- Note: in each variable table, we are using UnPivot method  ... Khalsa
+
+
+		declare	@tblcol99 table ([Q8Columns] varchar(max)
+							   , [Q8LeftNavText] varchar(max)
+								)
+
+		declare	@tblcol1 table ([Q8Columns] varchar(max)
+							  , [Q8Col1] varchar(max)
+							   )
+
+		declare	@tblcol2 table ([Q8Columns] varchar(max)
+							  , [Q8Col2] varchar(max)
+							   )
+
+		declare	@tblcol3 table ([Q8Columns] varchar(max)
+							  , [Q8Col3] varchar(max)
+							   )
+
+		declare	@tblcol4 table ([Q8Columns] varchar(max)
+							  , [Q8Col4] varchar(max)
+							   )
+
+		declare	@tblcol5 table ([Q8Columns] varchar(max)
+							  , [Q8Col5] varchar(max)
+							   )
+
+		declare	@tblcol6 table ([Q8Columns] varchar(max)
+							  , [Q8Col6] varchar(max)
+							   )
+
+		declare	@tblcol7 table ([Q8Columns] varchar(max)
+							  , [Q8Col7] varchar(max)
+							   )
+
+		declare	@tblcol8 table ([Q8Columns] varchar(max)
+							  , [Q8Col8] varchar(max)
+							   );
+		with	cteCol99
+				  as (select	*
+					  from		#tblQ8ReportMain as Q8Report
+					  where		Q8Report.QuarterNumber = 99
+					 )
+			insert	into @tblcol99
+					select	field
+						  , value
+					from	cteCol99 as col1 unpivot 
+( value for field in (QuarterEndDate, numberOfScreens, numberOfKempAssessments, KempPositivePercentage,
+					  KempPositiveEnrolled, KempPositivePending, KempPositiveTerminated, AvgPositiveMotherScore,
+					  EnrolledAtBeginningOfQrtr, NewEnrollmentsThisQuarter, NewEnrollmentsPrenatal, TANFServicesEligible,
+					  FamiliesDischargedThisQuarter, FamiliesCompletingProgramThisQuarter,
+					  FamiliesActiveAtEndOfThisQuarter, FamiliesActiveAtEndOfThisQuarterOnLevel1,
+					  FamiliesActiveAtEndOfThisQuarterOnLevelX, FamiliesWithNoServiceReferrals,
+					  AverageVisitsPerMonthPerCase, TotalServedInQuarterIncludesClosedCases, AverageVisitsPerFamily,
+					  TANFServicesEligibleAtEnrollment, rowBlankforItem9, LengthInProgramUnder6Months,
+					  LengthInProgramUnder6MonthsTo1Year, LengthInProgramUnder1YearTo2Year,
+					  LengthInProgramUnder2YearsAndOver) ) unpvtCol99
+
+
+-- column1
+;
+
+		with	cteCol1
+				  as (select	*
+					  from		#tblQ8ReportMain as Q8Report
+					  where		Q8Report.QuarterNumber = 1
+					 )
+			insert	into @tblcol1
+					select	field
+						  , value
+					from	cteCol1 as col1 unpivot 
+( value for field in (QuarterEndDate, numberOfScreens, numberOfKempAssessments, KempPositivePercentage,
+					  KempPositiveEnrolled, KempPositivePending, KempPositiveTerminated, AvgPositiveMotherScore,
+					  EnrolledAtBeginningOfQrtr, NewEnrollmentsThisQuarter, NewEnrollmentsPrenatal, TANFServicesEligible,
+					  FamiliesDischargedThisQuarter, FamiliesCompletingProgramThisQuarter,
+					  FamiliesActiveAtEndOfThisQuarter, FamiliesActiveAtEndOfThisQuarterOnLevel1,
+					  FamiliesActiveAtEndOfThisQuarterOnLevelX, FamiliesWithNoServiceReferrals,
+					  AverageVisitsPerMonthPerCase, TotalServedInQuarterIncludesClosedCases, AverageVisitsPerFamily,
+					  TANFServicesEligibleAtEnrollment, rowBlankforItem9, LengthInProgramUnder6Months,
+					  LengthInProgramUnder6MonthsTo1Year, LengthInProgramUnder1YearTo2Year,
+					  LengthInProgramUnder2YearsAndOver) ) unpvtCol1
+
+
+-- column2
+;
+		with	cteCol2
+				  as (select	*
+					  from		#tblQ8ReportMain as Q8Report
+					  where		Q8Report.QuarterNumber = 2
+					 )
+			insert	into @tblcol2
+					select	field
+						  , value
+					from	cteCol2 as col2 unpivot 
+( value for field in (QuarterEndDate, numberOfScreens, numberOfKempAssessments, KempPositivePercentage,
+					  KempPositiveEnrolled, KempPositivePending, KempPositiveTerminated, AvgPositiveMotherScore,
+					  EnrolledAtBeginningOfQrtr, NewEnrollmentsThisQuarter, NewEnrollmentsPrenatal, TANFServicesEligible,
+					  FamiliesDischargedThisQuarter, FamiliesCompletingProgramThisQuarter,
+					  FamiliesActiveAtEndOfThisQuarter, FamiliesActiveAtEndOfThisQuarterOnLevel1,
+					  FamiliesActiveAtEndOfThisQuarterOnLevelX, FamiliesWithNoServiceReferrals,
+					  AverageVisitsPerMonthPerCase, TotalServedInQuarterIncludesClosedCases, AverageVisitsPerFamily,
+					  TANFServicesEligibleAtEnrollment, rowBlankforItem9, LengthInProgramUnder6Months,
+					  LengthInProgramUnder6MonthsTo1Year, LengthInProgramUnder1YearTo2Year,
+					  LengthInProgramUnder2YearsAndOver) ) unpvtCol2
+
+-- column3
+;
+		with	cteCol3
+				  as (select	*
+					  from		#tblQ8ReportMain as Q8Report
+					  where		Q8Report.QuarterNumber = 3
+					 )
+			insert	into @tblcol3
+					select	field
+						  , value
+					from	cteCol3 as col3 unpivot 
+( value for field in (QuarterEndDate, numberOfScreens, numberOfKempAssessments, KempPositivePercentage,
+					  KempPositiveEnrolled, KempPositivePending, KempPositiveTerminated, AvgPositiveMotherScore,
+					  EnrolledAtBeginningOfQrtr, NewEnrollmentsThisQuarter, NewEnrollmentsPrenatal, TANFServicesEligible,
+					  FamiliesDischargedThisQuarter, FamiliesCompletingProgramThisQuarter,
+					  FamiliesActiveAtEndOfThisQuarter, FamiliesActiveAtEndOfThisQuarterOnLevel1,
+					  FamiliesActiveAtEndOfThisQuarterOnLevelX, FamiliesWithNoServiceReferrals,
+					  AverageVisitsPerMonthPerCase, TotalServedInQuarterIncludesClosedCases, AverageVisitsPerFamily,
+					  TANFServicesEligibleAtEnrollment, rowBlankforItem9, LengthInProgramUnder6Months,
+					  LengthInProgramUnder6MonthsTo1Year, LengthInProgramUnder1YearTo2Year,
+					  LengthInProgramUnder2YearsAndOver) ) unpvtCol3
+
+-- column4
+;
+		with	cteCol4
+				  as (select	*
+					  from		#tblQ8ReportMain as Q8Report
+					  where		Q8Report.QuarterNumber = 4
+					 )
+			insert	into @tblcol4
+					select	field
+						  , value
+					from	cteCol4 as col4 unpivot 
+( value for field in (QuarterEndDate, numberOfScreens, numberOfKempAssessments, KempPositivePercentage,
+					  KempPositiveEnrolled, KempPositivePending, KempPositiveTerminated, AvgPositiveMotherScore,
+					  EnrolledAtBeginningOfQrtr, NewEnrollmentsThisQuarter, NewEnrollmentsPrenatal, TANFServicesEligible,
+					  FamiliesDischargedThisQuarter, FamiliesCompletingProgramThisQuarter,
+					  FamiliesActiveAtEndOfThisQuarter, FamiliesActiveAtEndOfThisQuarterOnLevel1,
+					  FamiliesActiveAtEndOfThisQuarterOnLevelX, FamiliesWithNoServiceReferrals,
+					  AverageVisitsPerMonthPerCase, TotalServedInQuarterIncludesClosedCases, AverageVisitsPerFamily,
+					  TANFServicesEligibleAtEnrollment, rowBlankforItem9, LengthInProgramUnder6Months,
+					  LengthInProgramUnder6MonthsTo1Year, LengthInProgramUnder1YearTo2Year,
+					  LengthInProgramUnder2YearsAndOver) ) unpvtCol4
+
+-- column5
+;
+		with	cteCol5
+				  as (select	*
+					  from		#tblQ8ReportMain as Q8Report
+					  where		Q8Report.QuarterNumber = 5
+					 )
+			insert	into @tblcol5
+					select	field
+						  , value
+					from	cteCol5 as col5 unpivot 
+( value for field in (QuarterEndDate, numberOfScreens, numberOfKempAssessments, KempPositivePercentage,
+					  KempPositiveEnrolled, KempPositivePending, KempPositiveTerminated, AvgPositiveMotherScore,
+					  EnrolledAtBeginningOfQrtr, NewEnrollmentsThisQuarter, NewEnrollmentsPrenatal, TANFServicesEligible,
+					  FamiliesDischargedThisQuarter, FamiliesCompletingProgramThisQuarter,
+					  FamiliesActiveAtEndOfThisQuarter, FamiliesActiveAtEndOfThisQuarterOnLevel1,
+					  FamiliesActiveAtEndOfThisQuarterOnLevelX, FamiliesWithNoServiceReferrals,
+					  AverageVisitsPerMonthPerCase, TotalServedInQuarterIncludesClosedCases, AverageVisitsPerFamily,
+					  TANFServicesEligibleAtEnrollment, rowBlankforItem9, LengthInProgramUnder6Months,
+					  LengthInProgramUnder6MonthsTo1Year, LengthInProgramUnder1YearTo2Year,
+					  LengthInProgramUnder2YearsAndOver) ) unpvtCol5
+
+-- column6
+;
+		with	cteCol6
+				  as (select	*
+					  from		#tblQ8ReportMain as Q8Report
+					  where		Q8Report.QuarterNumber = 6
+					 )
+			insert	into @tblcol6
+					select	field
+						  , value
+					from	cteCol6 as col6 unpivot 
+( value for field in (QuarterEndDate, numberOfScreens, numberOfKempAssessments, KempPositivePercentage,
+					  KempPositiveEnrolled, KempPositivePending, KempPositiveTerminated, AvgPositiveMotherScore,
+					  EnrolledAtBeginningOfQrtr, NewEnrollmentsThisQuarter, NewEnrollmentsPrenatal, TANFServicesEligible,
+					  FamiliesDischargedThisQuarter, FamiliesCompletingProgramThisQuarter,
+					  FamiliesActiveAtEndOfThisQuarter, FamiliesActiveAtEndOfThisQuarterOnLevel1,
+					  FamiliesActiveAtEndOfThisQuarterOnLevelX, FamiliesWithNoServiceReferrals,
+					  AverageVisitsPerMonthPerCase, TotalServedInQuarterIncludesClosedCases, AverageVisitsPerFamily,
+					  TANFServicesEligibleAtEnrollment, rowBlankforItem9, LengthInProgramUnder6Months,
+					  LengthInProgramUnder6MonthsTo1Year, LengthInProgramUnder1YearTo2Year,
+					  LengthInProgramUnder2YearsAndOver) ) unpvtCol6
+
+-- column7
+;
+		with	cteCol7
+				  as (select	*
+					  from		#tblQ8ReportMain as Q8Report
+					  where		Q8Report.QuarterNumber = 7
+					 )
+			insert	into @tblcol7
+					select	field
+						  , value
+					from	cteCol7 as col7 unpivot 
+
+
+
+( value for field in (QuarterEndDate, numberOfScreens, numberOfKempAssessments, KempPositivePercentage,
+					  KempPositiveEnrolled, KempPositivePending, KempPositiveTerminated, AvgPositiveMotherScore,
+					  EnrolledAtBeginningOfQrtr, NewEnrollmentsThisQuarter, NewEnrollmentsPrenatal, TANFServicesEligible,
+					  FamiliesDischargedThisQuarter, FamiliesCompletingProgramThisQuarter,
+					  FamiliesActiveAtEndOfThisQuarter, FamiliesActiveAtEndOfThisQuarterOnLevel1,
+					  FamiliesActiveAtEndOfThisQuarterOnLevelX, FamiliesWithNoServiceReferrals,
+					  AverageVisitsPerMonthPerCase, TotalServedInQuarterIncludesClosedCases, AverageVisitsPerFamily,
+					  TANFServicesEligibleAtEnrollment, rowBlankforItem9, LengthInProgramUnder6Months,
+					  LengthInProgramUnder6MonthsTo1Year, LengthInProgramUnder1YearTo2Year,
+					  LengthInProgramUnder2YearsAndOver) ) unpvtCol7
+
+-- column8
+;
+		with	cteCol8
+				  as (select	*
+					  from		#tblQ8ReportMain as Q8Report
+					  where		Q8Report.QuarterNumber = 8
+					 )
+			insert	into @tblcol8
+					select	field
+						  , value
+					from	cteCol8 as col8 unpivot 
+( value for field in (QuarterEndDate, numberOfScreens, numberOfKempAssessments, KempPositivePercentage,
+					  KempPositiveEnrolled, KempPositivePending, KempPositiveTerminated, AvgPositiveMotherScore,
+					  EnrolledAtBeginningOfQrtr, NewEnrollmentsThisQuarter, NewEnrollmentsPrenatal, TANFServicesEligible,
+					  FamiliesDischargedThisQuarter, FamiliesCompletingProgramThisQuarter,
+					  FamiliesActiveAtEndOfThisQuarter, FamiliesActiveAtEndOfThisQuarterOnLevel1,
+					  FamiliesActiveAtEndOfThisQuarterOnLevelX, FamiliesWithNoServiceReferrals,
+					  AverageVisitsPerMonthPerCase, TotalServedInQuarterIncludesClosedCases, AverageVisitsPerFamily,
+					  TANFServicesEligibleAtEnrollment, rowBlankforItem9, LengthInProgramUnder6Months,
+					  LengthInProgramUnder6MonthsTo1Year, LengthInProgramUnder1YearTo2Year,
+					  LengthInProgramUnder2YearsAndOver) ) unpvtCol8
+
+
+
+-- Now get the desired output ... Khalsa
+-- get all the columns and put them together now
+		select	Q8LeftNavText
+			  , c1.Q8Col1
+			  , c2.Q8Col2
+			  , c3.Q8Col3
+			  , c4.Q8Col4
+			  , c5.Q8Col5
+			  , c6.Q8Col6
+			  , c7.Q8Col7
+			  , c8.Q8Col8
+		from	@tblcol99 c99
+		inner join @tblcol1 c1 on c1.Q8Columns = c99.Q8Columns
+		inner join @tblcol2 c2 on c2.Q8Columns = c99.Q8Columns
+		inner join @tblcol3 c3 on c3.Q8Columns = c99.Q8Columns
+		inner join @tblcol4 c4 on c4.Q8Columns = c99.Q8Columns
+		inner join @tblcol5 c5 on c5.Q8Columns = c99.Q8Columns
+		inner join @tblcol6 c6 on c6.Q8Columns = c99.Q8Columns
+		inner join @tblcol7 c7 on c7.Q8Columns = c99.Q8Columns
+		inner join @tblcol8 c8 on c8.Q8Columns = c99.Q8Columns
+
+
+		drop table #tblQ8ReportMain
+		drop table #tblMake8Quarter
+		drop table #tblInitial_cohort
+-- exec [rspProgramInformationFor8Quarters] '5','06/30/2012'
+	end
+GO
diff --git a/Stored Procedures/dbo.rspQAReport14.sql b/Stored Procedures/dbo.rspQAReport14.sql
new file mode 100644
index 0000000..ffa8039
--- /dev/null
+++ b/Stored Procedures/dbo.rspQAReport14.sql
@@ -0,0 +1,287 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+
+-- =============================================
+-- Author:		<Devinder Singh Khalsa>
+-- Create date: <October 18, 2012>
+-- Description:	<This QA report gets you '14. No Home Visits since <xdate-60> for Active Cases Excludes Level X and Level 4 Cases '>
+-- Modified: <10-20-15 Fix calc DOB cdc>
+-- rspQAReport1-4 31, 'summary'	--- for summary page
+-- rspQAReport14 31			--- for main report - location = 2
+-- rspQAReport14 null			--- for main report for all locations
+-- =============================================
+
+
+CREATE procedure [dbo].[rspQAReport14](
+@programfk    varchar(max)    = NULL,
+@ReportType char(7) = NULL 
+
+)
+AS
+	if @programfk is null
+	begin
+		select @programfk = substring((select ','+LTRIM(RTRIM(STR(HVProgramPK)))
+										   from HVProgram
+										   for xml path ('')),2,8000)
+	end
+
+	set @programfk = REPLACE(@programfk,'"','')
+
+-- Last Day of Previous Month 
+Declare @LastDayofPreviousMonth DateTime 
+Set @LastDayofPreviousMonth = DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,GETDATE()),0)) -- analysis point
+
+--Set @LastDayofPreviousMonth = '05/31/2012'
+
+DECLARE @Back2MonthsFromAnalysisPoint DateTime
+SET @Back2MonthsFromAnalysisPoint = dateadd(m,-2,@LastDayofPreviousMonth)
+
+--SELECT @Back2MonthsFromAnalysisPoint	
+
+--DECLARE @tbl4QAReport14 TABLE(
+--	HVCasePK INT, 
+--	[PC1ID] [char](13),
+--	LengthInProgress INT,
+--	Worker [varchar](200),	
+--	currentLevel [varchar](50)	
+--	)
+
+	
+DECLARE @tbl4QAReport14Final TABLE(	
+	HVCasePK INT, 
+	[PC1ID] [char](13),		
+	LastVisitAttempted [datetime],
+	LastVisitActual [datetime],  	
+	Worker [varchar](200),
+	currentLevel [varchar](50)	
+	)
+
+-- table variable for holding Init Required Data
+DECLARE @tbl4QAReport14Detail TABLE(
+	HVCasePK INT, 
+	[PC1ID] [char](13),	
+	TCDOB [datetime],
+	FormDueDate [datetime],	
+	Worker [varchar](200),
+	currentLevel [varchar](50),
+	IntakeDate [datetime],
+	DischargeDate [datetime],
+	CaseProgress [NUMERIC] (3),
+	IntakeLevel [char](1),
+	TCNumber INT,
+	MultipleBirth [char](3),
+	XDateAge INT,
+	TCName [varchar](200),
+	DaysSinceLastMedicalFormEdit INT,
+	LengthInProgress INT  
+	)
+
+INSERT INTO @tbl4QAReport14Detail(
+	HVCasePK,
+	[PC1ID],
+	TCDOB,
+	FormDueDate,
+	Worker,
+	currentLevel,
+	IntakeDate,
+	DischargeDate,
+	CaseProgress,
+	IntakeLevel,
+	TCNumber,
+	MultipleBirth,
+	XDateAge,
+	TCName,
+	DaysSinceLastMedicalFormEdit,
+	LengthInProgress	
+)
+select 
+	 h.HVCasePK, 
+	cp.PC1ID,
+	case
+	   when h.tcdob is not null then
+		   h.tcdob
+	   else
+		   h.edc
+	end as tcdob,
+	
+	--	Form due date is 30.44 days after intake if postnatal at intake or 30.44 days after TC DOB if prenatal at intake
+	case
+	   when (h.tcdob is not NULL AND h.tcdob <= h.IntakeDate) THEN -- postnatal
+		   dateadd(mm,1,h.IntakeDate) 
+	   when (h.tcdob is not NULL AND h.tcdob > h.IntakeDate) THEN -- pretnatal
+					dateadd(mm,1,h.tcdob) 
+	   when (h.tcdob is NULL AND h.edc > h.IntakeDate) THEN -- pretnatal
+					dateadd(mm,1,h.edc) 					
+	end as FormDueDate,
+	
+	LTRIM(RTRIM(fsw.firstname))+' '+LTRIM(RTRIM(fsw.lastname)) as worker,
+
+	codeLevel.LevelName,
+	h.IntakeDate,
+	cp.DischargeDate,
+	h.CaseProgress,
+	h.IntakeLevel,
+	h.TCNumber,
+	CASE WHEN h.TCNumber > 1 THEN 'Yes' ELSE 'No' End
+	as [MultipleBirth],
+		case
+	   when h.tcdob is not null then
+		 datediff(dd, h.tcdob,  @LastDayofPreviousMonth)
+	   else
+		   datediff(dd, h.edc, @LastDayofPreviousMonth)
+	end as XDateAge,
+	'' AS TCName,
+	''  AS DaysSinceLastMedicalFormEdit,
+	datediff(dd, h.IntakeDate,  @LastDayofPreviousMonth)  AS LengthInProgress
+		
+	from dbo.CaseProgram cp
+	inner join dbo.SplitString(@programfk,',') on cp.programfk = listitem
+	left join codeLevel on cp.CurrentLevelFK = codeLevel.codeLevelPK
+	inner join dbo.HVCase h ON cp.HVCaseFK = h.HVCasePK	
+	inner join worker fsw on cp.CurrentFSWFK = fsw.workerpk
+	
+	
+	where   ((h.IntakeDate <= dateadd(M, -1, @LastDayofPreviousMonth)) AND (h.IntakeDate IS NOT NULL))	 		  
+			AND (cp.DischargeDate IS NULL OR cp.DischargeDate > @LastDayofPreviousMonth)
+			AND codeLevel.LevelName NOT IN ('Level 4', 'Level X')
+			AND cp.CaseStartDate <= @Back2MonthsFromAnalysisPoint  -- new 			
+			order by h.HVCasePK -- h.IntakeDate 
+
+--SELECT * FROM @tbl4QAReport14Detail
+
+;
+WITH cteHVLogRegularVisits AS
+(
+
+		SELECT HVCaseFK FROM HVLog h 
+		inner join dbo.SplitString(@programfk,',') on h.programfk = listitem
+		WHERE cast(VisitStartTime AS DATE) BETWEEN @Back2MonthsFromAnalysisPoint AND @LastDayofPreviousMonth
+		AND VisitType <> '0001' -- all regular visits
+		GROUP BY HVCaseFK
+	
+)
+
+
+	SELECT HVCasePK
+		 , PC1ID
+		 , LengthInProgress
+		 , Worker
+		 , currentLevel
+		INTO #tbl4QAReport14 -- Used temp table, because insert same into a variable table name like @tbl4QAReport14, SQL Server was taking 5 secs to complete ... Khalsa
+	 FROM @tbl4QAReport14Detail qa3
+	 WHERE HVCasePK NOT IN (SELECT HVCaseFK FROM cteHVLogRegularVisits h)  
+
+ 
+
+-- rspQAReport14 31 ,'summary'
+---- fill in LastVisit and LastAttempted
+
+;
+WITH cteHVLogAttempted AS
+(
+	SELECT HVCaseFK,max(VisitStartTime) VisitStartTime FROM HVLog h 
+	inner join dbo.SplitString(@programfk,',') on h.programfk = listitem
+	WHERE VisitType = '0001' -- all attempted visits
+	GROUP BY HVCaseFK 
+	
+)
+,
+ cteHVLogActualVisits AS
+(
+	SELECT HVCaseFK,max(VisitStartTime) VisitStartTime FROM HVLog h 
+	inner join dbo.SplitString(@programfk,',') on h.programfk = listitem
+	WHERE VisitType <> '0001' -- all regular visits
+	AND VisitStartTime < @LastDayofPreviousMonth
+	GROUP BY HVCaseFK 
+	
+)
+
+INSERT INTO @tbl4QAReport14Final
+(
+	   HVCasePK
+	 , PC1ID	 
+	 , LastVisitAttempted
+	 , LastVisitActual
+	 , Worker
+	 , currentLevel
+)
+SELECT HVCasePK
+	 , PC1ID
+	 , att.VisitStartTime AS DateLastAttempted
+	 , act.VisitStartTime AS LastHomeVisitDate	 
+	 , Worker
+	 , currentLevel
+
+ FROM #tbl4QAReport14 qa14
+ LEFT JOIN cteHVLogAttempted att ON att.HVCaseFK = qa14.HVCasePK 
+ LEFT JOIN cteHVLogActualVisits act ON act.HVCaseFK = qa14.HVCasePK 
+ ORDER BY Worker 
+
+DROP TABLE #tbl4QAReport14
+
+-- rspQAReport14 31 ,'summary'
+
+if @ReportType='summary'
+BEGIN 
+
+DECLARE @numOfALLScreens INT = 0
+
+-- Note: We using sum on TCNumber to get correct number of cases, as there may be twins etc.
+SET @numOfALLScreens = (SELECT count(HVCasePK) FROM @tbl4QAReport14Detail)  
+
+DECLARE @numOfActiveIntakeCases INT = 0
+SET @numOfActiveIntakeCases = (SELECT count(HVCasePK) FROM @tbl4QAReport14Final)
+
+-- leave the following here
+if @numOfALLScreens is null
+SET @numOfALLScreens = 0
+
+if @numOfActiveIntakeCases is null
+SET @numOfActiveIntakeCases = 0
+
+DECLARE @tbl4QAReport14Summary TABLE(
+	[SummaryId] INT,
+	[SummaryText] [varchar](200),
+	[SummaryTotal] [varchar](100)
+)
+
+INSERT INTO @tbl4QAReport14Summary([SummaryId],[SummaryText],[SummaryTotal])
+VALUES(14 ,'No Home Visits since ' + convert(VARCHAR(12),@Back2MonthsFromAnalysisPoint, 101) + ' for Active Cases Excludes Level X and Level 4 Cases (N=' + CONVERT(VARCHAR,@numOfALLScreens) + ')' 
+,CONVERT(VARCHAR,@numOfActiveIntakeCases) + ' (' + CONVERT(VARCHAR, round(COALESCE(cast(@numOfActiveIntakeCases AS FLOAT) * 100/ NULLIF(@numOfALLScreens,0), 0), 0))  + '%)'
+)
+
+SELECT * FROM @tbl4QAReport14Summary	
+
+END
+ELSE
+BEGIN
+
+SELECT 	
+    PC1ID,
+    
+		case
+		   when LastVisitActual is not null then
+			   convert(varchar(10),LastVisitActual,101)
+		   else
+			   ''
+		end as LastVisitActual,    
+
+		case
+		   when LastVisitAttempted is not null then
+			   convert(varchar(10),LastVisitAttempted,101)
+		   else
+			   ''
+		end as LastVisitAttempted        
+    
+
+  , Worker
+  , currentLevel
+ FROM @tbl4QAReport14Final
+
+
+--- rspQAReport14 31 ,'summary'
+
+END
+GO
diff --git a/Stored Procedures/dbo.rspQAReport19.sql b/Stored Procedures/dbo.rspQAReport19.sql
new file mode 100644
index 0000000..d138509
--- /dev/null
+++ b/Stored Procedures/dbo.rspQAReport19.sql
@@ -0,0 +1,119 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		Dhruv Patel
+-- Create date: 2015-08-04
+-- Description:	Adds an additional report to the QA report for Home 
+--				Visit Logs missing attachments
+-- exec rspQAReport19 1, 'summary'
+-- exec rspQAReport19 1, 'detail'
+-- =============================================
+CREATE procedure [dbo].[rspQAReport19](
+@programfk    varchar(max)    = NULL,
+@ReportType char(7) = NULL 
+
+)
+as
+declare @CutOffDate date
+set @CutOffDate = '2015-05-01'
+if @programfk is null
+	begin
+		select @programfk = substring((select ','+LTRIM(RTRIM(STR(HVProgramPK)))
+										   from HVProgram
+										   for xml path ('')),2,8000)
+	end
+
+	set @programfk = REPLACE(@programfk,'"','')
+	
+	-- Last Day of Previous Month 
+Declare @LastDayofPreviousMonth DateTime 
+Set @LastDayofPreviousMonth = DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,GETDATE()),0)) -- analysis point
+
+
+set @CutOffDate = DATEADD(m, -3,  @LastDayofPreviousMonth) + 1
+
+
+DECLARE @endDt AS DATE 
+SET @endDt = DATEADD(dd, DATEDIFF(dd, 0, @LastDayofPreviousMonth), 0)
+
+DECLARE @tbl4QAReportCohort TABLE(
+	HVCaseFK int,
+	HVLogPK int,
+	PC1ID char(13),
+	VisitStartTime datetime,
+	CurrentLevel varchar(30), 
+	CurrentWorker varchar(40)
+)
+
+insert into @tbl4QAReportCohort
+        ( HVCaseFK ,
+		  HVLogPK ,
+          PC1ID ,
+          VisitStartTime ,
+          CurrentLevel ,
+          CurrentWorker 
+        )
+select hv.HVCaseFK
+		, hv.HVLogPK
+		, PC1ID
+		, VisitStartTime
+		, CurrentLevel = cl.LevelName
+		, CurrentWorker = rtrim(w.FirstName) + ' ' + rtrim(w.LastName)
+		from HVLog hv 
+		inner join CaseProgram cp on cp.HVCaseFK = hv.HVCaseFK and cp.ProgramFK = hv.ProgramFK
+		left join codeLevel cl on cp.CurrentLevelFK = cl.codeLevelPK
+		inner join Worker w on w.WorkerPK = cp.CurrentFSWFK
+		where cp.ProgramFK = @ProgramFK 
+				and hv.VisitType <> '0001'
+				and VisitStartTime >= @CutOffDate AND hv.VisitStartTime <=  @endDt
+				--and (cp.DischargeDate IS NULL  
+				--		or cp.DischargeDate > @LastDayofPreviousMonth)
+						
+if @ReportType = 'summary'
+	begin
+
+		declare @cohortCount int=0
+		set @cohortCount= (select count(PC1ID) from @tbl4QAReportCohort)
+		
+		declare @missingAttachCount int=0
+		set @missingAttachCount = (select count(PC1ID) from @tbl4QAReportCohort qarc
+									 left outer join Attachment a on a.HVCaseFK = qarc.HVCaseFK and a.FormType = 'VL' and a.FormFK = HVLogPK
+									 where a.AttachmentPK is null)
+		
+
+		DECLARE @tbl4QAReportMissingAttachHVSummary TABLE(
+			[SummaryId] INT,
+			[SummaryText] [varchar](200),
+			[SummaryTotal] [varchar](100)
+		)
+		insert into @tbl4QAReportMissingAttachHVSummary
+		        ( SummaryId ,
+		          SummaryText ,
+		          SummaryTotal
+		        )
+		values  ( 19 , -- SummaryId - int
+		          'Number of HV Log forms since ' + CONVERT(VARCHAR(8), @CutOffDate, 1) + ' without an attachment (N=' + CONVERT(varchar,@cohortCount) + ')', -- SummaryText - varchar(200)
+		          CONVERT(varchar,@missingAttachCount) + ' (' + 
+		          convert(varchar,round(coalesce(cast(@missingAttachCount as float) * 100 / nullif(@cohortCount,0),0),0)) + '%)' -- SummaryTotal - varchar(100)
+		        )
+		
+		select * from @tbl4QAReportMissingAttachHVSummary
+		
+	end
+
+else
+	begin
+		select PC1ID ,
+               VisitStartTime , 
+               CurrentLevel ,
+               CurrentWorker ,
+               Link = '<a href="/Pages/HomeVisitLog.aspx?pc1id=' + PC1ID + '&hvlogpk=' + rtrim(convert(varchar(12), qarc.HVLogPK)) + '" target="_blank" alt="Home Visit Log">'
+		from @tbl4QAReportCohort qarc
+		left outer join Attachment a on a.HVCaseFK = qarc.HVCaseFK and a.FormType = 'VL' and a.FormFK = HVLogPK
+		where a.AttachmentPK is null
+		order by qarc.PC1ID, qarc.VisitStartTime
+	end		
+
+GO
diff --git a/Stored Procedures/dbo.rspRetentionRatePercentage.sql b/Stored Procedures/dbo.rspRetentionRatePercentage.sql
new file mode 100644
index 0000000..ad04bbd
--- /dev/null
+++ b/Stored Procedures/dbo.rspRetentionRatePercentage.sql
@@ -0,0 +1,469 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		jrobohn
+-- Create date: 03/31/11
+-- Description:	Main storedproc for Retention Rate - Percentage report
+-- Description: <copied from FamSys Feb 20, 2012 - see header below>
+-- exec rspRetentionRates 9, '05/01/09', '04/30/11'
+-- exec rspRetentionRates 19, '20080101', '20121231'
+-- exec rspRetentionRates 37, '20090401', '20110331'
+-- exec rspRetentionRates 17, '20090401', '20110331'
+-- exec rspRetentionRates 20, '20080401', '20110331'
+-- exec rspRetentionRates '15,16', '20091201', '20111130'
+-- exec rspRetentionRates 1, '03/01/10', '02/29/12', null, null, ''
+-- exec rspRetentionRates 1, '03/01/10', '02/29/12', 85, null, '' 85 = Daisy Flores
+-- exec rspRetentionRates 1, '03/01/10', '02/29/12', null, 1, '' 1 = Children Youth & Families
+-- exec rspRetentionRates 1, '03/01/10', '02/29/12', null, null, ''
+-- Fixed Bug HW963 - Retention Rage Report ... Khalsa 3/20/2014
+-- =============================================
+-- =============================================
+CREATE procedure [dbo].[rspRetentionRatePercentage]
+	-- Add the parameters for the stored procedure here
+	@ProgramFK varchar(max)
+	, @StartDate datetime
+	, @EndDate datetime
+    , @WorkerFK int = null
+	, @SiteFK int = null
+	, @CaseFiltersPositive varchar(100) = ''
+as
+BEGIN 
+-- SET NOCOUNT ON added to prevent extra result sets from
+-- interfering with SELECT statements.
+SET NOCOUNT ON;
+
+--#region declarations
+	set @SiteFK = case when dbo.IsNullOrEmpty(@SiteFK) = 1 then 0
+					   else @SiteFK
+				  end
+	set @casefilterspositive = case	when @casefilterspositive = '' then null
+									else @casefilterspositive
+							   end
+
+	declare @tblResults table (
+		LineDescription varchar(50)
+		, LineGroupingLevel int
+		, DisplayPercentages bit
+		, TotalEnrolledParticipants int
+		, RetentionRateSixMonths decimal(5,3)
+		, RetentionRateOneYear decimal(5,3)
+		, RetentionRateEighteenMonths decimal(5,3)
+		, RetentionRateTwoYears decimal(5,3)
+		, EnrolledParticipantsSixMonths int
+		, EnrolledParticipantsOneYear int
+		, EnrolledParticipantsEighteenMonths int
+		, EnrolledParticipantsTwoYears int
+		, RunningTotalDischargedSixMonths int
+		, RunningTotalDischargedOneYear int
+		, RunningTotalDischargedEighteenMonths int
+		, RunningTotalDischargedTwoYears int
+		, TotalNSixMonths int
+		, TotalNOneYear int
+		, TotalNEighteenMonths int
+		, TotalNTwoYears int
+		, AllParticipants int
+		, SixMonthsIntake int
+		, SixMonthsDischarge int
+		, OneYearIntake int 
+		, OneYearDischarge int
+		, EighteenMonthsIntake int
+		, EighteenMonthsDischarge int
+		, TwoYearsIntake int
+		, TwoYearsDischarge int);
+
+	declare @tblPC1withStats table (
+		PC1ID char(13)
+		, IntakeDate datetime
+		, DischargeDate datetime
+		, LastHomeVisit datetime
+		, RetentionMonths int
+		, ActiveAt6Months int
+		, ActiveAt12Months int
+		, ActiveAt18Months int
+		, ActiveAt24Months int);
+
+--#endregion
+--#region cteCohort - Get the cohort for the report
+	with cteCohort as
+	-----------------------
+		(select HVCasePK
+			from HVCase h 
+			inner join CaseProgram cp on cp.HVCaseFK = h.HVCasePK
+			inner join dbo.SplitString(@ProgramFK, ',') ss on ss.ListItem = cp.ProgramFK
+			inner join dbo.udfCaseFilters(@casefilterspositive, '', @programfk) cf on cf.HVCaseFK = h.HVCasePK
+			left outer join Worker w on w.WorkerPK = cp.CurrentFSWFK
+			left outer join WorkerProgram wp on wp.WorkerFK = w.WorkerPK and wp.ProgramFK = cp.ProgramFK
+			where case when @SiteFK = 0 then 1
+							 when wp.SiteFK = @SiteFK then 1
+							 else 0
+						end = 1
+				and (IntakeDate is not null and IntakeDate between @StartDate and @EndDate)
+				and  w.WorkerPK = isnull(@WorkerFK, w.WorkerPK)
+				-- and cp.ProgramFK=@ProgramFK
+		)	
+
+	--select * 
+	--from cteCohort
+	--order by HVCasePK
+
+	--select HVCasePK, count(HVCasePK)
+
+	--from cteCohort
+	--group by HVCasePK
+	--having count(HVCasePK) > 1
+
+--#endregion
+--#region cteLastFollowUp - Get last follow up completed for all cases in cohort
+	, cteLastFollowUp as 
+	-----------------------
+		(select max(FollowUpPK) as FollowUpPK
+			   , max(FollowUpDate) as FollowUpDate
+			   , fu.HVCaseFK
+			from FollowUp fu
+			inner join cteCohort c on c.HVCasePK = fu.HVCaseFK
+			group by fu.HVCaseFK
+		)
+
+	--select * 
+	--from cteLastFollowUp 
+	--order by HVCaseFK
+
+--#endregion
+--#region cteFollowUp* - get follow up common attribute rows and columns that we need for each person from the last follow up
+--#region cteDischargeData - Get all discharge related data
+    , cteDischargeData as 
+	------------------------
+		(select h.HVCasePK as HVCaseFK
+			    ,cd.DischargeReason as DischargeReason
+		from HVCase h
+		inner join CaseProgram cp on cp.HVCaseFK=h.HVCasePK
+		inner join Kempe k on k.HVCaseFK=h.HVCasePK
+		inner join codeLevel cl ON cl.codeLevelPK=CurrentLevelFK
+		inner join codeDischarge cd on cd.DischargeCode=cp.DischargeReason 
+		inner join cteCohort c on h.HVCasePK = c.HVCasePK
+		)
+
+	--select * from cteDischargeData
+	--order by HVCaseFK
+
+--#endregion
+--#region cteCaseLastHomeVisit - get the last home visit for each case in the cohort 
+	, cteCaseLastHomeVisit AS 
+	-----------------------------
+		(select HVCaseFK
+				  , max(vl.VisitStartTime) as LastHomeVisit
+				  , count(vl.VisitStartTime) as CountOfHomeVisits
+			from HVLog vl
+			inner join HVCase c on c.HVCasePK = vl.HVCaseFK
+			inner join dbo.SplitString(@ProgramFK, ',') ss on ss.ListItem = vl.ProgramFK
+			inner join cteCohort co on co.HVCasePK = c.HVCasePK
+			where VisitType <> '0001' and 
+					(IntakeDate is not null and IntakeDate between @StartDate and @EndDate)
+							 -- and vl.ProgramFK = @ProgramFK
+			group by HVCaseFK
+		)
+--#endregion
+--#region cteMain - main select for the report sproc, gets data at intake and joins to data at discharge
+	, cteMain as
+	------------------------
+		(select PC1ID
+			   ,IntakeDate
+			   ,LastHomeVisit
+			   ,DischargeDate
+			   ,cp.DischargeReason AS DischargeReasonCode
+               ,dd.DischargeReason
+			   ,case
+				when DischargeDate is null and datediff(month, IntakeDate, current_timestamp) > 6 then 1
+				when DischargeDate is not null and datediff(month, IntakeDate, LastHomeVisit) > 6 then 1
+					else 0
+				end	as ActiveAt6Months
+			   ,case
+				when DischargeDate is null and datediff(month, IntakeDate, current_timestamp) > 12 then 1
+				when DischargeDate is not null and datediff(month, IntakeDate, LastHomeVisit) > 12 then 1
+					else 0
+				end	as ActiveAt12Months
+				,case
+				when DischargeDate is null and datediff(month, IntakeDate, current_timestamp) > 18 then 1
+				when DischargeDate is not null and datediff(month, IntakeDate, LastHomeVisit) > 18 then 1
+					else 0
+				end as ActiveAt18Months
+				,case
+				when DischargeDate is null and datediff(month, IntakeDate, current_timestamp) > 24 then 1
+				when DischargeDate is not null and datediff(month, IntakeDate, LastHomeVisit) > 24 then 1
+					else 0
+				end as ActiveAt24Months
+			FROM HVCase c
+			inner join CaseProgram cp on cp.HVCaseFK=c.HVCasePK
+			inner join PC on PC.PCPK=c.PC1FK
+			inner join Kempe k on k.HVCaseFK=c.HVCasePK
+			inner join PC1Issues pc1i ON pc1i.HVCaseFK=k.HVCaseFK AND pc1i.PC1IssuesPK=k.PC1IssuesFK
+			--inner join codeLevel cl ON cl.codeLevelPK=CurrentLevelFK
+			inner join dbo.SplitString(@ProgramFK, ',') ss on ss.ListItem = cp.ProgramFK
+			inner join cteCaseLastHomeVisit lhv ON lhv.HVCaseFK=c.HVCasePK
+			left outer join cteDischargeData dd ON dd.hvcasefk=c.HVCasePK
+			where (IntakeDate is not null and IntakeDate between @StartDate and @EndDate)
+				  -- and cp.ProgramFK=@ProgramFK
+		)
+
+--#endregion
+
+--select *
+--from cteDischargeData
+
+--select *
+--from cteMain
+
+--where DischargeReasonCode is NULL or DischargeReasonCode not in ('07', '17', '18', '20', '21', '23', '25', '37') 
+--order by DischargeReasonCode, PC1ID
+
+--#region Add rows to @tblPC1withStats for each case/pc1id in the cohort, which will create the basis for the final stats
+insert into @tblPC1withStats 
+		(PC1ID
+		, IntakeDate
+		, DischargeDate
+		, LastHomeVisit
+		, RetentionMonths
+		, ActiveAt6Months
+		, ActiveAt12Months
+		, ActiveAt18Months
+		, ActiveAt24Months)
+select distinct PC1ID
+		, IntakeDate
+		, DischargeDate
+		, LastHomeVisit
+				   ,case when DischargeDate is not null then 
+						datediff(mm,IntakeDate,LastHomeVisit)
+					else
+						datediff(mm,IntakeDate,current_timestamp)
+					end as RetentionMonths
+
+
+		, ActiveAt6Months
+		, ActiveAt12Months
+		, ActiveAt18Months
+		, ActiveAt24Months
+from cteMain
+-- where DischargeReason not in ('Out of Geographical Target Area','Miscarriage/Pregnancy Terminated','Target Child Died')
+where DischargeReasonCode is NULL or DischargeReasonCode not in ('07', '17', '18', '20', '21', '23', '25', '37')
+		-- (DischargeReasonCode not in ('07', '17', '18', '20', '21', '23', '25', '37') or datediff(day,IntakeDate,DischargeDate)>=(4*6*30.44))
+order by PC1ID,IntakeDate
+--#endregion
+--select * from @tblPC1withStats
+
+declare @TotalCohortCount int
+
+-- now we have all the rows from the cohort in @tblPC1withStats
+-- get the total count
+select @TotalCohortCount = COUNT(*) 
+  from @tblPC1withStats
+
+--#region declare vars to collect counts for final stats
+declare @LineGroupingLevel int
+		, @TotalEnrolledParticipants int
+		, @RetentionRateSixMonths decimal(5,3)
+		, @RetentionRateOneYear decimal(5,3)
+		, @RetentionRateEighteenMonths decimal(5,3)
+		, @RetentionRateTwoYears decimal(5,3)
+		, @EnrolledParticipantsSixMonths int
+		, @EnrolledParticipantsOneYear int
+		, @EnrolledParticipantsEighteenMonths int
+		, @EnrolledParticipantsTwoYears int
+		, @RunningTotalDischargedSixMonths int
+		, @RunningTotalDischargedOneYear int
+		, @RunningTotalDischargedEighteenMonths int
+		, @RunningTotalDischargedTwoYears int
+		, @TotalNSixMonths int
+		, @TotalNOneYear int
+		, @TotalNEighteenMonths int
+		, @TotalNTwoYears int
+
+declare @AllEnrolledParticipants int
+		, @SixMonthsTotal int
+		, @TwelveMonthsTotal int
+		, @EighteenMonthsTotal int
+		, @TwentyFourMonthsTotal int
+		, @SixMonthsAtIntake int
+		, @SixMonthsAtDischarge int
+		, @TwelveMonthsAtIntake int
+		, @TwelveMonthsAtDischarge int
+		, @EighteenMonthsAtIntake int
+		, @EighteenMonthsAtDischarge int
+		, @TwentyFourMonthsAtIntake int
+		, @TwentyFourMonthsAtDischarge int
+--#endregion
+--#region Retention Rate %
+select @SixMonthsTotal = count(PC1ID)
+from @tblPC1withStats
+where ActiveAt6Months = 1
+
+select @TwelveMonthsTotal = count(PC1ID)
+from @tblPC1withStats
+where ActiveAt12Months = 1
+
+select @EighteenMonthsTotal = count(PC1ID)
+from @tblPC1withStats
+where ActiveAt18Months = 1
+
+select @TwentyFourMonthsTotal = count(PC1ID)
+from @tblPC1withStats
+where ActiveAt24Months = 1
+
+set @RetentionRateSixMonths = case when @TotalCohortCount = 0 then 0.0000 else round((@SixMonthsTotal / (@TotalCohortCount * 1.0000)),4) end
+set @RetentionRateOneYear = case when @TotalCohortCount = 0 then 0.0000 else round((@TwelveMonthsTotal / (@TotalCohortCount * 1.0000)),4) end
+set @RetentionRateEighteenMonths = case when @TotalCohortCount = 0 then 0.0000 else round((@EighteenMonthsTotal / (@TotalCohortCount * 1.0000)),4) end
+set @RetentionRateTwoYears = case when @TotalCohortCount = 0 then 0.0000 else round((@TwentyFourMonthsTotal / (@TotalCohortCount * 1.0000)),4) end
+--#endregion
+--#region Enrolled Participants
+select @EnrolledParticipantsSixMonths = count(*)
+from @tblPC1withStats
+where ActiveAt6Months = 1 
+
+select @EnrolledParticipantsOneYear = count(*)
+from @tblPC1withStats
+where ActiveAt12Months = 1 
+
+select @EnrolledParticipantsEighteenMonths = count(*)
+from @tblPC1withStats
+where ActiveAt18Months = 1 
+
+select @EnrolledParticipantsTwoYears = count(*)
+from @tblPC1withStats
+where ActiveAt24Months = 1
+--#endregion
+--#region Running Total Discharged
+select @RunningTotalDischargedSixMonths = count(*)
+from @tblPC1withStats
+where ActiveAt6Months = 0 and LastHomeVisit is not null
+
+select @RunningTotalDischargedOneYear = count(*) + @RunningTotalDischargedSixMonths
+from @tblPC1withStats
+where ActiveAt6Months = 1 and ActiveAt12Months = 0 and LastHomeVisit is not null
+
+select @RunningTotalDischargedEighteenMonths = count(*) + @RunningTotalDischargedOneYear
+from @tblPC1withStats
+where ActiveAt12Months = 1 and ActiveAt18Months = 0 and LastHomeVisit is not null
+
+select @RunningTotalDischargedTwoYears = count(*) + @RunningTotalDischargedEighteenMonths
+from @tblPC1withStats
+where ActiveAt18Months = 1 and ActiveAt24Months = 0 and LastHomeVisit is not null
+--select @RunningTotalDischargedSixMonths = count(*)
+--from @tblPC1withStats
+--where ActiveAt6Months = 0 and LastHomeVisit between IntakeDate and dateadd(day, 6*30.44, IntakeDate)
+--
+--select @RunningTotalDischargedOneYear = count(*) + @RunningTotalDischargedSixMonths
+--from @tblPC1withStats
+--where ActiveAt12Months = 0 and LastHomeVisit between dateadd(day, (6*30.44)+1, IntakeDate) and dateadd(day, 12*30.44, IntakeDate)
+--
+--select @RunningTotalDischargedEighteenMonths = count(*) + @RunningTotalDischargedOneYear
+--from @tblPC1withStats
+--where ActiveAt18Months = 0 and LastHomeVisit between dateadd(day, (12*30.44)+1, IntakeDate) and dateadd(day, 18*30.44, IntakeDate)
+--
+--select @RunningTotalDischargedTwoYears = count(*) + @RunningTotalDischargedEighteenMonths
+--from @tblPC1withStats
+--where ActiveAt24Months = 0 and LastHomeVisit between dateadd(day, (18*30.44)+1, IntakeDate) and dateadd(day, 24*30.44, IntakeDate)
+--#endregion
+--#region Total (N) - (Discharged)
+select @TotalNSixMonths = count(*)
+from @tblPC1withStats
+where ActiveAt6Months = 0 and LastHomeVisit is not null
+
+select @TotalNOneYear = count(*)
+
+from @tblPC1withStats
+where ActiveAt6Months = 1 and ActiveAt12Months = 0 and LastHomeVisit is not null
+
+select @TotalNEighteenMonths = count(*)
+from @tblPC1withStats
+where ActiveAt12Months = 1 and ActiveAt18Months = 0 and LastHomeVisit is not null
+
+select @TotalNTwoYears = count(*)
+from @tblPC1withStats
+where ActiveAt18Months = 1 and ActiveAt24Months = 0 and LastHomeVisit is not null
+--#endregion
+
+insert into @tblResults (LineDescription
+						, LineGroupingLevel
+						, DisplayPercentages
+						, TotalEnrolledParticipants
+						, RetentionRateSixMonths
+						, RetentionRateOneYear
+						, RetentionRateEighteenMonths
+						, RetentionRateTwoYears
+						, EnrolledParticipantsSixMonths
+						, EnrolledParticipantsOneYear
+						, EnrolledParticipantsEighteenMonths
+						, EnrolledParticipantsTwoYears
+						, RunningTotalDischargedSixMonths
+						, RunningTotalDischargedOneYear
+						, RunningTotalDischargedEighteenMonths
+						, RunningTotalDischargedTwoYears
+						, TotalNSixMonths
+						, TotalNOneYear
+						, TotalNEighteenMonths
+						, TotalNTwoYears)
+values ('Totals'
+		, @LineGroupingLevel
+		, 1
+        , @TotalCohortCount
+		, @RetentionRateSixMonths
+		, @RetentionRateOneYear
+		, @RetentionRateEighteenMonths
+		, @RetentionRateTwoYears
+		, @EnrolledParticipantsSixMonths
+		, @EnrolledParticipantsOneYear
+		, @EnrolledParticipantsEighteenMonths
+		, @EnrolledParticipantsTwoYears
+		, @RunningTotalDischargedSixMonths
+		, @RunningTotalDischargedOneYear
+		, @RunningTotalDischargedEighteenMonths
+		, @RunningTotalDischargedTwoYears
+		, @TotalNSixMonths
+		, @TotalNOneYear
+		, @TotalNEighteenMonths
+		, @TotalNTwoYears)
+
+select LineDescription
+	  ,1 as LineGroupingLevel
+	  ,DisplayPercentages
+	  ,TotalEnrolledParticipants
+	  ,case when datediff(ww,@enddate,getdate()) >= 26 then RetentionRateSixMonths else null end as RetentionRateSixMonths
+	  ,case when datediff(ww,@enddate,getdate()) >= 52 then RetentionRateOneYear else null end as RetentionRateOneYear
+	  ,case when datediff(ww,@enddate,getdate()) >= 78 then RetentionRateEighteenMonths else null end as RetentionRateEighteenMonths
+	  ,case when datediff(ww,@enddate,getdate()) >= 104 then RetentionRateTwoYears else null end as RetentionRateTwoYears
+	  ,case when datediff(ww,@enddate,getdate()) >= 26 then EnrolledParticipantsSixMonths else null end as EnrolledParticipantsSixMonths
+	  ,case when datediff(ww,@enddate,getdate()) >= 52 then EnrolledParticipantsOneYear else null end as EnrolledParticipantsOneYear
+	  ,case when datediff(ww,@enddate,getdate()) >= 78 then EnrolledParticipantsEighteenMonths else null end as EnrolledParticipantsEighteenMonths
+	  ,case when datediff(ww,@enddate,getdate()) >= 104 then EnrolledParticipantsTwoYears else null end as EnrolledParticipantsTwoYears
+	  ,case when datediff(ww,@enddate,getdate()) >= 26 then RunningTotalDischargedSixMonths else null end as RunningTotalDischargedSixMonths
+	  ,case when datediff(ww,@enddate,getdate()) >= 52 then RunningTotalDischargedOneYear else null end as RunningTotalDischargedOneYear
+	  ,case when datediff(ww,@enddate,getdate()) >= 78 then RunningTotalDischargedEighteenMonths else null end as RunningTotalDischargedEighteenMonths
+	  ,case when datediff(ww,@enddate,getdate()) >= 104 then RunningTotalDischargedTwoYears else null end as RunningTotalDischargedTwoYears
+	  ,case when datediff(ww,@enddate,getdate()) >= 26 then TotalNSixMonths else null end as TotalNSixMonths
+	  ,case when datediff(ww,@enddate,getdate()) >= 52 then TotalNOneYear else null end as TotalNOneYear
+	  ,case when datediff(ww,@enddate,getdate()) >= 78 then TotalNEighteenMonths else null end as TotalNEighteenMonths
+	  ,case when datediff(ww,@enddate,getdate()) >= 104 then TotalNTwoYears else null end as TotalNTwoYears
+	  ,AllParticipants
+	  ,case when datediff(ww,@enddate,getdate()) >= 26 then SixMonthsIntake else null end as SixMonthsIntake
+	  ,case when datediff(ww,@enddate,getdate()) >= 26 then SixMonthsDischarge else null end as SixMonthsDischarge
+	  ,case when datediff(ww,@enddate,getdate()) >= 52 then OneYearIntake else null end as OneYearIntake
+	  ,case when datediff(ww,@enddate,getdate()) >= 52 then OneYearDischarge else null end as OneYearDischarge
+	  ,case when datediff(ww,@enddate,getdate()) >= 78 then EighteenMonthsIntake else null end as EighteenMonthsIntake
+	  ,case when datediff(ww,@enddate,getdate()) >= 78 then EighteenMonthsDischarge else null end as EighteenMonthsDischarge
+	  ,case when datediff(ww,@enddate,getdate()) >= 104 then TwoYearsIntake else null end as TwoYearsIntake
+	  ,case when datediff(ww,@enddate,getdate()) >= 104 then TwoYearsDischarge else null end as TwoYearsDischarge
+from @tblResults
+--SELECT * from @tblResults
+
+--select VendorID, Employee, Orders
+--from
+--   (SELECT ActiveAt6Months, ActiveAt12Months, ActiveAt18Months, ActiveAt24Months
+--   FROM @tblPC1withStats) p
+--UNPIVOT
+--   (Orders FOR Employee IN 
+--      (Emp1, Emp2, Emp3, Emp4, Emp5)
+--)AS unpvt;
+
+end
+GO
diff --git a/Stored Procedures/dbo.spAddFormReview_userTRIGGER.sql b/Stored Procedures/dbo.spAddFormReview_userTRIGGER.sql
new file mode 100644
index 0000000..7bcc891
--- /dev/null
+++ b/Stored Procedures/dbo.spAddFormReview_userTRIGGER.sql
@@ -0,0 +1,79 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		<Jay Robohn>
+-- Create date: <11/01/11>
+-- Description:	<reads the codeForm table to get the fields needed to write query of last
+-- record rewritten and writes a record into FormReview Table.>
+-- =============================================
+CREATE PROCEDURE [dbo].[spAddFormReview_userTRIGGER](@FormFK int, @FormTypeValue char(2))
+	-- Add the parameters for the stored procedure here
+	AS
+
+Declare @TableName varchar(20), @FormDateName varchar(20), 
+        @CreatorName varchar(40), @PKName as varchar(20),
+		@SelectStatement nVarchar(700),
+	    @DateValue datetime, @CreatorValue varchar(20), 
+		@PrgFKValue int, @HVCaseFKValue int,
+		@CanBeReviewed bit;
+
+	--make sure that the form is able to be reviewed
+	-- query the codeForm table using the FormType to get the field names
+	select @TableName = MaintableName,
+		   @FormDateName = FormDateName,
+		   @CreatorName = CreatorFieldName,
+		   @PKName = FormPKName,
+		   @CanBeReviewed = CanBeReviewed from codeForm  
+	where codeFormAbbreviation=@FormTypeValue;
+
+	IF @CanBeReviewed = 0
+		BEGIN
+			RETURN
+		END
+
+	--set up the query with the fieldnames from the previous query to get the values
+	IF @FormTypeValue = 'ID'
+		BEGIN
+		SET @SelectStatement= N'select @lFormDate=IntakeDate,
+									   @ProgramFK=ProgramFK,
+									   @HVCaseFK=HVCasePK,
+									   @Creator=HVCaseEditor
+								From
+								(select IntakeDate,
+										HVCasePK,
+										HVCaseEditor								
+									From HVCase
+									WHERE HVCasePK=@PK)a,
+									(select ProgramFK,CaseStartDate,DischargeDate,HVCaseFK from caseprogram) b 
+									where a.IntakeDate >=b.casestartdate and 
+									a.IntakeDate<=isnull(b.dischargedate,getdate())
+									 and a.hvcasepk=b.hvcasefk'
+		END
+	ELSE
+		BEGIN
+			SET @SelectStatement = N'Select @lFormDate = '+ @FormDateName+'
+									  ,@ProgramFK = ProgramFK,
+										@HVCaseFK = HVCaseFK,
+										@Creator  = '+ @CreatorName + ' 
+								 FROM ' + @Tablename +
+								' Where '+ @PKName +' = @PK'
+		END
+
+SET NOCOUNT ON; 
+
+--run the query
+EXEC  sp_Executesql @SelectStatement, N'@HVCaseFK int OUTPUT, @ProgramFK int OUTPUT, @lFormDate datetime OUTPUT, @Creator varchar(40) OUTPUT, @PK int OUTPUT' ,
+				@HVCaseFK=@HVCaseFKValue OUTPUT, @ProgramFK=@PrgFKValue OUTPUT,@lFormDate = @DateValue output,@Creator = @CreatorValue OUTPUT, @PK=@FormFK OUTPUT ;
+
+--run the stored procedure to insert the values obtained in the last query into the FormReview Table
+-- don't use stored procedure because it returns identity value on PK and interferes with the main table's PK
+--EXEC spAddFormReview @FormType = @FormTypeValue, @FormFK = @FormFK, @FormDate = @DateValue,
+--                     @HVCaseFK = @HVCaseFKValue, @ProgramFK = @PrgFKValue, @FormReviewCreator = @CreatorValue
+if @CreatorValue is null
+	print 'FormReview insert failed from spAddFormReview_userTRIGGER'
+else	
+	INSERT INTO FormReview(FormType,FormFK,FormDate,HVCaseFK,ProgramFK,FormReviewCreator)
+	Values(@FormTypeValue,@FormFK,@DateValue,@HVCaseFKValue,@PrgFKValue,@CreatorValue)
+GO
diff --git a/Stored Procedures/dbo.spAddHVLog.sql b/Stored Procedures/dbo.spAddHVLog.sql
new file mode 100644
index 0000000..015be1f
--- /dev/null
+++ b/Stored Procedures/dbo.spAddHVLog.sql
@@ -0,0 +1,366 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+CREATE PROCEDURE [dbo].[spAddHVLog](@CAChildSupport char(2)=NULL,
+@CAAdvocacy char(2)=NULL,
+@CAGoods char(2)=NULL,
+@CAHousing char(2)=NULL,
+@CALaborSupport char(2)=NULL,
+@CALegal char(2)=NULL,
+@CAOther char(2)=NULL,
+@CAParentRights char(2)=NULL,
+@CASpecify varchar(500)=NULL,
+@CATranslation char(2)=NULL,
+@CATransportation char(2)=NULL,
+@CAVisitation char(2)=NULL,
+@CDChildDevelopment char(2)=NULL,
+@CDOther char(2)=NULL,
+@CDSpecify varchar(500)=NULL,
+@CDToys char(2)=NULL,
+@CDParentConcerned char(2)=NULL,
+@CIProblems char(2)=NULL,
+@CIOther char(2)=NULL,
+@CIOtherSpecify varchar(500)=NULL,
+@Curriculum247Dads bit=NULL,
+@CurriculumBoyz2Dads bit=NULL,
+@CurriculumGrowingGreatKids bit=NULL,
+@CurriculumHelpingBabiesLearn bit=NULL,
+@CurriculumInsideOutDads bit=NULL,
+@CurriculumMomGateway bit=NULL,
+@CurriculumOther bit=NULL,
+@CurriculumOtherSpecify varchar(500)=NULL,
+@CurriculumParentsForLearning bit=NULL,
+@CurriculumPartnersHealthyBaby bit=NULL,
+@CurriculumPAT bit=NULL,
+@CurriculumPATFocusFathers bit=NULL,
+@CurriculumSanAngelo bit=NULL,
+@FamilyMemberReads char(2)=NULL,
+@FatherAdvocateFK int=NULL,
+@FatherAdvocateParticipated bit=NULL,
+@FatherFigureParticipated bit=NULL,
+@FFCommunication char(2)=NULL,
+@FFDomesticViolence char(2)=NULL,
+@FFFamilyRelations char(2)=NULL,
+@FFMentalHealth char(2)=NULL,
+@FFOther char(2)=NULL,
+@FFSpecify varchar(500)=NULL,
+@FFSubstanceAbuse char(2)=NULL,
+@FSWFK int=NULL,
+@GrandParentParticipated bit=NULL,
+@HCBreastFeeding char(2)=NULL,
+@HCChild char(2)=NULL,
+@HCDental char(2)=NULL,
+@HCFamilyPlanning char(2)=NULL,
+@HCFASD char(2)=NULL,
+@HCFeeding char(2)=NULL,
+@HCGeneral char(2)=NULL,
+@HCMedicalAdvocacy char(2)=NULL,
+@HCNutrition char(2)=NULL,
+@HCOther char(2)=NULL,
+@HCPrenatalCare char(2)=NULL,
+@HCProviders char(2)=NULL,
+@HCSafety char(2)=NULL,
+@HCSexEducation char(2)=NULL,
+@HCSIDS char(2)=NULL,
+@HCSmoking char(2)=NULL,
+@HCSpecify varchar(500)=NULL,
+@HVCaseFK int=NULL,
+@HVLogCreator char(10)=NULL,
+@HVSupervisorParticipated bit=NULL,
+@NonPrimaryFSWParticipated bit=NULL,
+@NonPrimaryFSWFK int=NULL,
+@OBPParticipated bit=NULL,
+@OtherLocationSpecify varchar(500)=NULL,
+@OtherParticipated bit=NULL,
+@PAAssessmentIssues bit=NULL,
+@PAForms char(2)=NULL,
+@PAGroups char(2)=NULL,
+@PAIFSP char(2)=NULL,
+@PAOther char(2)=NULL,
+@PARecreation char(2)=NULL,
+@PASpecify varchar(500)=NULL,
+@PAVideo char(2)=NULL,
+@ParentCompletedActivity bit=NULL,
+@ParentObservationsDiscussed bit=NULL,
+@ParticipatedSpecify varchar(500)=NULL,
+@PC1Participated bit=NULL,
+@PC2Participated bit=NULL,
+@PCBasicNeeds char(2)=NULL,
+@PCChildInteraction char(2)=NULL,
+@PCChildManagement char(2)=NULL,
+@PCFeelings char(2)=NULL,
+@PCOther char(2)=NULL,
+@PCShakenBaby char(2)=NULL,
+@PCShakenBabyVideo char(2)=NULL,
+@PCSpecify varchar(500)=NULL,
+@PCStress char(2)=NULL,
+@ProgramFK int=NULL,
+@ReviewAssessmentIssues varchar(500)=NULL,
+@SiblingParticipated bit=NULL,
+@SSCalendar char(2)=NULL,
+@SSChildCare char(2)=NULL,
+@SSEducation char(2)=NULL,
+@SSEmployment char(2)=NULL,
+@SSHousekeeping char(2)=NULL,
+@SSJob char(2)=NULL,
+@SSMoneyManagement char(2)=NULL,
+@SSOther char(2)=NULL,
+@SSProblemSolving char(2)=NULL,
+@SSSpecify varchar(500)=NULL,
+@SSTransportation char(2)=NULL,
+@SupervisorObservation bit=NULL,
+@TCAlwaysOnBack bit=NULL,
+@TCAlwaysWithoutSharing bit=NULL,
+@TCParticipated bit=NULL,
+@TotalPercentageSpent int=NULL,
+@UpcomingProgramEvents bit=NULL,
+@VisitLengthHour int=NULL,
+@VisitLengthMinute int=NULL,
+@VisitLocation char(5)=NULL,
+@VisitStartTime datetime=NULL,
+@VisitType char(4)=NULL)
+AS
+INSERT INTO HVLog(
+CAChildSupport,
+CAAdvocacy,
+CAGoods,
+CAHousing,
+CALaborSupport,
+CALegal,
+CAOther,
+CAParentRights,
+CASpecify,
+CATranslation,
+CATransportation,
+CAVisitation,
+CDChildDevelopment,
+CDOther,
+CDSpecify,
+CDToys,
+CDParentConcerned,
+CIProblems,
+CIOther,
+CIOtherSpecify,
+Curriculum247Dads,
+CurriculumBoyz2Dads,
+CurriculumGrowingGreatKids,
+CurriculumHelpingBabiesLearn,
+CurriculumInsideOutDads,
+CurriculumMomGateway,
+CurriculumOther,
+CurriculumOtherSpecify,
+CurriculumParentsForLearning,
+CurriculumPartnersHealthyBaby,
+CurriculumPAT,
+CurriculumPATFocusFathers,
+CurriculumSanAngelo,
+FamilyMemberReads,
+FatherAdvocateFK,
+FatherAdvocateParticipated,
+FatherFigureParticipated,
+FFCommunication,
+FFDomesticViolence,
+FFFamilyRelations,
+FFMentalHealth,
+FFOther,
+FFSpecify,
+FFSubstanceAbuse,
+FSWFK,
+GrandParentParticipated,
+HCBreastFeeding,
+HCChild,
+HCDental,
+HCFamilyPlanning,
+HCFASD,
+HCFeeding,
+HCGeneral,
+HCMedicalAdvocacy,
+HCNutrition,
+HCOther,
+HCPrenatalCare,
+HCProviders,
+HCSafety,
+HCSexEducation,
+HCSIDS,
+HCSmoking,
+HCSpecify,
+HVCaseFK,
+HVLogCreator,
+HVSupervisorParticipated,
+NonPrimaryFSWParticipated,
+NonPrimaryFSWFK,
+OBPParticipated,
+OtherLocationSpecify,
+OtherParticipated,
+PAAssessmentIssues,
+PAForms,
+PAGroups,
+PAIFSP,
+PAOther,
+PARecreation,
+PASpecify,
+PAVideo,
+ParentCompletedActivity,
+ParentObservationsDiscussed,
+ParticipatedSpecify,
+PC1Participated,
+PC2Participated,
+PCBasicNeeds,
+PCChildInteraction,
+PCChildManagement,
+PCFeelings,
+PCOther,
+PCShakenBaby,
+PCShakenBabyVideo,
+PCSpecify,
+PCStress,
+ProgramFK,
+ReviewAssessmentIssues,
+SiblingParticipated,
+SSCalendar,
+SSChildCare,
+SSEducation,
+SSEmployment,
+SSHousekeeping,
+SSJob,
+SSMoneyManagement,
+SSOther,
+SSProblemSolving,
+SSSpecify,
+SSTransportation,
+SupervisorObservation,
+TCAlwaysOnBack,
+TCAlwaysWithoutSharing,
+TCParticipated,
+TotalPercentageSpent,
+UpcomingProgramEvents,
+VisitLengthHour,
+VisitLengthMinute,
+VisitLocation,
+VisitStartTime,
+VisitType
+)
+VALUES(
+@CAChildSupport,
+@CAAdvocacy,
+@CAGoods,
+@CAHousing,
+@CALaborSupport,
+@CALegal,
+@CAOther,
+@CAParentRights,
+@CASpecify,
+@CATranslation,
+@CATransportation,
+@CAVisitation,
+@CDChildDevelopment,
+@CDOther,
+@CDSpecify,
+@CDToys,
+@CDParentConcerned,
+@CIProblems,
+@CIOther,
+@CIOtherSpecify,
+@Curriculum247Dads,
+@CurriculumBoyz2Dads,
+@CurriculumGrowingGreatKids,
+@CurriculumHelpingBabiesLearn,
+@CurriculumInsideOutDads,
+@CurriculumMomGateway,
+@CurriculumOther,
+@CurriculumOtherSpecify,
+@CurriculumParentsForLearning,
+@CurriculumPartnersHealthyBaby,
+@CurriculumPAT,
+@CurriculumPATFocusFathers,
+@CurriculumSanAngelo,
+@FamilyMemberReads,
+@FatherAdvocateFK,
+@FatherAdvocateParticipated,
+@FatherFigureParticipated,
+@FFCommunication,
+@FFDomesticViolence,
+@FFFamilyRelations,
+@FFMentalHealth,
+@FFOther,
+@FFSpecify,
+@FFSubstanceAbuse,
+@FSWFK,
+@GrandParentParticipated,
+@HCBreastFeeding,
+@HCChild,
+@HCDental,
+@HCFamilyPlanning,
+@HCFASD,
+@HCFeeding,
+@HCGeneral,
+@HCMedicalAdvocacy,
+@HCNutrition,
+@HCOther,
+@HCPrenatalCare,
+@HCProviders,
+@HCSafety,
+@HCSexEducation,
+@HCSIDS,
+@HCSmoking,
+@HCSpecify,
+@HVCaseFK,
+@HVLogCreator,
+@HVSupervisorParticipated,
+@NonPrimaryFSWParticipated,
+@NonPrimaryFSWFK,
+@OBPParticipated,
+@OtherLocationSpecify,
+@OtherParticipated,
+@PAAssessmentIssues,
+@PAForms,
+@PAGroups,
+@PAIFSP,
+@PAOther,
+@PARecreation,
+@PASpecify,
+@PAVideo,
+@ParentCompletedActivity,
+@ParentObservationsDiscussed,
+@ParticipatedSpecify,
+@PC1Participated,
+@PC2Participated,
+@PCBasicNeeds,
+@PCChildInteraction,
+@PCChildManagement,
+@PCFeelings,
+@PCOther,
+@PCShakenBaby,
+@PCShakenBabyVideo,
+@PCSpecify,
+@PCStress,
+@ProgramFK,
+@ReviewAssessmentIssues,
+@SiblingParticipated,
+@SSCalendar,
+@SSChildCare,
+@SSEducation,
+@SSEmployment,
+@SSHousekeeping,
+@SSJob,
+@SSMoneyManagement,
+@SSOther,
+@SSProblemSolving,
+@SSSpecify,
+@SSTransportation,
+@SupervisorObservation,
+@TCAlwaysOnBack,
+@TCAlwaysWithoutSharing,
+@TCParticipated,
+@TotalPercentageSpent,
+@UpcomingProgramEvents,
+@VisitLengthHour,
+@VisitLengthMinute,
+@VisitLocation,
+@VisitStartTime,
+@VisitType
+)
+
+SELECT SCOPE_IDENTITY() AS [SCOPE_IDENTITY]
+GO
diff --git a/Stored Procedures/dbo.spDelFormReview.sql b/Stored Procedures/dbo.spDelFormReview.sql
new file mode 100644
index 0000000..39ab90e
--- /dev/null
+++ b/Stored Procedures/dbo.spDelFormReview.sql
@@ -0,0 +1,13 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+create PROCEDURE [dbo].[spDelFormReview](@FormReviewPK int)
+
+AS
+
+
+DELETE 
+FROM FormReview
+WHERE FormReviewPK = @FormReviewPK
+GO
diff --git a/Stored Procedures/dbo.spDeleteFormReview_Trigger.sql b/Stored Procedures/dbo.spDeleteFormReview_Trigger.sql
new file mode 100644
index 0000000..9346348
--- /dev/null
+++ b/Stored Procedures/dbo.spDeleteFormReview_Trigger.sql
@@ -0,0 +1,25 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		<Dorothy Baum>
+-- Create date: <5/19/10>
+-- Description:	<Called by Delete Trigger to delete matching record in FormReview Table>
+-- =============================================
+CREATE PROCEDURE [dbo].[spDeleteFormReview_Trigger] @FormFK int, @FormTypeValue char(2)
+
+AS
+BEGIN
+	-- SET NOCOUNT ON added to prevent extra result sets from
+	-- interfering with SELECT statements.
+	SET NOCOUNT ON;
+	declare @FRPK int
+    -- Insert statements for procedure here
+	set @FRPK = (Select FormReviewPK from FormReview 
+						 Where FormType= @FormTypeValue and 
+							      FormFK = @FormFK)
+
+	EXEC spDelFormReview @FormReviewPK=@FRPK
+END
+GO
diff --git a/Stored Procedures/dbo.spEditHVLog.sql b/Stored Procedures/dbo.spEditHVLog.sql
new file mode 100644
index 0000000..6c3a576
--- /dev/null
+++ b/Stored Procedures/dbo.spEditHVLog.sql
@@ -0,0 +1,246 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+CREATE PROCEDURE [dbo].[spEditHVLog](@HVLogPK int=NULL,
+@CAChildSupport char(2)=NULL,
+@CAAdvocacy char(2)=NULL,
+@CAGoods char(2)=NULL,
+@CAHousing char(2)=NULL,
+@CALaborSupport char(2)=NULL,
+@CALegal char(2)=NULL,
+@CAOther char(2)=NULL,
+@CAParentRights char(2)=NULL,
+@CASpecify varchar(500)=NULL,
+@CATranslation char(2)=NULL,
+@CATransportation char(2)=NULL,
+@CAVisitation char(2)=NULL,
+@CDChildDevelopment char(2)=NULL,
+@CDOther char(2)=NULL,
+@CDSpecify varchar(500)=NULL,
+@CDToys char(2)=NULL,
+@CDParentConcerned char(2)=NULL,
+@CIProblems char(2)=NULL,
+@CIOther char(2)=NULL,
+@CIOtherSpecify varchar(500)=NULL,
+@Curriculum247Dads bit=NULL,
+@CurriculumBoyz2Dads bit=NULL,
+@CurriculumGrowingGreatKids bit=NULL,
+@CurriculumHelpingBabiesLearn bit=NULL,
+@CurriculumInsideOutDads bit=NULL,
+@CurriculumMomGateway bit=NULL,
+@CurriculumOther bit=NULL,
+@CurriculumOtherSpecify varchar(500)=NULL,
+@CurriculumParentsForLearning bit=NULL,
+@CurriculumPartnersHealthyBaby bit=NULL,
+@CurriculumPAT bit=NULL,
+@CurriculumPATFocusFathers bit=NULL,
+@CurriculumSanAngelo bit=NULL,
+@FamilyMemberReads char(2)=NULL,
+@FatherAdvocateFK int=NULL,
+@FatherAdvocateParticipated bit=NULL,
+@FatherFigureParticipated bit=NULL,
+@FFCommunication char(2)=NULL,
+@FFDomesticViolence char(2)=NULL,
+@FFFamilyRelations char(2)=NULL,
+@FFMentalHealth char(2)=NULL,
+@FFOther char(2)=NULL,
+@FFSpecify varchar(500)=NULL,
+@FFSubstanceAbuse char(2)=NULL,
+@FSWFK int=NULL,
+@GrandParentParticipated bit=NULL,
+@HCBreastFeeding char(2)=NULL,
+@HCChild char(2)=NULL,
+@HCDental char(2)=NULL,
+@HCFamilyPlanning char(2)=NULL,
+@HCFASD char(2)=NULL,
+@HCFeeding char(2)=NULL,
+@HCGeneral char(2)=NULL,
+@HCMedicalAdvocacy char(2)=NULL,
+@HCNutrition char(2)=NULL,
+@HCOther char(2)=NULL,
+@HCPrenatalCare char(2)=NULL,
+@HCProviders char(2)=NULL,
+@HCSafety char(2)=NULL,
+@HCSexEducation char(2)=NULL,
+@HCSIDS char(2)=NULL,
+@HCSmoking char(2)=NULL,
+@HCSpecify varchar(500)=NULL,
+@HVCaseFK int=NULL,
+@HVLogEditor char(10)=NULL,
+@HVSupervisorParticipated bit=NULL,
+@NonPrimaryFSWParticipated bit=NULL,
+@NonPrimaryFSWFK int=NULL,
+@OBPParticipated bit=NULL,
+@OtherLocationSpecify varchar(500)=NULL,
+@OtherParticipated bit=NULL,
+@PAAssessmentIssues bit=NULL,
+@PAForms char(2)=NULL,
+@PAGroups char(2)=NULL,
+@PAIFSP char(2)=NULL,
+@PAOther char(2)=NULL,
+@PARecreation char(2)=NULL,
+@PASpecify varchar(500)=NULL,
+@PAVideo char(2)=NULL,
+@ParentCompletedActivity bit=NULL,
+@ParentObservationsDiscussed bit=NULL,
+@ParticipatedSpecify varchar(500)=NULL,
+@PC1Participated bit=NULL,
+@PC2Participated bit=NULL,
+@PCBasicNeeds char(2)=NULL,
+@PCChildInteraction char(2)=NULL,
+@PCChildManagement char(2)=NULL,
+@PCFeelings char(2)=NULL,
+@PCOther char(2)=NULL,
+@PCShakenBaby char(2)=NULL,
+@PCShakenBabyVideo char(2)=NULL,
+@PCSpecify varchar(500)=NULL,
+@PCStress char(2)=NULL,
+@ProgramFK int=NULL,
+@ReviewAssessmentIssues varchar(500)=NULL,
+@SiblingParticipated bit=NULL,
+@SSCalendar char(2)=NULL,
+@SSChildCare char(2)=NULL,
+@SSEducation char(2)=NULL,
+@SSEmployment char(2)=NULL,
+@SSHousekeeping char(2)=NULL,
+@SSJob char(2)=NULL,
+@SSMoneyManagement char(2)=NULL,
+@SSOther char(2)=NULL,
+@SSProblemSolving char(2)=NULL,
+@SSSpecify varchar(500)=NULL,
+@SSTransportation char(2)=NULL,
+@SupervisorObservation bit=NULL,
+@TCAlwaysOnBack bit=NULL,
+@TCAlwaysWithoutSharing bit=NULL,
+@TCParticipated bit=NULL,
+@TotalPercentageSpent int=NULL,
+@UpcomingProgramEvents bit=NULL,
+@VisitLengthHour int=NULL,
+@VisitLengthMinute int=NULL,
+@VisitLocation char(5)=NULL,
+@VisitStartTime datetime=NULL,
+@VisitType char(4)=NULL)
+AS
+UPDATE HVLog
+SET 
+CAChildSupport = @CAChildSupport, 
+CAAdvocacy = @CAAdvocacy, 
+CAGoods = @CAGoods, 
+CAHousing = @CAHousing, 
+CALaborSupport = @CALaborSupport, 
+CALegal = @CALegal, 
+CAOther = @CAOther, 
+CAParentRights = @CAParentRights, 
+CASpecify = @CASpecify, 
+CATranslation = @CATranslation, 
+CATransportation = @CATransportation, 
+CAVisitation = @CAVisitation, 
+CDChildDevelopment = @CDChildDevelopment, 
+CDOther = @CDOther, 
+CDSpecify = @CDSpecify, 
+CDToys = @CDToys, 
+CDParentConcerned = @CDParentConcerned, 
+CIProblems = @CIProblems, 
+CIOther = @CIOther, 
+CIOtherSpecify = @CIOtherSpecify, 
+Curriculum247Dads = @Curriculum247Dads, 
+CurriculumBoyz2Dads = @CurriculumBoyz2Dads, 
+CurriculumGrowingGreatKids = @CurriculumGrowingGreatKids, 
+CurriculumHelpingBabiesLearn = @CurriculumHelpingBabiesLearn, 
+CurriculumInsideOutDads = @CurriculumInsideOutDads, 
+CurriculumMomGateway = @CurriculumMomGateway, 
+CurriculumOther = @CurriculumOther, 
+CurriculumOtherSpecify = @CurriculumOtherSpecify, 
+CurriculumParentsForLearning = @CurriculumParentsForLearning, 
+CurriculumPartnersHealthyBaby = @CurriculumPartnersHealthyBaby, 
+CurriculumPAT = @CurriculumPAT, 
+CurriculumPATFocusFathers = @CurriculumPATFocusFathers, 
+CurriculumSanAngelo = @CurriculumSanAngelo, 
+FamilyMemberReads = @FamilyMemberReads, 
+FatherAdvocateFK = @FatherAdvocateFK, 
+FatherAdvocateParticipated = @FatherAdvocateParticipated, 
+FatherFigureParticipated = @FatherFigureParticipated, 
+FFCommunication = @FFCommunication, 
+FFDomesticViolence = @FFDomesticViolence, 
+FFFamilyRelations = @FFFamilyRelations, 
+FFMentalHealth = @FFMentalHealth, 
+FFOther = @FFOther, 
+FFSpecify = @FFSpecify, 
+FFSubstanceAbuse = @FFSubstanceAbuse, 
+FSWFK = @FSWFK, 
+GrandParentParticipated = @GrandParentParticipated, 
+HCBreastFeeding = @HCBreastFeeding, 
+HCChild = @HCChild, 
+HCDental = @HCDental, 
+HCFamilyPlanning = @HCFamilyPlanning, 
+HCFASD = @HCFASD, 
+HCFeeding = @HCFeeding, 
+HCGeneral = @HCGeneral, 
+HCMedicalAdvocacy = @HCMedicalAdvocacy, 
+HCNutrition = @HCNutrition, 
+HCOther = @HCOther, 
+HCPrenatalCare = @HCPrenatalCare, 
+HCProviders = @HCProviders, 
+HCSafety = @HCSafety, 
+HCSexEducation = @HCSexEducation, 
+HCSIDS = @HCSIDS, 
+HCSmoking = @HCSmoking, 
+HCSpecify = @HCSpecify, 
+HVCaseFK = @HVCaseFK, 
+HVLogEditor = @HVLogEditor, 
+HVSupervisorParticipated = @HVSupervisorParticipated, 
+NonPrimaryFSWParticipated = @NonPrimaryFSWParticipated, 
+NonPrimaryFSWFK = @NonPrimaryFSWFK, 
+OBPParticipated = @OBPParticipated, 
+OtherLocationSpecify = @OtherLocationSpecify, 
+OtherParticipated = @OtherParticipated, 
+PAAssessmentIssues = @PAAssessmentIssues, 
+PAForms = @PAForms, 
+PAGroups = @PAGroups, 
+PAIFSP = @PAIFSP, 
+PAOther = @PAOther, 
+PARecreation = @PARecreation, 
+PASpecify = @PASpecify, 
+PAVideo = @PAVideo, 
+ParentCompletedActivity = @ParentCompletedActivity, 
+ParentObservationsDiscussed = @ParentObservationsDiscussed, 
+ParticipatedSpecify = @ParticipatedSpecify, 
+PC1Participated = @PC1Participated, 
+PC2Participated = @PC2Participated, 
+PCBasicNeeds = @PCBasicNeeds, 
+PCChildInteraction = @PCChildInteraction, 
+PCChildManagement = @PCChildManagement, 
+PCFeelings = @PCFeelings, 
+PCOther = @PCOther, 
+PCShakenBaby = @PCShakenBaby, 
+PCShakenBabyVideo = @PCShakenBabyVideo, 
+PCSpecify = @PCSpecify, 
+PCStress = @PCStress, 
+ProgramFK = @ProgramFK, 
+ReviewAssessmentIssues = @ReviewAssessmentIssues, 
+SiblingParticipated = @SiblingParticipated, 
+SSCalendar = @SSCalendar, 
+SSChildCare = @SSChildCare, 
+SSEducation = @SSEducation, 
+SSEmployment = @SSEmployment, 
+SSHousekeeping = @SSHousekeeping, 
+SSJob = @SSJob, 
+SSMoneyManagement = @SSMoneyManagement, 
+SSOther = @SSOther, 
+SSProblemSolving = @SSProblemSolving, 
+SSSpecify = @SSSpecify, 
+SSTransportation = @SSTransportation, 
+SupervisorObservation = @SupervisorObservation, 
+TCAlwaysOnBack = @TCAlwaysOnBack, 
+TCAlwaysWithoutSharing = @TCAlwaysWithoutSharing, 
+TCParticipated = @TCParticipated, 
+TotalPercentageSpent = @TotalPercentageSpent, 
+UpcomingProgramEvents = @UpcomingProgramEvents, 
+VisitLengthHour = @VisitLengthHour, 
+VisitLengthMinute = @VisitLengthMinute, 
+VisitLocation = @VisitLocation, 
+VisitStartTime = @VisitStartTime, 
+VisitType = @VisitType
+WHERE HVLogPK = @HVLogPK
+GO
diff --git a/Tables/dbo.AppOptions.sql b/Tables/dbo.AppOptions.sql
new file mode 100644
index 0000000..6eca42f
--- /dev/null
+++ b/Tables/dbo.AppOptions.sql
@@ -0,0 +1,18 @@
+CREATE TABLE [dbo].[AppOptions]
+(
+[AppOptionsPK] [int] NOT NULL IDENTITY(1, 1),
+[OptionDataType] [char] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[OptionDescription] [char] (250) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[OptionEnd] [datetime] NULL,
+[OptionItem] [char] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[OptionStart] [datetime] NOT NULL,
+[OptionValue] [char] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[ProgramFK] [int] NULL
+) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[AppOptions] ADD CONSTRAINT [PK__AppOptio__6E5B65BC7F60ED59] PRIMARY KEY CLUSTERED  ([AppOptionsPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_AppOptions_ProgramFK] ON [dbo].[AppOptions] ([ProgramFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[AppOptions] WITH NOCHECK ADD CONSTRAINT [FK_AppOptions_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
diff --git a/Tables/dbo.Attachment.sql b/Tables/dbo.Attachment.sql
new file mode 100644
index 0000000..c2f023c
--- /dev/null
+++ b/Tables/dbo.Attachment.sql
@@ -0,0 +1,24 @@
+CREATE TABLE [dbo].[Attachment]
+(
+[AttachmentPK] [int] NOT NULL IDENTITY(1, 1),
+[Attachment] [varbinary] (max) NULL,
+[AttachmentCreateDate] [datetime] NULL CONSTRAINT [DF_Attachment_AttachmentCreateDate] DEFAULT (getdate()),
+[AttachmentCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[AttachmentDescription] [varchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[AttachmentFilePath] [varchar] (255) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[AttachmentTitle] [varchar] (255) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FormDate] [datetime] NOT NULL,
+[FormFK] [int] NULL,
+[FormType] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[HVCaseFK] [int] NULL,
+[ProgramFK] [int] NULL
+) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[Attachment] ADD CONSTRAINT [PK_Attachment] PRIMARY KEY CLUSTERED  ([AttachmentPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_Attachment_FormFK] ON [dbo].[Attachment] ([FormFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_Attachment_HVCaseFK] ON [dbo].[Attachment] ([HVCaseFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_Attachment_ProgramFK] ON [dbo].[Attachment] ([ProgramFK]) ON [PRIMARY]
+GO
diff --git a/Tables/dbo.CaseFilter.sql b/Tables/dbo.CaseFilter.sql
new file mode 100644
index 0000000..d62ca1d
--- /dev/null
+++ b/Tables/dbo.CaseFilter.sql
@@ -0,0 +1,46 @@
+CREATE TABLE [dbo].[CaseFilter]
+(
+[CaseFilterPK] [int] NOT NULL IDENTITY(1, 1),
+[CaseFilterNameFK] [int] NOT NULL,
+[CaseFilterCreateDate] [datetime] NOT NULL CONSTRAINT [DF_CaseFilter_CaseFilterCreateDate] DEFAULT (getdate()),
+[CaseFilterCreator] [varchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[CaseFilterEditDate] [datetime] NULL,
+[CaseFilterEditor] [varchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CaseFilterNameChoice] [bit] NULL,
+[CaseFilterNameDate] [date] NULL,
+[CaseFilterNameOptionFK] [int] NULL,
+[CaseFilterValue] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HVCaseFK] [int] NOT NULL,
+[ProgramFK] [int] NOT NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		<Author,,Name>
+-- Create date: <Create Date,,>
+-- Description:	<Description,,>
+-- =============================================
+CREATE TRIGGER [dbo].[TR_CaseFilterEditDate] ON [dbo].[CaseFilter]
+For Update 
+AS
+Update CaseFilter Set CaseFilter.CaseFilterEditDate= getdate()
+From [CaseFilter] INNER JOIN Inserted ON [CaseFilter].[CaseFilterPK]= Inserted.[CaseFilterPK]
+
+GO
+ALTER TABLE [dbo].[CaseFilter] ADD CONSTRAINT [PK__CaseFilt__9E62C9EB0CBAE877] PRIMARY KEY CLUSTERED  ([CaseFilterPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_CaseFilter_CaseFilterNameFK] ON [dbo].[CaseFilter] ([CaseFilterNameFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_CaseFilter_HVCaseFK] ON [dbo].[CaseFilter] ([HVCaseFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_CaseFilter_ProgramFK] ON [dbo].[CaseFilter] ([ProgramFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[CaseFilter] WITH NOCHECK ADD CONSTRAINT [FK_CaseFilter_CaseFilterNameFK] FOREIGN KEY ([CaseFilterNameFK]) REFERENCES [dbo].[listCaseFilterName] ([listCaseFilterNamePK])
+GO
+ALTER TABLE [dbo].[CaseFilter] WITH NOCHECK ADD CONSTRAINT [FK_CaseFilter_HVCaseFK] FOREIGN KEY ([HVCaseFK]) REFERENCES [dbo].[HVCase] ([HVCasePK])
+GO
+ALTER TABLE [dbo].[CaseFilter] WITH NOCHECK ADD CONSTRAINT [FK_CaseFilter_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
diff --git a/Tables/dbo.CaseProgram.sql b/Tables/dbo.CaseProgram.sql
new file mode 100644
index 0000000..c5e4a35
--- /dev/null
+++ b/Tables/dbo.CaseProgram.sql
@@ -0,0 +1,113 @@
+CREATE TABLE [dbo].[CaseProgram]
+(
+[CaseProgramPK] [int] NOT NULL IDENTITY(1, 1),
+[CaseProgramCreateDate] [datetime] NOT NULL CONSTRAINT [DF_CaseProgram_CaseProgramCreateDate] DEFAULT (getdate()),
+[CaseProgramCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[CaseProgramEditDate] [datetime] NULL,
+[CaseProgramEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CaseStartDate] [datetime] NOT NULL,
+[CurrentFAFK] [int] NULL,
+[CurrentFAWFK] [int] NULL,
+[CurrentFSWFK] [int] NULL,
+[CurrentLevelDate] [datetime] NOT NULL,
+[CurrentLevelFK] [int] NOT NULL,
+[DischargeDate] [datetime] NULL,
+[DischargeReason] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DischargeReasonSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ExtraField1] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ExtraField2] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ExtraField3] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ExtraField4] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ExtraField5] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ExtraField6] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ExtraField7] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ExtraField8] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ExtraField9] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HVCaseFK] [int] NOT NULL,
+[HVCaseFK_old] [int] NOT NULL,
+[OldID] [char] (23) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1ID] [char] (13) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[ProgramFK] [int] NOT NULL,
+[TransferredtoProgram] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[TransferredtoProgramFK] [int] NULL,
+[TransferredStatus] [int] NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+CREATE TRIGGER [dbo].[fr_discharge] on [dbo].[CaseProgram] AFTER UPDATE
+AS
+
+	DECLARE @oldDischargeDate datetime, 
+		    @newDischargeDate datetime,
+			@newLevelFK int, @PK int;
+
+	SELECT @oldDischargeDate=d.DischargeDate,
+		   @newDischargeDate=i.DischargeDate,
+		   @newLevelFK = i.currentLevelFK,
+		   @PK = i.CaseProgramPK
+    FROM inserted i 
+	Inner Join deleted d on i.CaseProgramPK = d.CaseProgramPK
+
+	IF (@oldDischargeDate IS NULL and @newDischargeDate IS NOT NULL and @newLevelFK > 9)
+		Begin
+			EXEC spAddFormReview_userTrigger @FormFK=@PK, @FormTypeValue='DS';
+		End
+	ELSE IF (@oldDischargeDate IS NOT NULL and @newDischargeDAte IS NULL and @newLevelFK > 9)
+		Begin
+			EXEC spDeleteFormReview_Trigger @FormFK=@PK, @FormTypeValue='DS';
+		End
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_CaseProgramEditDate ON CaseProgram
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_CaseProgramEditDate] ON [dbo].[CaseProgram]
+For Update 
+AS
+Update CaseProgram Set CaseProgram.CaseProgramEditDate= getdate()
+From [CaseProgram] INNER JOIN Inserted ON [CaseProgram].[CaseProgramPK]= Inserted.[CaseProgramPK]
+GO
+ALTER TABLE [dbo].[CaseProgram] ADD CONSTRAINT [PK_CaseProgram] PRIMARY KEY CLUSTERED  ([CaseProgramPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_CaseProgram_CurrentFAFK] ON [dbo].[CaseProgram] ([CurrentFAFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_CaseProgram_CurrentFAWFK] ON [dbo].[CaseProgram] ([CurrentFAWFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_CaseProgram_CurrentFSWFK] ON [dbo].[CaseProgram] ([CurrentFSWFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_CaseProgram_CurrentLevelFK] ON [dbo].[CaseProgram] ([CurrentLevelFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_CaseProgram_CurrentLevelFK] ON [dbo].[CaseProgram] ([CurrentLevelFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_CaseProgram_HVCaseFK] ON [dbo].[CaseProgram] ([HVCaseFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_CaseProgram_HVCaseFK] ON [dbo].[CaseProgram] ([HVCaseFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_CaseProgram_ProgramFK] ON [dbo].[CaseProgram] ([ProgramFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_CaseProgram_ProgramFK] ON [dbo].[CaseProgram] ([ProgramFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_CaseProgram_TransferredtoProgramFK] ON [dbo].[CaseProgram] ([TransferredtoProgramFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[CaseProgram] WITH NOCHECK ADD CONSTRAINT [FK_CaseProgram_CurrentFAFK] FOREIGN KEY ([CurrentFAFK]) REFERENCES [dbo].[Worker] ([WorkerPK])
+GO
+ALTER TABLE [dbo].[CaseProgram] WITH NOCHECK ADD CONSTRAINT [FK_CaseProgram_CurrentFAWFK] FOREIGN KEY ([CurrentFAWFK]) REFERENCES [dbo].[Worker] ([WorkerPK])
+GO
+ALTER TABLE [dbo].[CaseProgram] WITH NOCHECK ADD CONSTRAINT [FK_CaseProgram_CurrentFSWFK] FOREIGN KEY ([CurrentFSWFK]) REFERENCES [dbo].[Worker] ([WorkerPK])
+GO
+ALTER TABLE [dbo].[CaseProgram] WITH NOCHECK ADD CONSTRAINT [FK_CaseProgram_CurrentLevelFK] FOREIGN KEY ([CurrentLevelFK]) REFERENCES [dbo].[codeLevel] ([codeLevelPK])
+GO
+ALTER TABLE [dbo].[CaseProgram] WITH NOCHECK ADD CONSTRAINT [FK_CaseProgram_HVCaseFK] FOREIGN KEY ([HVCaseFK]) REFERENCES [dbo].[HVCase] ([HVCasePK])
+GO
+ALTER TABLE [dbo].[CaseProgram] WITH NOCHECK ADD CONSTRAINT [FK_CaseProgram_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
+ALTER TABLE [dbo].[CaseProgram] WITH NOCHECK ADD CONSTRAINT [FK_CaseProgram_TransferredtoProgramFK] FOREIGN KEY ([TransferredtoProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
+EXEC sp_addextendedproperty N'MS_Description', N'Do not accept SVN changes', 'SCHEMA', N'dbo', 'TABLE', N'CaseProgram', 'COLUMN', N'CaseProgramPK'
+GO
diff --git a/Tables/dbo.CommonAttributes.sql b/Tables/dbo.CommonAttributes.sql
new file mode 100644
index 0000000..e363824
--- /dev/null
+++ b/Tables/dbo.CommonAttributes.sql
@@ -0,0 +1,129 @@
+CREATE TABLE [dbo].[CommonAttributes]
+(
+[CommonAttributesPK] [int] NOT NULL IDENTITY(1, 1),
+[AvailableMonthlyBenefits] [numeric] (4, 0) NULL,
+[AvailableMonthlyBenefitsUnknown] [bit] NULL,
+[AvailableMonthlyIncome] [numeric] (5, 0) NULL,
+[CommonAttributesCreateDate] [datetime] NOT NULL CONSTRAINT [DF_CommonAttributes_CommonAttributesCreateDate] DEFAULT (getdate()),
+[CommonAttributesCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[CommonAttributesEditDate] [datetime] NULL,
+[CommonAttributesEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[EducationalEnrollment] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FormDate] [datetime] NOT NULL,
+[FormFK] [int] NULL,
+[FormInterval] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[FormType] [char] (8) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[Gravida] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HIFamilyChildHealthPlus] [bit] NULL,
+[HighestGrade] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HIMedicaidCaseNumber] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HIOther] [bit] NULL,
+[HIOtherSpecify] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HIPCAP] [bit] NULL,
+[HIPCAPCaseNumber] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HIPrivate] [bit] NULL,
+[HIUninsured] [bit] NULL,
+[HIUnknown] [bit] NULL,
+[HoursPerMonth] [int] NULL,
+[HVCaseFK] [int] NOT NULL,
+[IsCurrentlyEmployed] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[LanguageSpecify] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[LivingArrangement] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[LivingArrangementSpecific] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[Looked4Employment] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MaritalStatus] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MonthlyIncomeUnknown] [bit] NULL,
+[NumberEmployed] [int] NULL,
+[NumberInHouse] [int] NULL,
+[OBPInHome] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[OBPInvolvement] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[OBPInvolvementSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[Parity] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PBEmergencyAssistance] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PBEmergencyAssistanceAmount] [numeric] (4, 0) NULL,
+[PBFoodStamps] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PBFoodStampsAmount] [numeric] (4, 0) NULL,
+[PBSSI] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PBSSIAmount] [numeric] (4, 0) NULL,
+[PBTANF] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PBTANFAmount] [numeric] (4, 0) NULL,
+[PBWIC] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PBWICAmount] [numeric] (4, 0) NULL,
+[PC1HasMedicalProvider] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1MedicalFacilityFK] [int] NULL,
+[PC1MedicalProviderFK] [int] NULL,
+[PC1ReceivingMedicaid] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCFK] [int] NULL,
+[PreviouslyEmployed] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PrimaryLanguage] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ProgramFK] [int] NOT NULL,
+[ReceivingPreNatalCare] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ReceivingPublicBenefits] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SIDomesticViolence] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SICPSACS] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SIMentalHealth] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SISubstanceAbuse] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[TANFServices] [bit] NULL,
+[TANFServicesNo] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[TANFServicesNoSpecify] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[TCHasMedicalProvider] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[TCHIFamilyChildHealthPlus] [bit] NULL,
+[TCHIMedicaidCaseNumber] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[TCHIPrivateInsurance] [bit] NULL,
+[TCHIOther] [bit] NULL,
+[TCHIOtherSpecify] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[TCHIUninsured] [bit] NULL,
+[TCHIUnknown] [bit] NULL,
+[TCMedicalCareSource] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[TCMedicalCareSourceOtherSpecify] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[TCMedicalFacilityFK] [int] NULL,
+[TCMedicalProviderFK] [int] NULL,
+[TCReceivingMedicaid] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[TimeBreastFed] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[WasBreastFed] [bit] NULL,
+[WhyNotBreastFed] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_CommonAttributesEditDate ON CommonAttributes
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_CommonAttributesEditDate] ON [dbo].[CommonAttributes]
+For Update 
+AS
+Update CommonAttributes Set CommonAttributes.CommonAttributesEditDate= getdate()
+From [CommonAttributes] INNER JOIN Inserted ON [CommonAttributes].[CommonAttributesPK]= Inserted.[CommonAttributesPK]
+GO
+ALTER TABLE [dbo].[CommonAttributes] ADD CONSTRAINT [PK__CommonAt__14761E7359FA5E80] PRIMARY KEY CLUSTERED  ([CommonAttributesPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_CommonAttributes_HVCaseFK] ON [dbo].[CommonAttributes] ([HVCaseFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_CommonAttributes_PC1MedicalFacilityFK] ON [dbo].[CommonAttributes] ([PC1MedicalFacilityFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_CommonAttributes_PC1MedicalProviderFK] ON [dbo].[CommonAttributes] ([PC1MedicalProviderFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_CommonAttributes_PCFK] ON [dbo].[CommonAttributes] ([PCFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_CommonAttributes_ProgramFK] ON [dbo].[CommonAttributes] ([ProgramFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_CommonAttributes_TCMedicalFacilityFK] ON [dbo].[CommonAttributes] ([TCMedicalFacilityFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_CommonAttributes_TCMedicalProviderFK] ON [dbo].[CommonAttributes] ([TCMedicalProviderFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[CommonAttributes] ADD CONSTRAINT [FK_CommonAttributes_HVCaseFK] FOREIGN KEY ([HVCaseFK]) REFERENCES [dbo].[HVCase] ([HVCasePK])
+GO
+ALTER TABLE [dbo].[CommonAttributes] ADD CONSTRAINT [FK_CommonAttributes_PC1MedicalFacilityFK] FOREIGN KEY ([PC1MedicalFacilityFK]) REFERENCES [dbo].[listMedicalFacility] ([listMedicalFacilityPK])
+GO
+ALTER TABLE [dbo].[CommonAttributes] ADD CONSTRAINT [FK_CommonAttributes_PC1MedicalProviderFK] FOREIGN KEY ([PC1MedicalProviderFK]) REFERENCES [dbo].[listMedicalProvider] ([listMedicalProviderPK])
+GO
+ALTER TABLE [dbo].[CommonAttributes] ADD CONSTRAINT [FK_CommonAttributes_PCFK] FOREIGN KEY ([PCFK]) REFERENCES [dbo].[PC] ([PCPK])
+GO
+ALTER TABLE [dbo].[CommonAttributes] ADD CONSTRAINT [FK_CommonAttributes_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
+ALTER TABLE [dbo].[CommonAttributes] ADD CONSTRAINT [FK_CommonAttributes_TCMedicalFacilityFK] FOREIGN KEY ([TCMedicalFacilityFK]) REFERENCES [dbo].[listMedicalFacility] ([listMedicalFacilityPK])
+GO
+ALTER TABLE [dbo].[CommonAttributes] ADD CONSTRAINT [FK_CommonAttributes_TCMedicalProviderFK] FOREIGN KEY ([TCMedicalProviderFK]) REFERENCES [dbo].[listMedicalProvider] ([listMedicalProviderPK])
+GO
diff --git a/Tables/dbo.FollowUp.sql b/Tables/dbo.FollowUp.sql
new file mode 100644
index 0000000..fa2a995
--- /dev/null
+++ b/Tables/dbo.FollowUp.sql
@@ -0,0 +1,165 @@
+CREATE TABLE [dbo].[FollowUp]
+(
+[FollowUpPK] [int] NOT NULL IDENTITY(1, 1),
+[BCAbstinence] [bit] NULL,
+[BCCervicalCap] [bit] NULL,
+[BCCondom] [bit] NULL,
+[BCDiaphragm] [bit] NULL,
+[BCEmergencyContraception] [bit] NULL,
+[BCFemaleCondom] [bit] NULL,
+[BCImplant] [bit] NULL,
+[BCIUD] [bit] NULL,
+[BCPatch] [bit] NULL,
+[BCPill] [bit] NULL,
+[BCShot] [bit] NULL,
+[BCSpermicide] [bit] NULL,
+[BCSterilization] [bit] NULL,
+[BCVaginalRing] [bit] NULL,
+[BCVasectomy] [bit] NULL,
+[BCWithdrawal] [bit] NULL,
+[BCRhythm] [bit] NULL,
+[BirthControlUse] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CPSACSReport] [bit] NULL,
+[DYFSOpenCase] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DYFSReport] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DYFSReportBy] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DYFSReportBySpecify] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DYFSSubstantiated] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FollowUpCreateDate] [datetime] NOT NULL CONSTRAINT [DF_FollowUp_FollowUpCreateDate] DEFAULT (getdate()),
+[FollowUpCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[FollowUpDate] [datetime] NOT NULL,
+[FollowUpEditDate] [datetime] NULL,
+[FollowUpEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FollowUpInterval] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[FSWFK] [int] NOT NULL,
+[FUPInWindow] [bit] NOT NULL,
+[HealthCareCoverageContinuity] [bit] NULL,
+[HOMECompleted] [bit] NULL,
+[HVCaseFK] [int] NOT NULL,
+[IFSPAdultRelationship] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[IFSPChildDevelopment] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[IFSPChildHealthSafety] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[IFSPEducation] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[IFSPEmployment] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[IFSPFamilyPlanning] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[IFSPHousing] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[IFSPNonTC] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[IFSPParentChildInteraction] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[IFSPParentHealthSafety] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[LeadAssessment] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[LiveBirths] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MonthsBirthControlUse] [int] NULL,
+[PC1InHome] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[PC1IssuesFK] [int] NOT NULL,
+[PC2InHome] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[Pregnant] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ProgramFK] [int] NOT NULL,
+[SafetyPlan] [bit] NULL,
+[SixMonthHome] [bit] NULL,
+[TCDentalCareSource] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[TimesPregnant] [int] NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+Create TRIGGER [dbo].[fr_delete_FollowUP]
+on [dbo].[FollowUp]
+After DELETE
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT FollowUpPK from deleted)
+
+BEGIN
+	EXEC spDeleteFormReview_Trigger @FormFK=@PK, @FormTypeValue='FU'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+CREATE TRIGGER [dbo].[fr_followup]
+on [dbo].[FollowUp]
+After insert
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT FollowUpPK from inserted)
+
+BEGIN
+	EXEC spAddFormReview_userTrigger @FormFK=@PK, @FormTypeValue='FU'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		Chris Papas
+-- Create date: 08/18/2010
+-- Description:	Updates FormReview Table with form date on Supervisor Review of Form
+-- =============================================
+CREATE TRIGGER [dbo].[fr_FollowUp_Edit]
+on [dbo].[FollowUp]
+AFTER UPDATE
+
+AS
+
+Declare @PK int
+Declare @UpdatedFormDate datetime 
+Declare @FormTypeValue varchar(2)
+
+select @PK = FollowUpPK  FROM inserted
+select @UpdatedFormDate = FollowUpDate FROM inserted
+set @FormTypeValue = 'FU'
+
+BEGIN
+	UPDATE FormReview
+	SET 
+	FormDate=@UpdatedFormDate
+	WHERE FormFK=@PK 
+	AND FormType=@FormTypeValue
+
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_FollowUpEditDate ON FollowUp
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_FollowUpEditDate] ON [dbo].[FollowUp]
+For Update 
+AS
+Update FollowUp Set FollowUp.FollowUpEditDate= getdate()
+From [FollowUp] INNER JOIN Inserted ON [FollowUp].[FollowUpPK]= Inserted.[FollowUpPK]
+GO
+ALTER TABLE [dbo].[FollowUp] ADD CONSTRAINT [PK__FollowUp__D50BBDE871D1E811] PRIMARY KEY CLUSTERED  ([FollowUpPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FollowUpInterval] ON [dbo].[FollowUp] ([FollowUpInterval]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_FollowUp_FSWFK] ON [dbo].[FollowUp] ([FSWFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_FollowUp_HVCaseFK] ON [dbo].[FollowUp] ([HVCaseFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_FollowUp_PC1IssuesFK] ON [dbo].[FollowUp] ([PC1IssuesFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_FollowUp_ProgramFK] ON [dbo].[FollowUp] ([ProgramFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[FollowUp] WITH NOCHECK ADD CONSTRAINT [FK_FollowUp_FSWFK] FOREIGN KEY ([FSWFK]) REFERENCES [dbo].[Worker] ([WorkerPK])
+GO
+ALTER TABLE [dbo].[FollowUp] WITH NOCHECK ADD CONSTRAINT [FK_FollowUp_HVCaseFK] FOREIGN KEY ([HVCaseFK]) REFERENCES [dbo].[HVCase] ([HVCasePK])
+GO
+ALTER TABLE [dbo].[FollowUp] WITH NOCHECK ADD CONSTRAINT [FK_FollowUp_PC1IssuesFK] FOREIGN KEY ([PC1IssuesFK]) REFERENCES [dbo].[PC1Issues] ([PC1IssuesPK])
+GO
+ALTER TABLE [dbo].[FollowUp] WITH NOCHECK ADD CONSTRAINT [FK_FollowUp_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
+EXEC sp_addextendedproperty N'MS_Description', N'Do not accept SVN changes', 'SCHEMA', N'dbo', 'TABLE', N'FollowUp', 'COLUMN', N'FollowUpPK'
+GO
diff --git a/Tables/dbo.FormReview.sql b/Tables/dbo.FormReview.sql
new file mode 100644
index 0000000..48ff931
--- /dev/null
+++ b/Tables/dbo.FormReview.sql
@@ -0,0 +1,41 @@
+CREATE TABLE [dbo].[FormReview]
+(
+[FormReviewPK] [int] NOT NULL IDENTITY(1, 1),
+[FormDate] [datetime] NOT NULL,
+[FormFK] [int] NOT NULL,
+[FormReviewCreateDate] [datetime] NOT NULL CONSTRAINT [DF_FormReview_FormReviewCreateDate] DEFAULT (getdate()),
+[FormReviewCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[FormReviewEditDate] [datetime] NULL,
+[FormReviewEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FormType] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[HVCaseFK] [int] NULL,
+[ProgramFK] [int] NOT NULL,
+[ReviewDateTime] [datetime] NULL,
+[ReviewedBy] [varchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_FormReviewEditDate ON FormReview
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_FormReviewEditDate] ON [dbo].[FormReview]
+For Update 
+AS
+Update FormReview Set FormReview.FormReviewEditDate= getdate()
+From [FormReview] INNER JOIN Inserted ON [FormReview].[FormReviewPK]= Inserted.[FormReviewPK]
+GO
+ALTER TABLE [dbo].[FormReview] ADD CONSTRAINT [PK__FormRevi__31992EDB76969D2E] PRIMARY KEY CLUSTERED  ([FormReviewPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FormReview_FormDate_FormFK_FormType] ON [dbo].[FormReview] ([FormDate], [FormFK], [FormType]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FormReview_FormFK] ON [dbo].[FormReview] ([FormFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FormReview_FormType] ON [dbo].[FormReview] ([FormType]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FormReview_HVCaseFK] ON [dbo].[FormReview] ([HVCaseFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FormReview_ProgramFK] ON [dbo].[FormReview] ([ProgramFK]) ON [PRIMARY]
+GO
diff --git a/Tables/dbo.HVCase.sql b/Tables/dbo.HVCase.sql
new file mode 100644
index 0000000..d10abcd
--- /dev/null
+++ b/Tables/dbo.HVCase.sql
@@ -0,0 +1,231 @@
+CREATE TABLE [dbo].[HVCase]
+(
+[HVCasePK] [int] NOT NULL IDENTITY(1, 1),
+[CaseProgress] [numeric] (3, 1) NULL,
+[Confidentiality] [bit] NULL,
+[CPFK] [int] NULL,
+[DateOBPAdded] [datetime] NULL,
+[EDC] [datetime] NULL,
+[FFFK] [int] NULL,
+[FirstChildDOB] [datetime] NULL,
+[FirstPrenatalCareVisit] [datetime] NULL,
+[FirstPrenatalCareVisitUnknown] [bit] NULL,
+[HVCaseCreateDate] [datetime] NOT NULL CONSTRAINT [DF_HVCase_HVCaseCreateDate] DEFAULT (getdate()),
+[HVCaseCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[HVCaseEditDate] [datetime] NULL,
+[HVCaseEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[InitialZip] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[IntakeDate] [datetime] NULL,
+[IntakeLevel] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[IntakeWorkerFK] [int] NULL,
+[KempeDate] [datetime] NULL,
+[OBPInformationAvailable] [bit] NULL,
+[OBPFK] [int] NULL,
+[OBPinHomeIntake] [bit] NULL,
+[OBPRelation2TC] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1FK] [int] NOT NULL,
+[PC1Relation2TC] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1Relation2TCSpecify] [varchar] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC2FK] [int] NULL,
+[PC2inHomeIntake] [bit] NULL,
+[PC2Relation2TC] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC2Relation2TCSpecify] [varchar] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PrenatalCheckupsB4] [int] NULL,
+[ScreenDate] [datetime] NOT NULL,
+[TCDOB] [datetime] NULL,
+[TCDOD] [datetime] NULL,
+[TCNumber] [int] NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+CREATE TRIGGER [dbo].[fr_IDContact]
+on [dbo].[HVCase]
+After UPDATE
+
+AS
+
+Declare @PK int, @oldConfidentiality bit, @newConfidentiality bit ;
+
+Select @oldConfidentiality = d.Confidentiality,
+	   @newConfidentiality = i.Confidentiality,
+	   @PK = i.HVCasePK
+From inserted i
+Inner Join deleted d On i.HVCasePK=d.HVCasePK
+
+IF @oldConfidentiality IS NULL and @newConfidentiality IS NOT NULL
+	BEGIN
+		EXEC spAddFormReview_userTrigger @FormFK=@PK, @FormTypeValue='ID'
+	END
+ELSE IF @oldConfidentiality IS NOT NULL and @newConfidentiality IS NULL
+	BEGIN
+		EXEC spDeleteFormReview_Trigger @FormFK=@PK, @FormTypeValue='ID'
+	END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		Chris Papas
+-- Create date: 08/18/2010
+-- Description:	Updates FormReview Table with form date on Supervisor Review of Form
+-- =============================================
+CREATE TRIGGER [dbo].[fr_IDContact_Edit]
+on [dbo].[HVCase]
+AFTER UPDATE
+
+AS
+
+Declare @PK int
+Declare @UpdatedFormDate datetime 
+Declare @FormTypeValue varchar(2)
+
+begin try
+
+select @PK = HVCasePK FROM inserted
+select @UpdatedFormDate = IntakeDate FROM inserted
+set @FormTypeValue = 'ID'
+
+BEGIN
+	UPDATE FormReview
+	SET 
+	FormDate=@UpdatedFormDate
+	WHERE FormFK=@PK 
+	AND FormType=@FormTypeValue
+
+END
+end try
+begin catch
+
+	DECLARE @StringVariable NVARCHAR(50);
+	SET @StringVariable = N'This is the PK: ' + str(@PK);
+
+	RAISERROR (@StringVariable, -- Message text.
+			   10, -- Severity,
+			   1, -- State,
+			   N'abcde');
+
+end catch
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_HVCaseEditDate ON HVCase
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_HVCaseEditDate] ON [dbo].[HVCase]
+For Update 
+AS
+Update HVCase Set HVCase.HVCaseEditDate= getdate()
+From [HVCase] INNER JOIN Inserted ON [HVCase].[HVCasePK]= Inserted.[HVCasePK]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author: Bill O'Brien
+-- Create date: 06/13/2016
+-- Description: Automatically Update Common Attributes Intake Rows when Intake Date Changed
+-- =============================================
+create TRIGGER [dbo].[TR_HVCaseIntakeDate] ON [dbo].[HVCase]
+
+
+For Update 
+AS
+Update CommonAttributes Set FormDate= inserted.IntakeDate
+From CommonAttributes
+INNER JOIN Inserted ON CommonAttributes.HVCaseFK= Inserted.[HVCasePK]
+where FormType like 'IN%'
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		Bill O'Brien
+-- Create date: 06/13/16
+-- Description:	Update Common Attributes Form Date with new TCDOB
+-- =============================================
+CREATE TRIGGER [dbo].[TR_HVCaseKempe] ON [dbo].[HVCase] 
+For Update 
+AS
+Update CommonAttributes Set FormDate= inserted.KempeDate
+From CommonAttributes
+INNER JOIN Inserted ON CommonAttributes.HVCaseFK= Inserted.[HVCasePK]
+where FormType = 'KE'
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		Bill O'Brien
+-- Create date: 06/13/16
+-- Description:	Update Common Attributes Form Date with new Screen Date
+-- =============================================
+CREATE TRIGGER [dbo].[TR_HVCaseScreenDate] ON [dbo].[HVCase]
+For Update 
+AS
+Update CommonAttributes Set FormDate= inserted.ScreenDate
+From CommonAttributes
+INNER JOIN Inserted ON CommonAttributes.HVCaseFK= Inserted.[HVCasePK]
+where FormType like 'SC'
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		Bill O'Brien
+-- Create date: 06/13/16
+-- Description:	Update Common Attributes Form Date with new TCDOB
+-- =============================================
+CREATE TRIGGER [dbo].[TR_HVCaseTCDOB] ON [dbo].[HVCase]
+For Update 
+AS
+Update CommonAttributes Set FormDate= inserted.TCDOB
+From CommonAttributes
+INNER JOIN Inserted ON CommonAttributes.HVCaseFK= Inserted.[HVCasePK]
+where FormType = 'TC'
+GO
+ALTER TABLE [dbo].[HVCase] ADD CONSTRAINT [PK__HVCase__A36F84D600200768] PRIMARY KEY CLUSTERED  ([HVCasePK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_HVCase_CaseProgress] ON [dbo].[HVCase] ([CaseProgress]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_HVCase_CPFK] ON [dbo].[HVCase] ([CPFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_HVCase_FFFK] ON [dbo].[HVCase] ([FFFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_HVCase_IntakeDate] ON [dbo].[HVCase] ([IntakeDate]) INCLUDE ([CaseProgress], [EDC], [HVCasePK], [TCDOB], [TCNumber]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_HVCase_OBPFK] ON [dbo].[HVCase] ([OBPFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_HVCase_PC1FK] ON [dbo].[HVCase] ([PC1FK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_HVCase_PC1FK] ON [dbo].[HVCase] ([PC1FK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_HVCase_PC2FK] ON [dbo].[HVCase] ([PC2FK]) ON [PRIMARY]
+GO
+CREATE STATISTICS [_dta_stat_165575628_2_33] ON [dbo].[HVCase] ([CaseProgress], [TCDOB])
+GO
+CREATE STATISTICS [_dta_stat_165575628_1_2_24] ON [dbo].[HVCase] ([HVCasePK], [CaseProgress], [PC1FK])
+GO
+CREATE STATISTICS [_dta_stat_165575628_33_1_2_24] ON [dbo].[HVCase] ([TCDOB], [HVCasePK], [CaseProgress], [PC1FK])
+GO
+CREATE STATISTICS [_dta_stat_165575628_33_24_1] ON [dbo].[HVCase] ([TCDOB], [PC1FK], [HVCasePK])
+GO
+ALTER TABLE [dbo].[HVCase] WITH NOCHECK ADD CONSTRAINT [FK_HVCase_CPFK] FOREIGN KEY ([CPFK]) REFERENCES [dbo].[PC] ([PCPK])
+GO
+ALTER TABLE [dbo].[HVCase] WITH NOCHECK ADD CONSTRAINT [FK_HVCase_FFFK] FOREIGN KEY ([FFFK]) REFERENCES [dbo].[PC] ([PCPK])
+GO
+ALTER TABLE [dbo].[HVCase] WITH NOCHECK ADD CONSTRAINT [FK_HVCase_OBPFK] FOREIGN KEY ([OBPFK]) REFERENCES [dbo].[PC] ([PCPK])
+GO
+ALTER TABLE [dbo].[HVCase] WITH NOCHECK ADD CONSTRAINT [FK_HVCase_PC1FK] FOREIGN KEY ([PC1FK]) REFERENCES [dbo].[PC] ([PCPK])
+GO
+ALTER TABLE [dbo].[HVCase] WITH NOCHECK ADD CONSTRAINT [FK_HVCase_PC2FK] FOREIGN KEY ([PC2FK]) REFERENCES [dbo].[PC] ([PCPK])
+GO
diff --git a/Tables/dbo.HVLevel.sql b/Tables/dbo.HVLevel.sql
new file mode 100644
index 0000000..04373b6
--- /dev/null
+++ b/Tables/dbo.HVLevel.sql
@@ -0,0 +1,104 @@
+CREATE TABLE [dbo].[HVLevel]
+(
+[HVLevelPK] [int] NOT NULL IDENTITY(1, 1),
+[HVCaseFK] [int] NOT NULL,
+[HVLevelCreateDate] [datetime] NOT NULL CONSTRAINT [DF_HVLevel_HVLevelCreateDate] DEFAULT (getdate()),
+[HVLevelCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[HVLevelEditDate] [datetime] NULL,
+[HVLevelEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[LevelAssignDate] [datetime] NOT NULL,
+[LevelFK] [int] NULL,
+[ProgramFK] [int] NOT NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+Create TRIGGER [dbo].[fr_delete_hvlevel]
+on [dbo].[HVLevel]
+After DELETE
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT HVLevelPK from deleted)
+
+BEGIN
+	EXEC spDeleteFormReview_Trigger @FormFK=@PK, @FormTypeValue='LV'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+CREATE TRIGGER [dbo].[fr_hvlevel]
+on [dbo].[HVLevel]
+After insert
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT HVLEVELPK from inserted)
+
+BEGIN
+	EXEC spAddFormReview_userTrigger @FormFK=@PK, @FormTypeValue='LV'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		Chris Papas
+-- Create date: 08/18/2010
+-- Description:	Updates FormReview Table with form date on Supervisor Review of Form
+-- =============================================
+CREATE TRIGGER [dbo].[fr_HVLevel_Edit]
+on [dbo].[HVLevel]
+AFTER UPDATE
+
+AS
+
+Declare @PK int
+Declare @UpdatedFormDate datetime 
+Declare @FormTypeValue varchar(2)
+
+select @PK = HVLevelPK  FROM inserted
+select @UpdatedFormDate = LevelAssignDate FROM inserted
+set @FormTypeValue = 'LV'
+
+BEGIN
+	UPDATE FormReview
+	SET 
+	FormDate=@UpdatedFormDate
+	WHERE FormFK=@PK 
+	AND FormType=@FormTypeValue
+
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_HVLevelEditDate ON HVLevel
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_HVLevelEditDate] ON [dbo].[HVLevel]
+For Update 
+AS
+Update HVLevel Set HVLevel.HVLevelEditDate= getdate()
+From [HVLevel] INNER JOIN Inserted ON [HVLevel].[HVLevelPK]= Inserted.[HVLevelPK]
+GO
+ALTER TABLE [dbo].[HVLevel] ADD CONSTRAINT [PK__HVLevel__929D7A180E6E26BF] PRIMARY KEY CLUSTERED  ([HVLevelPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_HVLevel_HVCaseFK] ON [dbo].[HVLevel] ([HVCaseFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_HVLevel_LevelFK] ON [dbo].[HVLevel] ([LevelFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[HVLevel] WITH NOCHECK ADD CONSTRAINT [FK_HVLevel_HVCaseFK] FOREIGN KEY ([HVCaseFK]) REFERENCES [dbo].[HVCase] ([HVCasePK])
+GO
+ALTER TABLE [dbo].[HVLevel] WITH NOCHECK ADD CONSTRAINT [FK_HVLevel_LevelFK] FOREIGN KEY ([LevelFK]) REFERENCES [dbo].[codeLevel] ([codeLevelPK])
+GO
diff --git a/Tables/dbo.HVLog.sql b/Tables/dbo.HVLog.sql
new file mode 100644
index 0000000..68f6afc
--- /dev/null
+++ b/Tables/dbo.HVLog.sql
@@ -0,0 +1,226 @@
+CREATE TABLE [dbo].[HVLog]
+(
+[HVLogPK] [int] NOT NULL IDENTITY(1, 1),
+[CAChildSupport] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CAAdvocacy] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CAGoods] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CAHousing] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CALaborSupport] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CALegal] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CAOther] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CAParentRights] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CASpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CATranslation] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CATransportation] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CAVisitation] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CDChildDevelopment] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CDOther] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CDSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CDToys] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CIProblems] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CIOther] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CIOtherSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[Curriculum247Dads] [bit] NULL,
+[CurriculumBoyz2Dads] [bit] NULL,
+[CurriculumGrowingGreatKids] [bit] NULL,
+[CurriculumHelpingBabiesLearn] [bit] NULL,
+[CurriculumInsideOutDads] [bit] NULL,
+[CurriculumMomGateway] [bit] NULL,
+[CurriculumOther] [bit] NULL,
+[CurriculumOtherSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CurriculumParentsForLearning] [bit] NULL,
+[CurriculumPartnersHealthyBaby] [bit] NULL,
+[CurriculumPAT] [bit] NULL,
+[CurriculumPATFocusFathers] [bit] NULL,
+[CurriculumSanAngelo] [bit] NULL,
+[FatherAdvocateFK] [int] NULL,
+[FatherAdvocateParticipated] [bit] NULL,
+[FatherFigureParticipated] [bit] NULL,
+[FFCommunication] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FFDomesticViolence] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FFFamilyRelations] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FFMentalHealth] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FFOther] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FFSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FFSubstanceAbuse] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FSWFK] [int] NULL,
+[GrandParentParticipated] [bit] NULL,
+[HCBreastFeeding] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HCChild] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HCDental] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HCFamilyPlanning] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HCFASD] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HCFeeding] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HCGeneral] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HCMedicalAdvocacy] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HCNutrition] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HCOther] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HCPrenatalCare] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HCProviders] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HCSafety] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HCSexEducation] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HCSIDS] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HCSmoking] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HCSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HVCaseFK] [int] NOT NULL,
+[HVLogCreateDate] [datetime] NOT NULL CONSTRAINT [DF_HVLog_HVLogCreateDate] DEFAULT (getdate()),
+[HVLogCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[HVLogEditDate] [datetime] NULL,
+[HVLogEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HVSupervisorParticipated] [bit] NULL,
+[NonPrimaryFSWParticipated] [bit] NULL,
+[NonPrimaryFSWFK] [int] NULL,
+[OBPParticipated] [bit] NULL,
+[OtherLocationSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[OtherParticipated] [bit] NULL,
+[PAAssessmentIssues] [bit] NULL,
+[PAForms] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PAGroups] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PAIFSP] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PAOther] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PARecreation] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PASpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PAVideo] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ParentCompletedActivity] [bit] NULL,
+[ParentObservationsDiscussed] [bit] NULL,
+[ParticipatedSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1Participated] [bit] NULL,
+[PC2Participated] [bit] NULL,
+[PCBasicNeeds] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCChildInteraction] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCChildManagement] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCFeelings] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCOther] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCShakenBaby] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCShakenBabyVideo] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCStress] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ProgramFK] [int] NULL,
+[ReviewAssessmentIssues] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SiblingParticipated] [bit] NULL,
+[SSCalendar] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SSChildCare] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SSEducation] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SSEmployment] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SSHousekeeping] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SSJob] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SSMoneyManagement] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SSOther] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SSProblemSolving] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SSSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SSTransportation] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SupervisorObservation] [bit] NULL,
+[TCParticipated] [bit] NULL,
+[TotalPercentageSpent] [int] NULL,
+[UpcomingProgramEvents] [bit] NULL,
+[VisitLengthHour] [int] NOT NULL,
+[VisitLengthMinute] [int] NOT NULL,
+[VisitLocation] [char] (5) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[VisitStartTime] [datetime] NOT NULL,
+[VisitType] [char] (4) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[CDParentConcerned] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FamilyMemberReads] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[TCAlwaysOnBack] [bit] NULL,
+[TCAlwaysWithoutSharing] [bit] NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+Create TRIGGER [dbo].[fr_delete_hvlog]
+on [dbo].[HVLog]
+After DELETE
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT HVLOGPK from deleted)
+
+BEGIN
+	EXEC spDeleteFormReview_Trigger @FormFK=@PK, @FormTypeValue='VL'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+CREATE TRIGGER [dbo].[fr_hvlog]
+on [dbo].[HVLog]
+After insert
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT HVLogPK from inserted)
+
+BEGIN
+	EXEC spAddFormReview_userTrigger @FormFK=@PK, @FormTypeValue='VL'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		Chris Papas
+-- Create date: 08/18/2010
+-- Description:	Updates FormReview Table with form date on Supervisor Review of Form
+-- =============================================
+CREATE TRIGGER [dbo].[fr_HVLog_Edit]
+on [dbo].[HVLog]
+AFTER UPDATE
+
+AS
+
+Declare @PK int
+Declare @UpdatedFormDate datetime 
+Declare @FormTypeValue varchar(2)
+
+select @PK = HVLogPK  FROM inserted
+select @UpdatedFormDate = VisitStartTime FROM inserted
+set @FormTypeValue = 'VL'
+
+BEGIN
+	UPDATE FormReview
+	SET 
+	FormDate=@UpdatedFormDate
+	WHERE FormFK=@PK 
+	AND FormType=@FormTypeValue
+
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+CREATE TRIGGER [dbo].[TR_HVLogEditDate] ON [dbo].[HVLog]
+For Update 
+AS
+Update HVLog Set HVLog.HVLogEditDate= getdate()
+From [HVLog] INNER JOIN Inserted ON [HVLog].[HVLogPK]= Inserted.[HVLogPK]
+GO
+ALTER TABLE [dbo].[HVLog] ADD CONSTRAINT [PK__HVLog__ED876F581332DBDC] PRIMARY KEY CLUSTERED  ([HVLogPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_HVLog_FSWFK] ON [dbo].[HVLog] ([FSWFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_HVLog_HVCaseFK] ON [dbo].[HVLog] ([HVCaseFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [HVCase_ProgramFK] ON [dbo].[HVLog] ([HVCaseFK], [ProgramFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_HVLog_ProgramFK] ON [dbo].[HVLog] ([ProgramFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_HVLog_VisitStartTime] ON [dbo].[HVLog] ([VisitStartTime]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_HVLog_VisitType] ON [dbo].[HVLog] ([VisitType]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[HVLog] WITH NOCHECK ADD CONSTRAINT [FK_HVLog_FSWFK] FOREIGN KEY ([FSWFK]) REFERENCES [dbo].[Worker] ([WorkerPK])
+GO
+ALTER TABLE [dbo].[HVLog] WITH NOCHECK ADD CONSTRAINT [FK_HVLog_HVCaseFK] FOREIGN KEY ([HVCaseFK]) REFERENCES [dbo].[HVCase] ([HVCasePK])
+GO
+ALTER TABLE [dbo].[HVLog] WITH NOCHECK ADD CONSTRAINT [FK_HVLog_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
+EXEC sp_addextendedproperty N'MS_Description', N'Do not accept SVN changes', 'SCHEMA', N'dbo', 'TABLE', N'HVLog', 'COLUMN', N'HVLogPK'
+GO
diff --git a/Tables/dbo.HVProgram.sql b/Tables/dbo.HVProgram.sql
new file mode 100644
index 0000000..7b6dd71
--- /dev/null
+++ b/Tables/dbo.HVProgram.sql
@@ -0,0 +1,59 @@
+CREATE TABLE [dbo].[HVProgram]
+(
+[HVProgramPK] [int] NOT NULL IDENTITY(1, 1),
+[ContractEndDate] [datetime] NULL,
+[ContractManager] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ContractNumber] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ContractStartDate] [datetime] NULL,
+[CountyFK] [int] NULL,
+[ExtraField1Description] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ExtraField2Description] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ExtraField3Description] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ExtraField4Description] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ExtraField5Description] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ExtraField7Description] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ExtraField8Description] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ExtraField9Description] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[GrantAmount] [numeric] (10, 2) NULL,
+[HVProgramCreateDate] [datetime] NOT NULL CONSTRAINT [DF_HVProgram_HVProgramCreateDate] DEFAULT (getdate()),
+[HVProgramCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[HVProgramEditDate] [datetime] NULL,
+[HVProgramEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[LeadAgencyCity] [char] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[LeadAgencyDirector] [char] (40) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[LeadAgencyName] [char] (70) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[LeadAgencyStreet] [char] (40) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[LeadAgencyZip] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ModemNumber] [char] (12) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ProgramCapacity] [int] NULL,
+[ProgramCity] [char] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ProgramCode] [char] (3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[ProgramFaxNumber] [char] (12) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ProgramManager] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ProgramName] [char] (60) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ProgramPhone] [char] (12) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ProgramStreet] [char] (40) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ProgramZip] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RegionFK] [int] NULL,
+[TargetZip] [nvarchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_HVProgramEditDate ON HVProgram
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_HVProgramEditDate] ON [dbo].[HVProgram]
+For Update 
+AS
+Update HVProgram Set HVProgram.HVProgramEditDate= getdate()
+From [HVProgram] INNER JOIN Inserted ON [HVProgram].[HVProgramPK]= Inserted.[HVProgramPK]
+GO
+ALTER TABLE [dbo].[HVProgram] ADD CONSTRAINT [PK__HVProgra__1C343B0217036CC0] PRIMARY KEY CLUSTERED  ([HVProgramPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_HVProgram_CountyFK] ON [dbo].[HVProgram] ([CountyFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[HVProgram] WITH NOCHECK ADD CONSTRAINT [FK_HVProgram_CountyFK] FOREIGN KEY ([CountyFK]) REFERENCES [dbo].[codeCounty] ([codeCountyPK])
+GO
diff --git a/Tables/dbo.HVScreen.sql b/Tables/dbo.HVScreen.sql
new file mode 100644
index 0000000..6e553b3
--- /dev/null
+++ b/Tables/dbo.HVScreen.sql
@@ -0,0 +1,129 @@
+CREATE TABLE [dbo].[HVScreen]
+(
+[HVScreenPK] [int] NOT NULL IDENTITY(1, 1),
+[DischargeReason] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DischargeReasonSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FAWFK] [int] NULL,
+[HVCaseFK] [int] NOT NULL,
+[ProgramFK] [int] NOT NULL,
+[ReferralMade] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ReferralSource] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ReferralSourceFK] [int] NULL,
+[ReferralSourceSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[Relation2TC] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[Relation2TCSpecify] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RiskAbortionHistory] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RiskAbortionTry] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RiskAdoption] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RiskDepressionHistory] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RiskEducation] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RiskInadequateSupports] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RiskMaritalProblems] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RiskNoPhone] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RiskNoPrenatalCare] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RiskNotMarried] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RiskPartnerJobless] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RiskPoor] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RiskPsychiatricHistory] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RiskSubstanceAbuseHistory] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RiskUnder21] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RiskUnstableHousing] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ScreenCreateDate] [datetime] NOT NULL CONSTRAINT [DF_HVScreen_ScreenCreateDate] DEFAULT (getdate()),
+[ScreenCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[ScreenDate] [datetime] NOT NULL,
+[ScreenEditDate] [datetime] NULL,
+[ScreenEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ScreenerFirstName] [varchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ScreenerLastName] [varchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ScreenerMiddleInitial] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ScreenerPhone] [char] (12) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ScreenResult] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ScreenVersion] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[TargetArea] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[TransferredtoProgram] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+Create TRIGGER [dbo].[fr_delete_screen]
+on [dbo].[HVScreen]
+After DELETE
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT HVSCREENPK from deleted)
+
+BEGIN
+	EXEC spDeleteFormReview_Trigger @FormFK=@PK, @FormTypeValue='SC'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+CREATE TRIGGER [dbo].[fr_hvscreen]
+on [dbo].[HVScreen]
+After insert
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT HVScreenPK from inserted)
+
+BEGIN
+	EXEC spAddFormReview_userTrigger @FormFK=@PK, @FormTypeValue='SC'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		Chris Papas
+-- Create date: 08/18/2010
+-- Description:	Updates FormReview Table with form date on Supervisor Review of Form
+-- =============================================
+CREATE TRIGGER [dbo].[fr_hvscreen_edit]
+on [dbo].[HVScreen]
+AFTER UPDATE
+
+AS
+
+Declare @PK int
+Declare @UpdatedFormDate datetime 
+Declare @FormTypeValue varchar(2)
+
+
+select @PK = HVScreenPK  FROM inserted
+select @UpdatedFormDate = ScreenDate FROM inserted
+set @FormTypeValue = 'SC'
+
+BEGIN
+	UPDATE FormReview
+	SET 
+	FormDate=@UpdatedFormDate
+	WHERE FormFK=@PK 
+	AND FormType=@FormTypeValue
+
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_ScreenEditDate ON HVScreen
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_ScreenEditDate] ON [dbo].[HVScreen]
+For Update 
+AS
+Update HVScreen Set HVScreen.ScreenEditDate= getdate()
+From [HVScreen] INNER JOIN Inserted ON [HVScreen].[HVScreenPK]= Inserted.[HVScreenPK]
+GO
+ALTER TABLE [dbo].[HVScreen] ADD CONSTRAINT [PK__HVScreen__3751BFE51BC821DD] PRIMARY KEY CLUSTERED  ([HVScreenPK]) ON [PRIMARY]
+GO
diff --git a/Tables/dbo.Intake.sql b/Tables/dbo.Intake.sql
new file mode 100644
index 0000000..376b5a0
--- /dev/null
+++ b/Tables/dbo.Intake.sql
@@ -0,0 +1,120 @@
+CREATE TABLE [dbo].[Intake]
+(
+[IntakePK] [int] NOT NULL IDENTITY(1, 1),
+[FSWFK] [int] NOT NULL,
+[HVCaseFK] [int] NOT NULL,
+[IntakeCreateDate] [datetime] NOT NULL CONSTRAINT [DF_Intake_IntakeCreateDate] DEFAULT (getdate()),
+[IntakeCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[IntakeDate] [datetime] NOT NULL,
+[IntakeEditdate] [datetime] NULL,
+[IntakeEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ProgramFK] [int] NOT NULL,
+[MIECHV_Race_AmericanIndian] [bit] NULL,
+[MIECHV_Race_Asian] [bit] NULL,
+[MIECHV_Race_Black] [bit] NULL,
+[MIECHV_Race_Hawaiian] [bit] NULL,
+[MIECHV_Race_White] [bit] NULL,
+[MIECHV_Hispanic] [nvarchar] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[OtherChildrenDevelopmentalDelays] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1SelfLowStudentAchievement] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1ChildrenLowStudentAchievement] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1FamilyArmedForces] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+Create TRIGGER [dbo].[fr_delete_intake]
+on [dbo].[Intake]
+After DELETE
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT INTAKEPK from deleted)
+
+BEGIN
+	EXEC spDeleteFormReview_Trigger @FormFK=@PK, @FormTypeValue='IN'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+CREATE TRIGGER [dbo].[fr_intake]
+on [dbo].[Intake]
+After insert
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT IntakePK from inserted)
+
+BEGIN
+	EXEC spAddFormReview_userTrigger @FormFK=@PK, @FormTypeValue='IN'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		Chris Papas
+-- Create date: 08/18/2010
+-- Description:	Updates FormReview Table with form date on Supervisor Review of Form
+-- =============================================
+CREATE TRIGGER [dbo].[fr_Intake_Edit]
+on [dbo].[Intake]
+AFTER UPDATE
+
+AS
+
+Declare @PK int
+Declare @UpdatedFormDate datetime 
+Declare @FormTypeValue varchar(2)
+
+select @PK = IntakePK  FROM inserted
+select @UpdatedFormDate = IntakeDate FROM inserted
+set @FormTypeValue = 'IN'
+
+BEGIN
+	UPDATE FormReview
+	SET 
+	FormDate=@UpdatedFormDate
+	WHERE FormFK=@PK 
+	AND FormType=@FormTypeValue
+
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_IntakeEditdate ON Intake
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_IntakeEditdate] ON [dbo].[Intake]
+For Update 
+AS
+Update Intake Set Intake.IntakeEditdate= getdate()
+From [Intake] INNER JOIN Inserted ON [Intake].[IntakePK]= Inserted.[IntakePK]
+GO
+ALTER TABLE [dbo].[Intake] ADD CONSTRAINT [PK__Intake__7E1E6135208CD6FA] PRIMARY KEY CLUSTERED  ([IntakePK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_Intake_FSWFK] ON [dbo].[Intake] ([FSWFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_Intake_HVCaseFK] ON [dbo].[Intake] ([HVCaseFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_Intake_ProgramFK] ON [dbo].[Intake] ([ProgramFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[Intake] WITH NOCHECK ADD CONSTRAINT [FK_Intake_FSWFK] FOREIGN KEY ([FSWFK]) REFERENCES [dbo].[Worker] ([WorkerPK])
+GO
+ALTER TABLE [dbo].[Intake] WITH NOCHECK ADD CONSTRAINT [FK_Intake_HVCaseFK] FOREIGN KEY ([HVCaseFK]) REFERENCES [dbo].[HVCase] ([HVCasePK])
+GO
+ALTER TABLE [dbo].[Intake] WITH NOCHECK ADD CONSTRAINT [FK_Intake_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
+EXEC sp_addextendedproperty N'MS_Description', N'Do not accept SVN changes', 'SCHEMA', N'dbo', 'TABLE', N'Intake', 'COLUMN', N'IntakePK'
+GO
diff --git a/Tables/dbo.Kempe.sql b/Tables/dbo.Kempe.sql
new file mode 100644
index 0000000..d513dcc
--- /dev/null
+++ b/Tables/dbo.Kempe.sql
@@ -0,0 +1,176 @@
+CREATE TABLE [dbo].[Kempe]
+(
+[KempePK] [int] NOT NULL IDENTITY(1, 1),
+[DadBondingArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DadChildHistoryArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DadCPSArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DadDisciplineArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DadExpectationArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DadPerceptionArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DadSAMICHArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DadScore] [char] (3) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DadSelfEsteemArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DadStressorArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DadViolentArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FAWFK] [int] NOT NULL,
+[FOBPartnerPresent] [bit] NULL,
+[FOBPresent] [bit] NULL,
+[GrandParentPresent] [bit] NULL,
+[HVCaseFK] [int] NOT NULL,
+[KempeCreateDate] [datetime] NOT NULL CONSTRAINT [DF_Kempe_KempeCreateDate] DEFAULT (getdate()),
+[KempeCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[KempeDate] [datetime] NOT NULL,
+[KempeEditDate] [datetime] NULL,
+[KempeEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[KempeResult] [bit] NOT NULL,
+[MOBPartnerPresent] [bit] NULL,
+[MOBPresent] [bit] NULL,
+[MomBondingArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MomChildHistoryArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MomCPSArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MomDisciplineArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MomExpectationArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MomPerceptionArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MomSAMICHArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MomScore] [char] (3) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MomSelfEsteemArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MomStressorArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MomViolentArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[NegativeReferral] [bit] NULL,
+[OtherPresent] [bit] NULL,
+[PartnerBondingArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PartnerChildHistoryArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PartnerCPSArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PartnerDisciplineArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PartnerExpectationArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PartnerInHome] [bit] NULL,
+[PartnerPerceptionArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PartnerSAMICHArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PartnerScore] [char] (3) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PartnerSelfEsteemArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PartnerStressorArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PartnerViolentArea] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1ABadChild] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1ADifficultChild] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1AEmotionalNeeds] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1AHarsh] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1ATemper] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1AUnrealistic] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1AUnwanted] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1CANer] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1Criminal] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1FosterChild] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1IssuesFK] [int] NOT NULL,
+[PC1MentallyIll] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1Neglected] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1ParentSubAbuse] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1PhysicallyAbused] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1SexuallyAbused] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1SubAbuse] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1SuspectCANer] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PresentSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ProgramFK] [int] NOT NULL,
+[SupervisorObservation] [bit] NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+Create TRIGGER [dbo].[fr_delete_kempe]
+on [dbo].[Kempe]
+After DELETE
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT KEMPEPK from deleted)
+
+BEGIN
+	EXEC spDeleteFormReview_Trigger @FormFK=@PK, @FormTypeValue='KE'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+CREATE TRIGGER [dbo].[fr_kempe]
+on [dbo].[Kempe]
+After insert
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT KempePK from inserted)
+
+BEGIN
+	EXEC spAddFormReview_userTrigger @FormFK=@PK, @FormTypeValue='KE'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		Chris Papas
+-- Create date: 08/18/2010
+-- Description:	Updates FormReview Table with form date on Supervisor Review of Form
+-- =============================================
+CREATE TRIGGER [dbo].[fr_Kempe_Edit]
+on [dbo].[Kempe]
+AFTER UPDATE
+
+AS
+
+Declare @PK int
+Declare @UpdatedFormDate datetime 
+Declare @FormTypeValue varchar(2)
+
+select @PK = KempePK   FROM inserted
+select @UpdatedFormDate = KempeDate FROM inserted
+set @FormTypeValue = 'KE'
+
+BEGIN
+	UPDATE FormReview
+	SET 
+	FormDate=@UpdatedFormDate
+	WHERE FormFK=@PK 
+	AND FormType=@FormTypeValue
+
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_KempeEditDate ON Kempe
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_KempeEditDate] ON [dbo].[Kempe]
+For Update 
+AS
+Update Kempe Set Kempe.KempeEditDate= getdate()
+From [Kempe] INNER JOIN Inserted ON [Kempe].[KempePK]= Inserted.[KempePK]
+GO
+ALTER TABLE [dbo].[Kempe] ADD CONSTRAINT [PK__Kempe__309BD73525518C17] PRIMARY KEY CLUSTERED  ([KempePK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_Kempe_FAWFK] ON [dbo].[Kempe] ([FAWFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_Kempe_HVCaseFK] ON [dbo].[Kempe] ([HVCaseFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_Kempe_PC1IssuesFK] ON [dbo].[Kempe] ([PC1IssuesFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_Kempe_ProgramFK] ON [dbo].[Kempe] ([ProgramFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[Kempe] WITH NOCHECK ADD CONSTRAINT [FK_Kempe_FAWFK] FOREIGN KEY ([FAWFK]) REFERENCES [dbo].[Worker] ([WorkerPK])
+GO
+ALTER TABLE [dbo].[Kempe] WITH NOCHECK ADD CONSTRAINT [FK_Kempe_HVCaseFK] FOREIGN KEY ([HVCaseFK]) REFERENCES [dbo].[HVCase] ([HVCasePK])
+GO
+ALTER TABLE [dbo].[Kempe] WITH NOCHECK ADD CONSTRAINT [FK_Kempe_PC1IssuesFK] FOREIGN KEY ([PC1IssuesFK]) REFERENCES [dbo].[PC1Issues] ([PC1IssuesPK])
+GO
+ALTER TABLE [dbo].[Kempe] WITH NOCHECK ADD CONSTRAINT [FK_Kempe_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
+EXEC sp_addextendedproperty N'MS_Description', N'Do not accept SVN changes', 'SCHEMA', N'dbo', 'TABLE', N'Kempe', 'COLUMN', N'KempePK'
+GO
diff --git a/Tables/dbo.OtherChild.sql b/Tables/dbo.OtherChild.sql
new file mode 100644
index 0000000..88041ba
--- /dev/null
+++ b/Tables/dbo.OtherChild.sql
@@ -0,0 +1,50 @@
+CREATE TABLE [dbo].[OtherChild]
+(
+[OtherChildPK] [int] NOT NULL IDENTITY(1, 1),
+[BirthTerm] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[BirthWtLbs] [int] NULL,
+[BirthWtOz] [int] NULL,
+[DOB] [datetime] NULL,
+[FirstName] [varchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FormFK] [int] NOT NULL,
+[FormType] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[GestationalWeeks] [int] NULL,
+[HVCaseFK] [int] NOT NULL,
+[LastName] [varchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[LivingArrangement] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[LivingArrangementSpecify] [char] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MultiBirth] [int] NULL,
+[OtherChildCreateDate] [datetime] NOT NULL CONSTRAINT [DF_OtherChild_OtherChildCreateDate] DEFAULT (getdate()),
+[OtherChildCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[OtherChildEditDate] [datetime] NULL,
+[OtherChildEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PregnancyOutcome] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PrenatalCare] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ProgramFK] [int] NULL,
+[Relation2PC1] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[Relation2PC1Specify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_OtherChildEditDate ON OtherChild
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_OtherChildEditDate] ON [dbo].[OtherChild]
+For Update 
+AS
+Update OtherChild Set OtherChild.OtherChildEditDate= getdate()
+From [OtherChild] INNER JOIN Inserted ON [OtherChild].[OtherChildPK]= Inserted.[OtherChildPK]
+GO
+ALTER TABLE [dbo].[OtherChild] ADD CONSTRAINT [PK__OtherChi__4C6128A742E1EEFE] PRIMARY KEY CLUSTERED  ([OtherChildPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_OtherChild_HVCaseFK] ON [dbo].[OtherChild] ([HVCaseFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_OtherChild_ProgramFK] ON [dbo].[OtherChild] ([ProgramFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[OtherChild] WITH NOCHECK ADD CONSTRAINT [FK_OtherChild_HVCaseFK] FOREIGN KEY ([HVCaseFK]) REFERENCES [dbo].[HVCase] ([HVCasePK])
+GO
+ALTER TABLE [dbo].[OtherChild] WITH NOCHECK ADD CONSTRAINT [FK_OtherChild_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
diff --git a/Tables/dbo.PC.sql b/Tables/dbo.PC.sql
new file mode 100644
index 0000000..426e834
--- /dev/null
+++ b/Tables/dbo.PC.sql
@@ -0,0 +1,57 @@
+CREATE TABLE [dbo].[PC]
+(
+[PCPK] [int] NOT NULL IDENTITY(1, 1),
+[BirthCountry] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[BornUSA] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CP] [bit] NULL,
+[Ethnicity] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[Gender] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[OBP] [bit] NULL,
+[PC1] [bit] NULL,
+[PC2] [bit] NULL,
+[PCApt] [varchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCCellPhone] [varchar] (12) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCCity] [varchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCCreateDate] [datetime] NOT NULL CONSTRAINT [DF_PC_PCCreateDate] DEFAULT (getdate()),
+[PCCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[PCDOB] [datetime] NULL,
+[PCDOD] [datetime] NULL,
+[PCEditDate] [datetime] NULL,
+[PCEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCEmail] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCEmergencyPhone] [varchar] (12) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCFirstName] [varchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[PCLastName] [varchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[PCMiddleInitial] [varchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCNoPhone] [bit] NULL,
+[PCOldName] [varchar] (400) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCOldName2] [varchar] (400) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCPhone] [char] (12) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCPK_old] [int] NOT NULL,
+[PCState] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCStreet] [varchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PCZip] [varchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[Race] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RaceSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SSNo] [varchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[TimesMoved] [int] NULL,
+[YearsInUSA] [numeric] (4, 0) NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_PCEditDate ON PC
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_PCEditDate] ON [dbo].[PC]
+For Update 
+AS
+Update PC Set PC.PCEditDate= getdate()
+From [PC] INNER JOIN Inserted ON [PC].[PCPK]= Inserted.[PCPK]
+GO
+ALTER TABLE [dbo].[PC] ADD CONSTRAINT [PK__PC__5801C57647A6A41B] PRIMARY KEY CLUSTERED  ([PCPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [_dta_index_PC_18_53575229__K14_K1_K21_K20] ON [dbo].[PC] ([PCDOB], [PCPK], [PCLastName], [PCFirstName]) ON [PRIMARY]
+GO
diff --git a/Tables/dbo.PC1Issues.sql b/Tables/dbo.PC1Issues.sql
new file mode 100644
index 0000000..3dbe25a
--- /dev/null
+++ b/Tables/dbo.PC1Issues.sql
@@ -0,0 +1,55 @@
+CREATE TABLE [dbo].[PC1Issues]
+(
+[PC1IssuesPK] [int] NOT NULL IDENTITY(1, 1),
+[AlcoholAbuse] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[CriminalActivity] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[Depression] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DevelopmentalDisability] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DomesticViolence] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FinancialDifficulty] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[Homeless] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HVCaseFK] [int] NOT NULL,
+[InadequateBasics] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[Interval] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[MaritalProblems] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MentalIllness] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[OtherIssue] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[OtherIssueSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[OtherLegalProblems] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1IssuesCreateDate] [datetime] NOT NULL CONSTRAINT [DF_PC1Issues_PC1IssuesCreateDate] DEFAULT (getdate()),
+[PC1IssuesCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[PC1IssuesDate] [datetime] NOT NULL,
+[PC1IssuesEditDate] [datetime] NULL,
+[PC1IssuesEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PC1IssuesPK_old] [int] NOT NULL,
+[PhysicalDisability] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ProgramFK] [int] NOT NULL,
+[Smoking] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SocialIsolation] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[Stress] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SubstanceAbuse] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_PC1IssuesEditDate ON PC1Issues
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_PC1IssuesEditDate] ON [dbo].[PC1Issues]
+For Update 
+AS
+Update PC1Issues Set PC1Issues.PC1IssuesEditDate= getdate()
+From [PC1Issues] INNER JOIN Inserted ON [PC1Issues].[PC1IssuesPK]= Inserted.[PC1IssuesPK]
+GO
+ALTER TABLE [dbo].[PC1Issues] ADD CONSTRAINT [PK__PC1Issue__B4E655D7503BEA1C] PRIMARY KEY CLUSTERED  ([PC1IssuesPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_PC1Issues_HVCaseFK] ON [dbo].[PC1Issues] ([HVCaseFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_PC1Issues_ProgramFK] ON [dbo].[PC1Issues] ([ProgramFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[PC1Issues] WITH NOCHECK ADD CONSTRAINT [FK_PC1Issues_HVCaseFK] FOREIGN KEY ([HVCaseFK]) REFERENCES [dbo].[HVCase] ([HVCasePK])
+GO
+ALTER TABLE [dbo].[PC1Issues] WITH NOCHECK ADD CONSTRAINT [FK_PC1Issues_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
diff --git a/Tables/dbo.PCProgram.sql b/Tables/dbo.PCProgram.sql
new file mode 100644
index 0000000..e28fedd
--- /dev/null
+++ b/Tables/dbo.PCProgram.sql
@@ -0,0 +1,17 @@
+CREATE TABLE [dbo].[PCProgram]
+(
+[PCProgramPK] [int] NOT NULL IDENTITY(1, 1),
+[PCFK] [int] NOT NULL,
+[ProgramFK] [int] NOT NULL
+) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[PCProgram] ADD CONSTRAINT [PK__PCProgra__16BA68D059C55456] PRIMARY KEY CLUSTERED  ([PCProgramPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_PCProgram_PCFK] ON [dbo].[PCProgram] ([PCFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_PCProgram_ProgramFK] ON [dbo].[PCProgram] ([ProgramFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[PCProgram] WITH NOCHECK ADD CONSTRAINT [FK_PCProgram_PCFK] FOREIGN KEY ([PCFK]) REFERENCES [dbo].[PC] ([PCPK])
+GO
+ALTER TABLE [dbo].[PCProgram] WITH NOCHECK ADD CONSTRAINT [FK_PCProgram_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
diff --git a/Tables/dbo.Preassessment.sql b/Tables/dbo.Preassessment.sql
new file mode 100644
index 0000000..6bc6b8e
--- /dev/null
+++ b/Tables/dbo.Preassessment.sql
@@ -0,0 +1,136 @@
+CREATE TABLE [dbo].[Preassessment]
+(
+[PreassessmentPK] [int] NOT NULL IDENTITY(1, 1),
+[CaseStatus] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[DischargeReason] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DischargeReasonSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DischargeSafetyReason] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DischargeSafetyReasonDV] [bit] NULL,
+[DischargeSafetyReasonMH] [bit] NULL,
+[DischargeSafetyReasonOther] [bit] NULL,
+[DischargeSafetyReasonSA] [bit] NULL,
+[DischargeSafetyReasonSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FSWAssignDate] [datetime] NULL,
+[HVCaseFK] [int] NOT NULL,
+[KempeDate] [datetime] NULL,
+[KempeResult] [bit] NULL,
+[PAActivitySpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PACall2Parent] [int] NULL,
+[PACallFromParent] [int] NULL,
+[PACaseReview] [int] NULL,
+[PACreateDate] [datetime] NOT NULL CONSTRAINT [DF_Preassessment_PACreateDate] DEFAULT (getdate()),
+[PACreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[PADate] [datetime] NOT NULL,
+[PAEditDate] [datetime] NULL,
+[PAEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PAFAWFK] [int] NOT NULL,
+[PAFSWFK] [int] NULL,
+[PAGift] [int] NULL,
+[PAOtherActivity] [int] NULL,
+[PAOtherHVProgram] [int] NULL,
+[PAParent2Office] [int] NULL,
+[PAParentLetter] [int] NULL,
+[PAProgramMaterial] [int] NULL,
+[PAVisitAttempt] [int] NULL,
+[PAVisitMade] [int] NULL,
+[ProgramFK] [int] NOT NULL,
+[TransferredtoProgram] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+Create TRIGGER [dbo].[fr_delete_preassessment]
+on [dbo].[Preassessment]
+After DELETE
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT PREASSESSMENTPK from deleted)
+
+BEGIN
+	EXEC spDeleteFormReview_Trigger @FormFK=@PK, @FormTypeValue='PA'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+Create TRIGGER [dbo].[fr_preassessment]
+on [dbo].[Preassessment]
+After insert
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT PreassessmentPK from inserted)
+
+BEGIN
+	EXEC spAddFormReview_userTrigger @FormFK=@PK, @FormTypeValue='PA'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		Chris Papas
+-- Create date: 08/18/2010
+-- Description:	Updates FormReview Table with form date on Supervisor Review of Form
+-- =============================================
+CREATE TRIGGER [dbo].[fr_Preassessment_Edit]
+on [dbo].[Preassessment]
+AFTER UPDATE
+
+AS
+
+Declare @PK int
+Declare @UpdatedFormDate datetime 
+Declare @FormTypeValue varchar(2)
+
+select @PK = PreassessmentPK FROM inserted
+select @UpdatedFormDate = PADate FROM inserted
+set @FormTypeValue = 'PA'
+
+BEGIN
+	UPDATE FormReview
+	SET 
+	FormDate=@UpdatedFormDate
+	WHERE FormFK=@PK 
+	AND FormType=@FormTypeValue
+
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_PAEditDate ON Preassessment
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_PAEditDate] ON [dbo].[Preassessment]
+For Update 
+AS
+Update Preassessment Set Preassessment.PAEditDate= getdate()
+From [Preassessment] INNER JOIN Inserted ON [Preassessment].[PreassessmentPK]= Inserted.[PreassessmentPK]
+GO
+ALTER TABLE [dbo].[Preassessment] ADD CONSTRAINT [PK__Preasses__686E4EF65D95E53A] PRIMARY KEY CLUSTERED  ([PreassessmentPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_Preassessment_HVCaseFK] ON [dbo].[Preassessment] ([HVCaseFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_Preassessment_PAFAWFK] ON [dbo].[Preassessment] ([PAFAWFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_Preassessment_ProgramFK] ON [dbo].[Preassessment] ([ProgramFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[Preassessment] WITH NOCHECK ADD CONSTRAINT [FK_Preassessment_HVCaseFK] FOREIGN KEY ([HVCaseFK]) REFERENCES [dbo].[HVCase] ([HVCasePK])
+GO
+ALTER TABLE [dbo].[Preassessment] WITH NOCHECK ADD CONSTRAINT [FK_Preassessment_PAFAWFK] FOREIGN KEY ([PAFAWFK]) REFERENCES [dbo].[Worker] ([WorkerPK])
+GO
+ALTER TABLE [dbo].[Preassessment] WITH NOCHECK ADD CONSTRAINT [FK_Preassessment_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
+EXEC sp_addextendedproperty N'MS_Description', N'Do not accept SVN changes', 'SCHEMA', N'dbo', 'TABLE', N'Preassessment', 'COLUMN', N'PreassessmentPK'
+GO
diff --git a/Tables/dbo.Preintake.sql b/Tables/dbo.Preintake.sql
new file mode 100644
index 0000000..349dc58
--- /dev/null
+++ b/Tables/dbo.Preintake.sql
@@ -0,0 +1,137 @@
+CREATE TABLE [dbo].[Preintake]
+(
+[PreintakePK] [int] NOT NULL IDENTITY(1, 1),
+[CaseStatus] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[DischargeReason] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DischargeReasonSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DischargeSafetyReason] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[DischargeSafetyReasonDV] [bit] NULL,
+[DischargeSafetyReasonMH] [bit] NULL,
+[DischargeSafetyReasonOther] [bit] NULL,
+[DischargeSafetyReasonSA] [bit] NULL,
+[DischargeSafetyReasonSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HVCaseFK] [int] NOT NULL,
+[KempeFK] [int] NOT NULL,
+[PIActivitySpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PICall2Parent] [int] NULL,
+[PICallFromParent] [int] NULL,
+[PICaseReview] [int] NULL,
+[PICreateDate] [datetime] NOT NULL CONSTRAINT [DF_Preintake_PICreateDate] DEFAULT (getdate()),
+[PICreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[PIDate] [datetime] NOT NULL,
+[PIEditDate] [datetime] NULL,
+[PIEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[PIFSWFK] [int] NOT NULL,
+[PIGift] [int] NULL,
+[PIOtherActivity] [int] NULL,
+[PIOtherHVProgram] [int] NULL,
+[PIParent2Office] [int] NULL,
+[PIParentLetter] [int] NULL,
+[PIProgramMaterial] [int] NULL,
+[PIVisitAttempt] [int] NULL,
+[PIVisitMade] [int] NULL,
+[ProgramFK] [int] NOT NULL,
+[TransferredtoProgram] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+Create TRIGGER [dbo].[fr_delete_preintake]
+on [dbo].[Preintake]
+After DELETE
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT PREINTAKEPK from deleted)
+
+BEGIN
+	EXEC spDeleteFormReview_Trigger @FormFK=@PK, @FormTypeValue='PI'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+CREATE TRIGGER [dbo].[fr_preintake]
+on [dbo].[Preintake]
+After insert
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT PreintakePK from inserted)
+
+BEGIN
+	EXEC spAddFormReview_userTrigger @FormFK=@PK, @FormTypeValue='PI'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		Chris Papas
+-- Create date: 08/18/2010
+-- Description:	Updates FormReview Table with form date on Supervisor Review of Form
+-- =============================================
+CREATE TRIGGER [dbo].[fr_Preintake_Edit]
+on [dbo].[Preintake]
+AFTER UPDATE
+
+AS
+
+Declare @PK int
+Declare @UpdatedFormDate datetime 
+Declare @FormTypeValue varchar(2)
+
+select @PK = PreintakePK FROM inserted
+select @UpdatedFormDate = PIDate FROM inserted
+set @FormTypeValue = 'PI'
+
+BEGIN
+	UPDATE FormReview
+	SET 
+	FormDate=@UpdatedFormDate
+	WHERE FormFK=@PK 
+	AND FormType=@FormTypeValue
+
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_PIEditDate ON Preintake
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_PIEditDate] ON [dbo].[Preintake]
+For Update 
+AS
+Update Preintake Set Preintake.PIEditDate= getdate()
+From [Preintake] INNER JOIN Inserted ON [Preintake].[PreintakePK]= Inserted.[PreintakePK]
+GO
+ALTER TABLE [dbo].[Preintake] ADD CONSTRAINT [PK__Preintak__0D9DD8F3625A9A57] PRIMARY KEY CLUSTERED  ([PreintakePK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_Preintake_HVCaseFK] ON [dbo].[Preintake] ([HVCaseFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_Preintake_KempeFK] ON [dbo].[Preintake] ([KempeFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_Preintake_PIFSWFK] ON [dbo].[Preintake] ([PIFSWFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_Preintake_ProgramFK] ON [dbo].[Preintake] ([ProgramFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[Preintake] WITH NOCHECK ADD CONSTRAINT [FK_Preintake_HVCaseFK] FOREIGN KEY ([HVCaseFK]) REFERENCES [dbo].[HVCase] ([HVCasePK])
+GO
+ALTER TABLE [dbo].[Preintake] WITH NOCHECK ADD CONSTRAINT [FK_Preintake_KempeFK] FOREIGN KEY ([KempeFK]) REFERENCES [dbo].[Kempe] ([KempePK])
+GO
+ALTER TABLE [dbo].[Preintake] WITH NOCHECK ADD CONSTRAINT [FK_Preintake_PIFSWFK] FOREIGN KEY ([PIFSWFK]) REFERENCES [dbo].[Worker] ([WorkerPK])
+GO
+ALTER TABLE [dbo].[Preintake] WITH NOCHECK ADD CONSTRAINT [FK_Preintake_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
+EXEC sp_addextendedproperty N'MS_Description', N'Do not accept SVN changes', 'SCHEMA', N'dbo', 'TABLE', N'Preintake', 'COLUMN', N'PreintakePK'
+GO
diff --git a/Tables/dbo.ServiceReferral.sql b/Tables/dbo.ServiceReferral.sql
new file mode 100644
index 0000000..b804b40
--- /dev/null
+++ b/Tables/dbo.ServiceReferral.sql
@@ -0,0 +1,124 @@
+CREATE TABLE [dbo].[ServiceReferral]
+(
+[ServiceReferralPK] [int] NOT NULL IDENTITY(1, 1),
+[FamilyCode] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[FamilyCodeSpecify] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FSWFK] [int] NOT NULL,
+[HVCaseFK] [int] NOT NULL,
+[NatureOfReferral] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[OtherServiceSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ProgramFK] [int] NOT NULL,
+[ProvidingAgencyFK] [int] NULL,
+[ReasonNoService] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ReasonNoServiceSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ReferralDate] [datetime] NOT NULL,
+[ServiceCode] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[ServiceReceived] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ServiceReferralCreateDate] [datetime] NOT NULL CONSTRAINT [DF_ServiceReferral_ServiceReferralCreateDate] DEFAULT (getdate()),
+[ServiceReferralCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[ServiceReferralEditDate] [datetime] NULL,
+[ServiceReferralEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[StartDate] [datetime] NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+Create TRIGGER [dbo].[fr_delete_servicereferral]
+on [dbo].[ServiceReferral]
+After DELETE
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT ServiceReferralPK from deleted)
+
+BEGIN
+	EXEC spDeleteFormReview_Trigger @FormFK=@PK, @FormTypeValue='SR'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+CREATE TRIGGER [dbo].[fr_servicereferral]
+on [dbo].[ServiceReferral]
+After insert
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT ServiceReferralPK from inserted)
+
+BEGIN
+	EXEC spAddFormReview_userTrigger @FormFK=@PK, @FormTypeValue='SR'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		Chris Papas
+-- Create date: 08/18/2010
+-- Description:	Updates FormReview Table with form date on Supervisor Review of Form
+-- =============================================
+CREATE TRIGGER [dbo].[fr_ServiceReferral_Edit]
+on [dbo].[ServiceReferral]
+AFTER UPDATE
+
+AS
+
+Declare @PK int
+Declare @UpdatedFormDate datetime 
+Declare @FormTypeValue varchar(2)
+
+select @PK = ServiceReferralPK  FROM inserted
+select @UpdatedFormDate = ReferralDate FROM inserted
+set @FormTypeValue = 'SR'
+
+BEGIN
+	UPDATE FormReview
+	SET 
+	FormDate=@UpdatedFormDate
+	WHERE FormFK=@PK 
+	AND FormType=@FormTypeValue
+
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_ServiceReferralEditDate ON ServiceReferral
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_ServiceReferralEditDate] ON [dbo].[ServiceReferral]
+For Update 
+AS
+Update ServiceReferral Set ServiceReferral.ServiceReferralEditDate= getdate()
+From [ServiceReferral] INNER JOIN Inserted ON [ServiceReferral].[ServiceReferralPK]= Inserted.[ServiceReferralPK]
+GO
+ALTER TABLE [dbo].[ServiceReferral] ADD CONSTRAINT [PK__ServiceR__9084E71E73852659] PRIMARY KEY CLUSTERED  ([ServiceReferralPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_ServiceReferral_FSWFK] ON [dbo].[ServiceReferral] ([FSWFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_ServiceReferral_HVCaseFK] ON [dbo].[ServiceReferral] ([HVCaseFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_ServiceReferral_ProgramFK] ON [dbo].[ServiceReferral] ([ProgramFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_ServiceReferral_ProvidingAgencyFK] ON [dbo].[ServiceReferral] ([ProvidingAgencyFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[ServiceReferral] WITH NOCHECK ADD CONSTRAINT [FK_ServiceReferral_FSWFK] FOREIGN KEY ([FSWFK]) REFERENCES [dbo].[Worker] ([WorkerPK])
+GO
+ALTER TABLE [dbo].[ServiceReferral] WITH NOCHECK ADD CONSTRAINT [FK_ServiceReferral_HVCaseFK] FOREIGN KEY ([HVCaseFK]) REFERENCES [dbo].[HVCase] ([HVCasePK])
+GO
+ALTER TABLE [dbo].[ServiceReferral] WITH NOCHECK ADD CONSTRAINT [FK_ServiceReferral_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
+ALTER TABLE [dbo].[ServiceReferral] WITH NOCHECK ADD CONSTRAINT [FK_ServiceReferral_ProvidingAgencyFK] FOREIGN KEY ([ProvidingAgencyFK]) REFERENCES [dbo].[listServiceReferralAgency] ([listServiceReferralAgencyPK])
+GO
+EXEC sp_addextendedproperty N'MS_Description', N'Do not accept SVN changes', 'SCHEMA', N'dbo', 'TABLE', N'ServiceReferral', 'COLUMN', N'ServiceReferralPK'
+GO
diff --git a/Tables/dbo.TCID.sql b/Tables/dbo.TCID.sql
new file mode 100644
index 0000000..787b3e2
--- /dev/null
+++ b/Tables/dbo.TCID.sql
@@ -0,0 +1,140 @@
+CREATE TABLE [dbo].[TCID]
+(
+[TCIDPK] [int] NOT NULL IDENTITY(1, 1),
+[BirthTerm] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[BirthWtLbs] [int] NULL,
+[BirthWtOz] [int] NULL,
+[DeliveryType] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[Ethnicity] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FedBreastMilk] [bit] NULL,
+[FSWFK] [int] NOT NULL,
+[GestationalAge] [int] NULL,
+[HVCaseFK] [int] NOT NULL,
+[IntensiveCare] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MultipleBirth] [bit] NOT NULL,
+[NoImmunization] [bit] NULL,
+[NumberofChildren] [int] NOT NULL,
+[ProgramFK] [int] NOT NULL,
+[Race] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RaceSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SmokedPregnant] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[TCDOB] [datetime] NOT NULL,
+[TCDOD] [datetime] NULL,
+[TCFirstName] [varchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[TCGender] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[TCIDCreateDate] [datetime] NOT NULL CONSTRAINT [DF_TCID_TCIDCreateDate] DEFAULT (getdate()),
+[TCIDCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[TCIDEditDate] [datetime] NULL,
+[TCIDEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[TCIDFormCompleteDate] [datetime] NOT NULL,
+[TCIDPK_old] [int] NOT NULL,
+[TCLastName] [varchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[VaricellaZoster] [bit] NULL,
+[NoImmunizationsReason] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MIECHV_Race_AmericanIndian] [bit] NULL,
+[MIECHV_Race_Asian] [bit] NULL,
+[MIECHV_Race_Black] [bit] NULL,
+[MIECHV_Race_Hawaiian] [bit] NULL,
+[MIECHV_Race_White] [bit] NULL,
+[MIECHV_Hispanic] [nvarchar] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+Create TRIGGER [dbo].[fr_delete_tcid]
+on [dbo].[TCID]
+After DELETE
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT TCIDPK from deleted)
+
+BEGIN
+	EXEC spDeleteFormReview_Trigger @FormFK=@PK, @FormTypeValue='TC'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+CREATE TRIGGER [dbo].[fr_tcid]
+on [dbo].[TCID]
+After insert
+
+AS
+
+Declare @PK int
+
+set @PK = (SELECT TCIDPK from inserted)
+
+BEGIN
+	EXEC spAddFormReview_userTrigger @FormFK=@PK, @FormTypeValue='TC'
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- =============================================
+-- Author:		Chris Papas
+-- Create date: 08/18/2010
+-- Description:	Updates FormReview Table with form date on Supervisor Review of Form
+-- =============================================
+CREATE TRIGGER [dbo].[fr_TCID_Edit]
+on [dbo].[TCID]
+AFTER UPDATE
+
+AS
+
+Declare @PK int
+Declare @UpdatedFormDate datetime 
+Declare @FormTypeValue varchar(2)
+
+select @PK = TCIDPK   FROM inserted
+select @UpdatedFormDate = TCIDFormCompleteDate FROM inserted
+set @FormTypeValue = 'TC'
+
+BEGIN
+	UPDATE FormReview
+	SET 
+	FormDate=@UpdatedFormDate
+	WHERE FormFK=@PK 
+	AND FormType=@FormTypeValue
+
+END
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_TCIDEditDate ON TCID
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_TCIDEditDate] ON [dbo].[TCID]
+For Update 
+AS
+Update TCID Set TCID.TCIDEditDate= getdate()
+From [TCID] INNER JOIN Inserted ON [TCID].[TCIDPK]= Inserted.[TCIDPK]
+GO
+ALTER TABLE [dbo].[TCID] ADD CONSTRAINT [PK__TCID__05FAD12F00DF2177] PRIMARY KEY CLUSTERED  ([TCIDPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_TCID_HVCaseFK] ON [dbo].[TCID] ([HVCaseFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_TCID_HVCaseFK_TCDOB_TCFname_TCLName] ON [dbo].[TCID] ([HVCaseFK], [TCDOB], [TCFirstName], [TCLastName]) ON [PRIMARY]
+GO
+CREATE UNIQUE NONCLUSTERED INDEX [uix_HVCaseName] ON [dbo].[TCID] ([HVCaseFK], [TCFirstName], [TCLastName]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_TCID_TCDOB_TCFname_TCLName] ON [dbo].[TCID] ([TCDOB], [TCFirstName], [TCLastName]) ON [PRIMARY]
+GO
+CREATE STATISTICS [_dta_stat_197575742_10_21] ON [dbo].[TCID] ([HVCaseFK], [TCFirstName])
+GO
+CREATE STATISTICS [_dta_stat_197575742_21_29_10] ON [dbo].[TCID] ([TCFirstName], [TCLastName], [HVCaseFK])
+GO
+CREATE STATISTICS [_dta_stat_197575742_29_10] ON [dbo].[TCID] ([TCLastName], [HVCaseFK])
+GO
+ALTER TABLE [dbo].[TCID] WITH NOCHECK ADD CONSTRAINT [FK_TCID_HVCase] FOREIGN KEY ([HVCaseFK]) REFERENCES [dbo].[HVCase] ([HVCasePK])
+GO
diff --git a/Tables/dbo.Worker.sql b/Tables/dbo.Worker.sql
new file mode 100644
index 0000000..d1d5a6b
--- /dev/null
+++ b/Tables/dbo.Worker.sql
@@ -0,0 +1,65 @@
+CREATE TABLE [dbo].[Worker]
+(
+[WorkerPK] [int] NOT NULL IDENTITY(1, 1),
+[Apt] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ASQTrainingDate] [datetime] NULL,
+[CellPhone] [char] (12) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[Children] [bit] NULL,
+[City] [char] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[EducationLevel] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FAWCoreDate] [datetime] NULL,
+[FAWInitialStart] [datetime] NULL,
+[FirstName] [char] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[FSWCoreDate] [datetime] NULL,
+[FSWInitialStart] [datetime] NULL,
+[FTE] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FTEFullTime] [bit] NULL,
+[Gender] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[HomePhone] [char] (12) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[LanguageSpecify] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[LastName] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[OtherLanguage] [bit] NULL,
+[PreviousName] [char] (51) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[Race] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[RaceSpecify] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[State] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[Street] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[SupervisorCoreDate] [datetime] NULL,
+[SupervisorFirstEvent] [datetime] NULL,
+[SupervisorInitialStart] [datetime] NULL,
+[WorkerCreateDate] [datetime] NOT NULL CONSTRAINT [DF_Worker_WorkerCreateDate] DEFAULT (getdate()),
+[WorkerCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[WorkerDOB] [datetime] NULL,
+[WorkerEditDate] [datetime] NULL,
+[WorkerEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[WorkerPK_old] [int] NULL,
+[YoungestChild] [int] NULL,
+[Zip] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[LoginCreated] [bit] NOT NULL CONSTRAINT [DF_Worker_LoginCreated] DEFAULT ((0)),
+[YearsHVExperience] [int] NULL,
+[YearsEarlyChildhoodExperience] [int] NULL,
+[YearsChildAbuseClasses] [int] NULL,
+[SupervisionScheduledDay] [int] NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_WorkerEditDate ON Worker
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_WorkerEditDate] ON [dbo].[Worker]
+For Update 
+AS
+Update Worker Set Worker.WorkerEditDate= getdate()
+From [Worker] INNER JOIN Inserted ON [Worker].[WorkerPK]= Inserted.[WorkerPK]
+GO
+ALTER TABLE [dbo].[Worker] ADD CONSTRAINT [PK__Worker__077F67A4251C81ED] PRIMARY KEY CLUSTERED  ([WorkerPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_Worker_FirstName] ON [dbo].[Worker] ([FirstName]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_Worker_LastName] ON [dbo].[Worker] ([LastName]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_Worker_LastName_FirstName] ON [dbo].[Worker] ([LastName], [FirstName]) ON [PRIMARY]
+GO
diff --git a/Tables/dbo.WorkerAssignment.sql b/Tables/dbo.WorkerAssignment.sql
new file mode 100644
index 0000000..2c34251
--- /dev/null
+++ b/Tables/dbo.WorkerAssignment.sql
@@ -0,0 +1,48 @@
+CREATE TABLE [dbo].[WorkerAssignment]
+(
+[WorkerAssignmentPK] [int] NOT NULL IDENTITY(1, 1),
+[HVCaseFK] [int] NOT NULL,
+[ProgramFK] [int] NOT NULL,
+[WorkerAssignmentCreateDate] [datetime] NOT NULL CONSTRAINT [DF_WorkerAssignment_WorkerAssignmentCreateDate] DEFAULT (getdate()),
+[WorkerAssignmentCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[WorkerAssignmentDate] [datetime] NOT NULL,
+[WorkerAssignmentEditDate] [datetime] NULL,
+[WorkerAssignmentEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[WorkerFK] [int] NOT NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_WorkerAssignmentEditDate ON WorkerAssignment
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_WorkerAssignmentEditDate] ON [dbo].[WorkerAssignment]
+For Update 
+AS
+Update WorkerAssignment Set WorkerAssignment.WorkerAssignmentEditDate= getdate()
+From [WorkerAssignment] INNER JOIN Inserted ON [WorkerAssignment].[WorkerAssignmentPK]= Inserted.[WorkerAssignmentPK]
+GO
+ALTER TABLE [dbo].[WorkerAssignment] ADD CONSTRAINT [PK__WorkerAs__B02E01F929E1370A] PRIMARY KEY CLUSTERED  ([WorkerAssignmentPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_WorkerAssignment_HVCaseFK] ON [dbo].[WorkerAssignment] ([HVCaseFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_WorkerAssignment_HVCaseFK] ON [dbo].[WorkerAssignment] ([HVCaseFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_WorkerAssignment_ProgramFK] ON [dbo].[WorkerAssignment] ([ProgramFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_WorkerAssignment_ProgramFK] ON [dbo].[WorkerAssignment] ([ProgramFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_WorkerAssignment_WorkerFK] ON [dbo].[WorkerAssignment] ([WorkerFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_WorkerAssignment_WorkerFK] ON [dbo].[WorkerAssignment] ([WorkerFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[WorkerAssignment] WITH NOCHECK ADD CONSTRAINT [FK_WorkerAssignment_HVCaseFK] FOREIGN KEY ([HVCaseFK]) REFERENCES [dbo].[HVCase] ([HVCasePK])
+GO
+ALTER TABLE [dbo].[WorkerAssignment] WITH NOCHECK ADD CONSTRAINT [FK_WorkerAssignment_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
+ALTER TABLE [dbo].[WorkerAssignment] WITH NOCHECK ADD CONSTRAINT [FK_WorkerAssignment_WorkerFK] FOREIGN KEY ([WorkerFK]) REFERENCES [dbo].[Worker] ([WorkerPK])
+GO
+EXEC sp_addextendedproperty N'MS_Description', N'Do not accept SVN changes', 'SCHEMA', N'dbo', 'TABLE', N'WorkerAssignment', 'COLUMN', N'WorkerAssignmentPK'
+GO
diff --git a/Tables/dbo.WorkerProgram.sql b/Tables/dbo.WorkerProgram.sql
new file mode 100644
index 0000000..b9e63ee
--- /dev/null
+++ b/Tables/dbo.WorkerProgram.sql
@@ -0,0 +1,89 @@
+CREATE TABLE [dbo].[WorkerProgram]
+(
+[WorkerProgramPK] [int] NOT NULL IDENTITY(1, 1),
+[BackgroundCheckDate] [date] NULL,
+[CommunityOutreach] [bit] NULL,
+[DirectParticipantServices] [bit] NULL,
+[FatherAdvocate] [bit] NULL,
+[FatherAdvocateEndDate] [datetime] NULL,
+[FatherAdvocateStartDate] [datetime] NULL,
+[FAW] [bit] NULL,
+[FAWEndDate] [datetime] NULL,
+[FAWStartDate] [datetime] NULL,
+[FSW] [bit] NULL,
+[FSWEndDate] [datetime] NULL,
+[FSWStartDate] [datetime] NULL,
+[FundRaiser] [bit] NULL,
+[HireDate] [datetime] NOT NULL,
+[LivesTargetArea] [bit] NULL,
+[ProgramFK] [int] NOT NULL,
+[ProgramManager] [bit] NULL,
+[ProgramManagerEndDate] [datetime] NULL,
+[ProgramManagerStartDate] [datetime] NULL,
+[SiteFK] [int] NULL,
+[Supervisor] [bit] NULL,
+[SupervisorEndDate] [datetime] NULL,
+[SupervisorFK] [int] NULL,
+[SupervisorStartDate] [datetime] NULL,
+[TerminationDate] [datetime] NULL,
+[TerminationReasonRetired] [bit] NULL,
+[TerminationReasonForbetterJob] [bit] NULL,
+[TerminationReasonMoved] [bit] NULL,
+[TerminationReasonMoney] [bit] NULL,
+[TerminationReasonBaby] [bit] NULL,
+[TerminationReasonPromotion] [bit] NULL,
+[TerminationReasonDisability] [bit] NULL,
+[TerminationReasonNotGoodFit] [bit] NULL,
+[TerminationReasonIncarceration] [bit] NULL,
+[TerminationReasonInvoluntary] [bit] NULL,
+[TerminationReasonReassigned] [bit] NULL,
+[TerminationReasonLossFunding] [bit] NULL,
+[TerminationReasonBackToSchool] [bit] NULL,
+[TerminationReasonOther] [bit] NULL,
+[TerminationReasonOtherSpecify] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[WorkerFK] [int] NOT NULL,
+[WorkerNotes] [varchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[WorkerProgramCreateDate] [datetime] NOT NULL CONSTRAINT [DF_WorkerProgram_WorkerProgramCreateDate] DEFAULT (getdate()),
+[WorkerProgramCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[WorkerProgramEditDate] [datetime] NULL,
+[WorkerProgramEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[WorkPhone] [char] (12) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_WorkerProgramEditDate ON WorkerProgram
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_WorkerProgramEditDate] ON [dbo].[WorkerProgram]
+For Update 
+AS
+Update WorkerProgram Set WorkerProgram.WorkerProgramEditDate= getdate()
+From [WorkerProgram] INNER JOIN Inserted ON [WorkerProgram].[WorkerProgramPK]= Inserted.[WorkerProgramPK]
+GO
+ALTER TABLE [dbo].[WorkerProgram] ADD CONSTRAINT [PK__WorkerPr__61F2F2132EA5EC27] PRIMARY KEY CLUSTERED  ([WorkerProgramPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_WorkerProgram_ProgramFK] ON [dbo].[WorkerProgram] ([ProgramFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_WorkerProgram_ProgramFK] ON [dbo].[WorkerProgram] ([ProgramFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_WorkerProgram_SiteFK] ON [dbo].[WorkerProgram] ([SiteFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_WorkerProgram_SupervisorFK] ON [dbo].[WorkerProgram] ([SupervisorFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_WorkerProgram_WorkerFK] ON [dbo].[WorkerProgram] ([WorkerFK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_WorkerProgram] ON [dbo].[WorkerProgram] ([WorkerFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[WorkerProgram] WITH NOCHECK ADD CONSTRAINT [FK_WorkerProgram_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
+ALTER TABLE [dbo].[WorkerProgram] WITH NOCHECK ADD CONSTRAINT [FK_WorkerProgram_SiteFK] FOREIGN KEY ([SiteFK]) REFERENCES [dbo].[listSite] ([listSitePK])
+GO
+ALTER TABLE [dbo].[WorkerProgram] WITH NOCHECK ADD CONSTRAINT [FK_WorkerProgram_SupervisorFK] FOREIGN KEY ([SupervisorFK]) REFERENCES [dbo].[Worker] ([WorkerPK])
+GO
+ALTER TABLE [dbo].[WorkerProgram] WITH NOCHECK ADD CONSTRAINT [FK_WorkerProgram_WorkerFK] FOREIGN KEY ([WorkerFK]) REFERENCES [dbo].[Worker] ([WorkerPK])
+GO
+EXEC sp_addextendedproperty N'MS_Description', N'Do not accept SVN changes', 'SCHEMA', N'dbo', 'TABLE', N'WorkerProgram', 'COLUMN', N'WorkerProgramPK'
+GO
diff --git a/Tables/dbo.codeApp.sql b/Tables/dbo.codeApp.sql
new file mode 100644
index 0000000..7c37468
--- /dev/null
+++ b/Tables/dbo.codeApp.sql
@@ -0,0 +1,11 @@
+CREATE TABLE [dbo].[codeApp]
+(
+[codeAppPK] [int] NOT NULL IDENTITY(1, 1),
+[AppCode] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[AppCodeGroup] [char] (32) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[AppCodeText] [char] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[AppCodeUsedWhere] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
+) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[codeApp] ADD CONSTRAINT [PK__codeApp__6F38EFDF24927208] PRIMARY KEY CLUSTERED  ([codeAppPK]) ON [PRIMARY]
+GO
diff --git a/Tables/dbo.codeCounty.sql b/Tables/dbo.codeCounty.sql
new file mode 100644
index 0000000..1e95d53
--- /dev/null
+++ b/Tables/dbo.codeCounty.sql
@@ -0,0 +1,9 @@
+CREATE TABLE [dbo].[codeCounty]
+(
+[codeCountyPK] [int] NOT NULL IDENTITY(1, 1),
+[CountyCode] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[CountyName] [char] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL
+) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[codeCounty] ADD CONSTRAINT [PK__codeCoun__FC9855702C3393D0] PRIMARY KEY CLUSTERED  ([codeCountyPK]) ON [PRIMARY]
+GO
diff --git a/Tables/dbo.codeDischarge.sql b/Tables/dbo.codeDischarge.sql
new file mode 100644
index 0000000..30bc493
--- /dev/null
+++ b/Tables/dbo.codeDischarge.sql
@@ -0,0 +1,11 @@
+CREATE TABLE [dbo].[codeDischarge]
+(
+[codeDischargePK] [int] NOT NULL IDENTITY(1, 1),
+[DischargeCode] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[DischargeReason] [char] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[DischargeUsedWhere] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ReportDischargeText] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
+) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[codeDischarge] ADD CONSTRAINT [PK__codeDisc__63BD1262300424B4] PRIMARY KEY CLUSTERED  ([codeDischargePK]) ON [PRIMARY]
+GO
diff --git a/Tables/dbo.codeForm.sql b/Tables/dbo.codeForm.sql
new file mode 100644
index 0000000..d5a2f76
--- /dev/null
+++ b/Tables/dbo.codeForm.sql
@@ -0,0 +1,14 @@
+CREATE TABLE [dbo].[codeForm]
+(
+[codeFormPK] [int] NOT NULL IDENTITY(1, 1),
+[FormPKName] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[canBeReviewed] [bit] NULL,
+[codeFormAbbreviation] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[codeFormName] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[CreatorFieldName] [varchar] (40) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[FormDateName] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MainTableName] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
+) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[codeForm] ADD CONSTRAINT [PK__codeForm__C6B7B00D3B75D760] PRIMARY KEY CLUSTERED  ([codeFormPK]) ON [PRIMARY]
+GO
diff --git a/Tables/dbo.codeLevel.sql b/Tables/dbo.codeLevel.sql
new file mode 100644
index 0000000..068d744
--- /dev/null
+++ b/Tables/dbo.codeLevel.sql
@@ -0,0 +1,16 @@
+CREATE TABLE [dbo].[codeLevel]
+(
+[codeLevelPK] [int] NOT NULL IDENTITY(1, 1),
+[CaseWeight] [numeric] (4, 2) NOT NULL,
+[ConstantName] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[Enrolled] [bit] NULL,
+[LevelGroup] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[LevelName] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[MaximumVisit] [numeric] (4, 2) NULL,
+[MinimumVisit] [numeric] (4, 2) NULL,
+[SubLevelFK] [int] NULL,
+[LevelAbbr] [varchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
+) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[codeLevel] ADD CONSTRAINT [PK__codeLeve__7F907A764316F928] PRIMARY KEY CLUSTERED  ([codeLevelPK]) ON [PRIMARY]
+GO
diff --git a/Tables/dbo.listCaseFilterName.sql b/Tables/dbo.listCaseFilterName.sql
new file mode 100644
index 0000000..f19a577
--- /dev/null
+++ b/Tables/dbo.listCaseFilterName.sql
@@ -0,0 +1,18 @@
+CREATE TABLE [dbo].[listCaseFilterName]
+(
+[listCaseFilterNamePK] [int] NOT NULL IDENTITY(1, 1),
+[FieldTitle] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[FilterType] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[Hint] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ProgramFK] [int] NOT NULL,
+[Inactive] [bit] NULL
+) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[listCaseFilterName] ADD CONSTRAINT [PK__listCase__7B14331F2A164134] PRIMARY KEY CLUSTERED  ([listCaseFilterNamePK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_listCaseFilterName_ProgramFK] ON [dbo].[listCaseFilterName] ([ProgramFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[listCaseFilterName] WITH NOCHECK ADD CONSTRAINT [FK_listCaseFilterName_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
+EXEC sp_addextendedproperty N'MS_Description', N'Type of case filter; 1=On/Off, 2=Fixed Choices, 3=Free Form', 'SCHEMA', N'dbo', 'TABLE', N'listCaseFilterName', 'COLUMN', N'FilterType'
+GO
diff --git a/Tables/dbo.listCaseFilterNameOption.sql b/Tables/dbo.listCaseFilterNameOption.sql
new file mode 100644
index 0000000..b4bcea5
--- /dev/null
+++ b/Tables/dbo.listCaseFilterNameOption.sql
@@ -0,0 +1,14 @@
+CREATE TABLE [dbo].[listCaseFilterNameOption]
+(
+[listCaseFilterNameOptionPK] [int] NOT NULL IDENTITY(1, 1),
+[CaseFilterNameFK] [int] NOT NULL,
+[FilterOption] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[FilterOptionCode] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
+) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[listCaseFilterNameOption] ADD CONSTRAINT [PK_listCaseFilterNameOption] PRIMARY KEY CLUSTERED  ([listCaseFilterNameOptionPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_listCaseFilterNameOption_CaseFilterNameFK] ON [dbo].[listCaseFilterNameOption] ([CaseFilterNameFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[listCaseFilterNameOption] WITH NOCHECK ADD CONSTRAINT [FK_listCaseFilterNameOption_CaseFilterNameFK] FOREIGN KEY ([CaseFilterNameFK]) REFERENCES [dbo].[listCaseFilterName] ([listCaseFilterNamePK])
+GO
diff --git a/Tables/dbo.listMedicalFacility.sql b/Tables/dbo.listMedicalFacility.sql
new file mode 100644
index 0000000..272dae6
--- /dev/null
+++ b/Tables/dbo.listMedicalFacility.sql
@@ -0,0 +1,36 @@
+CREATE TABLE [dbo].[listMedicalFacility]
+(
+[listMedicalFacilityPK] [int] NOT NULL IDENTITY(1, 1),
+[MFAddress] [char] (40) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MFCity] [char] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MFCreateDate] [datetime] NOT NULL CONSTRAINT [DF_listMedicalFacility_MFCreateDate] DEFAULT (getdate()),
+[MFCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[MFEditDate] [datetime] NULL,
+[MFEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MFIsActive] [bit] NULL,
+[MFName] [char] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[MFPhone] [char] (12) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MFState] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MFZip] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ProgramFK] [int] NOT NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_MFEditDate ON listMedicalFacility
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_MFEditDate] ON [dbo].[listMedicalFacility]
+For Update 
+AS
+Update listMedicalFacility Set listMedicalFacility.MFEditDate= getdate()
+From [listMedicalFacility] INNER JOIN Inserted ON [listMedicalFacility].[listMedicalFacilityPK]= Inserted.[listMedicalFacilityPK]
+GO
+ALTER TABLE [dbo].[listMedicalFacility] ADD CONSTRAINT [PK__listMedi__3205CD4C2DE6D218] PRIMARY KEY CLUSTERED  ([listMedicalFacilityPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_listMedicalFacility_ProgramFK] ON [dbo].[listMedicalFacility] ([ProgramFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[listMedicalFacility] WITH NOCHECK ADD CONSTRAINT [FK_listMedicalFacility_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
diff --git a/Tables/dbo.listMedicalProvider.sql b/Tables/dbo.listMedicalProvider.sql
new file mode 100644
index 0000000..682efab
--- /dev/null
+++ b/Tables/dbo.listMedicalProvider.sql
@@ -0,0 +1,37 @@
+CREATE TABLE [dbo].[listMedicalProvider]
+(
+[listMedicalProviderPK] [int] NOT NULL IDENTITY(1, 1),
+[MedicalProviderCreateDate] [datetime] NOT NULL CONSTRAINT [DF_listMedicalProvider_MedicalProviderCreateDate] DEFAULT (getdate()),
+[MedicalProviderCreator] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[MedicalProviderEditDate] [datetime] NULL,
+[MedicalProviderEditor] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MPAddress] [char] (40) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MPCity] [char] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MPFirstName] [varchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MPIsActive] [bit] NOT NULL,
+[MPLastName] [varchar] (200) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MPPhone] [char] (12) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MPState] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[MPZip] [char] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[ProgramFK] [int] NOT NULL
+) ON [PRIMARY]
+GO
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+-- create trigger TR_MedicalProviderEditDate ON listMedicalProvider
+-- -- -- -- -- -- -- -- -- -- -- -- -- -- --
+CREATE TRIGGER [dbo].[TR_MedicalProviderEditDate] ON [dbo].[listMedicalProvider]
+For Update 
+AS
+Update listMedicalProvider Set listMedicalProvider.MedicalProviderEditDate= getdate()
+From [listMedicalProvider] INNER JOIN Inserted ON [listMedicalProvider].[listMedicalProviderPK]= Inserted.[listMedicalProviderPK]
+GO
+ALTER TABLE [dbo].[listMedicalProvider] ADD CONSTRAINT [PK__listMedi__EA77966F32AB8735] PRIMARY KEY CLUSTERED  ([listMedicalProviderPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_listMedicalProvider_ProgramFK] ON [dbo].[listMedicalProvider] ([ProgramFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[listMedicalProvider] WITH NOCHECK ADD CONSTRAINT [FK_listMedicalProvider_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
diff --git a/Tables/dbo.listServiceReferralAgency.sql b/Tables/dbo.listServiceReferralAgency.sql
new file mode 100644
index 0000000..08ccbb4
--- /dev/null
+++ b/Tables/dbo.listServiceReferralAgency.sql
@@ -0,0 +1,14 @@
+CREATE TABLE [dbo].[listServiceReferralAgency]
+(
+[listServiceReferralAgencyPK] [int] NOT NULL IDENTITY(1, 1),
+[AgencyIsActive] [bit] NOT NULL,
+[AgencyName] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[ProgramFK] [int] NOT NULL
+) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[listServiceReferralAgency] ADD CONSTRAINT [PK__listServ__2B4AD1FA3B40CD36] PRIMARY KEY CLUSTERED  ([listServiceReferralAgencyPK]) ON [PRIMARY]
+GO
+CREATE NONCLUSTERED INDEX [IX_FK_listServiceReferralAgency_ProgramFK] ON [dbo].[listServiceReferralAgency] ([ProgramFK]) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[listServiceReferralAgency] WITH NOCHECK ADD CONSTRAINT [FK_listServiceReferralAgency_ProgramFK] FOREIGN KEY ([ProgramFK]) REFERENCES [dbo].[HVProgram] ([HVProgramPK])
+GO
diff --git a/Tables/dbo.listSite.sql b/Tables/dbo.listSite.sql
new file mode 100644
index 0000000..7590c8e
--- /dev/null
+++ b/Tables/dbo.listSite.sql
@@ -0,0 +1,11 @@
+CREATE TABLE [dbo].[listSite]
+(
+[listSitePK] [int] NOT NULL IDENTITY(1, 1),
+[listSitePK_old] [int] NULL,
+[ProgramFK] [int] NOT NULL,
+[SiteCode] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
+[SiteName] [char] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL
+) ON [PRIMARY]
+GO
+ALTER TABLE [dbo].[listSite] ADD CONSTRAINT [PK__listSite__CA09CAD83F115E1A] PRIMARY KEY CLUSTERED  ([listSitePK]) ON [PRIMARY]
+GO
diff --git a/Views/dbo.HVLevelDetail.sql b/Views/dbo.HVLevelDetail.sql
new file mode 100644
index 0000000..1753721
--- /dev/null
+++ b/Views/dbo.HVLevelDetail.sql
@@ -0,0 +1,145 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+CREATE VIEW [dbo].[HVLevelDetail]
+AS
+SELECT     HVLevelPK, HVCaseFK, ProgramFK, LevelName, CaseWeight, MaximumVisit, MinimumVisit, LevelFK, StartLevelDate, ISNULL(EndLevel, DischargeDate) 
+                      AS EndLevelDate
+FROM         (SELECT     cp.DischargeDate, lv1.HVLevelPK, lv1.HVCaseFK, lv1.ProgramFK, dbo.codeLevel.LevelName, dbo.codeLevel.CaseWeight, dbo.codeLevel.MaximumVisit, 
+                                              dbo.codeLevel.MinimumVisit, lv1.LevelFK, lv1.LevelAssignDate AS StartLevelDate, DATEADD(day, - 1,
+                                                  (SELECT     TOP (1) LevelAssignDate
+                                                    FROM          dbo.HVLevel AS lv2
+                                                    WHERE      (LevelAssignDate > lv1.LevelAssignDate) AND (HVCaseFK = lv1.HVCaseFK)
+                                                    ORDER BY LevelAssignDate)) AS EndLevel
+                       FROM          dbo.HVLevel AS lv1 INNER JOIN
+                                              dbo.codeLevel ON dbo.codeLevel.codeLevelPK = lv1.LevelFK INNER JOIN
+                                              dbo.CaseProgram AS cp ON lv1.HVCaseFK = cp.HVCaseFK AND lv1.ProgramFK = cp.ProgramFK AND lv1.LevelAssignDate >= cp.CaseStartDate AND 
+                                              ISNULL(cp.DischargeDate, GETDATE()) >= lv1.LevelAssignDate) AS a
+GO
+EXEC sp_addextendedproperty N'MS_DiagramPane1', N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
+Begin DesignProperties = 
+   Begin PaneConfigurations = 
+      Begin PaneConfiguration = 0
+         NumPanes = 4
+         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
+      End
+      Begin PaneConfiguration = 1
+         NumPanes = 3
+         Configuration = "(H (1 [50] 4 [25] 3))"
+      End
+      Begin PaneConfiguration = 2
+         NumPanes = 3
+         Configuration = "(H (1 [50] 2 [25] 3))"
+      End
+      Begin PaneConfiguration = 3
+         NumPanes = 3
+         Configuration = "(H (4 [30] 2 [40] 3))"
+      End
+      Begin PaneConfiguration = 4
+         NumPanes = 2
+         Configuration = "(H (1 [56] 3))"
+      End
+      Begin PaneConfiguration = 5
+         NumPanes = 2
+         Configuration = "(H (2 [66] 3))"
+      End
+      Begin PaneConfiguration = 6
+         NumPanes = 2
+         Configuration = "(H (4 [50] 3))"
+      End
+      Begin PaneConfiguration = 7
+         NumPanes = 1
+         Configuration = "(V (3))"
+      End
+      Begin PaneConfiguration = 8
+         NumPanes = 3
+         Configuration = "(H (1[56] 4[18] 2) )"
+      End
+      Begin PaneConfiguration = 9
+         NumPanes = 2
+         Configuration = "(H (1 [75] 4))"
+      End
+      Begin PaneConfiguration = 10
+         NumPanes = 2
+         Configuration = "(H (1[66] 2) )"
+      End
+      Begin PaneConfiguration = 11
+         NumPanes = 2
+         Configuration = "(H (4 [60] 2))"
+      End
+      Begin PaneConfiguration = 12
+         NumPanes = 1
+         Configuration = "(H (1) )"
+      End
+      Begin PaneConfiguration = 13
+         NumPanes = 1
+         Configuration = "(V (4))"
+      End
+      Begin PaneConfiguration = 14
+         NumPanes = 1
+         Configuration = "(V (2))"
+      End
+      ActivePaneConfig = 0
+   End
+   Begin DiagramPane = 
+      Begin Origin = 
+         Top = 0
+         Left = 0
+      End
+      Begin Tables = 
+         Begin Table = "a"
+            Begin Extent = 
+               Top = 6
+               Left = 38
+               Bottom = 125
+               Right = 199
+            End
+            DisplayFlags = 280
+            TopColumn = 0
+         End
+      End
+   End
+   Begin SQLPane = 
+   End
+   Begin DataPane = 
+      Begin ParameterDefaults = ""
+      End
+      Begin ColumnWidths = 11
+         Width = 284
+         Width = 1500
+         Width = 1500
+         Width = 1500
+         Width = 1500
+         Width = 1500
+         Width = 1500
+         Width = 1500
+         Width = 1500
+         Width = 1500
+         Width = 1500
+      End
+   End
+   Begin CriteriaPane = 
+      Begin ColumnWidths = 11
+         Column = 1440
+         Alias = 900
+         Table = 1170
+         Output = 720
+         Append = 1400
+         NewValue = 1170
+         SortType = 1350
+         SortOrder = 1410
+         GroupBy = 1350
+         Filter = 1350
+         Or = 1350
+         Or = 1350
+         Or = 1350
+      End
+   End
+End
+', 'SCHEMA', N'dbo', 'VIEW', N'HVLevelDetail', NULL, NULL
+GO
+DECLARE @xp int
+SELECT @xp=1
+EXEC sp_addextendedproperty N'MS_DiagramPaneCount', @xp, 'SCHEMA', N'dbo', 'VIEW', N'HVLevelDetail', NULL, NULL
+GO
diff --git a/Views/dbo.WorkerAssignmentDetail.sql b/Views/dbo.WorkerAssignmentDetail.sql
new file mode 100644
index 0000000..3f207b5
--- /dev/null
+++ b/Views/dbo.WorkerAssignmentDetail.sql
@@ -0,0 +1,129 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+CREATE VIEW [dbo].[WorkerAssignmentDetail]
+AS
+SELECT     WorkerAssignmentPK, HVCaseFK, ProgramFK, StartAssignmentDate, WorkerFK, ISNULL(EndAssignment, DischargeDate) AS EndAssignmentDate
+FROM         (SELECT     cp.DischargeDate, wa1.WorkerAssignmentPK, wa1.HVCaseFK, wa1.ProgramFK, wa1.WorkerAssignmentDate AS StartAssignmentDate, wa1.WorkerFK, 
+                                              DATEADD(day, - 1,
+                                                  (SELECT     TOP (1) WorkerAssignmentDate
+                                                    FROM          dbo.WorkerAssignment AS wa2
+                                                    WHERE      (WorkerAssignmentDate > wa1.WorkerAssignmentDate) AND (HVCaseFK = wa1.HVCaseFK) AND (ProgramFK = wa1.ProgramFK)
+                                                    ORDER BY WorkerAssignmentDate)) AS EndAssignment
+                       FROM          dbo.WorkerAssignment AS wa1 INNER JOIN
+                                              dbo.CaseProgram AS cp ON wa1.HVCaseFK = cp.HVCaseFK AND wa1.ProgramFK = cp.ProgramFK) AS a
+GO
+EXEC sp_addextendedproperty N'MS_DiagramPane1', N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
+Begin DesignProperties = 
+   Begin PaneConfigurations = 
+      Begin PaneConfiguration = 0
+         NumPanes = 4
+         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
+      End
+      Begin PaneConfiguration = 1
+         NumPanes = 3
+         Configuration = "(H (1 [50] 4 [25] 3))"
+      End
+      Begin PaneConfiguration = 2
+         NumPanes = 3
+         Configuration = "(H (1 [50] 2 [25] 3))"
+      End
+      Begin PaneConfiguration = 3
+         NumPanes = 3
+         Configuration = "(H (4 [30] 2 [40] 3))"
+      End
+      Begin PaneConfiguration = 4
+         NumPanes = 2
+         Configuration = "(H (1 [56] 3))"
+      End
+      Begin PaneConfiguration = 5
+         NumPanes = 2
+         Configuration = "(H (2 [66] 3))"
+      End
+      Begin PaneConfiguration = 6
+         NumPanes = 2
+         Configuration = "(H (4 [50] 3))"
+      End
+      Begin PaneConfiguration = 7
+         NumPanes = 1
+         Configuration = "(V (3))"
+      End
+      Begin PaneConfiguration = 8
+         NumPanes = 3
+         Configuration = "(H (1[56] 4[18] 2) )"
+      End
+      Begin PaneConfiguration = 9
+         NumPanes = 2
+         Configuration = "(H (1 [75] 4))"
+      End
+      Begin PaneConfiguration = 10
+         NumPanes = 2
+         Configuration = "(H (1[66] 2) )"
+      End
+      Begin PaneConfiguration = 11
+         NumPanes = 2
+         Configuration = "(H (4 [60] 2))"
+      End
+      Begin PaneConfiguration = 12
+         NumPanes = 1
+         Configuration = "(H (1) )"
+      End
+      Begin PaneConfiguration = 13
+         NumPanes = 1
+         Configuration = "(V (4))"
+      End
+      Begin PaneConfiguration = 14
+         NumPanes = 1
+         Configuration = "(V (2))"
+      End
+      ActivePaneConfig = 0
+   End
+   Begin DiagramPane = 
+      Begin Origin = 
+         Top = 0
+         Left = 0
+      End
+      Begin Tables = 
+         Begin Table = "a"
+            Begin Extent = 
+               Top = 6
+               Left = 38
+               Bottom = 125
+               Right = 229
+            End
+            DisplayFlags = 280
+            TopColumn = 0
+         End
+      End
+   End
+   Begin SQLPane = 
+   End
+   Begin DataPane = 
+      Begin ParameterDefaults = ""
+      End
+   End
+   Begin CriteriaPane = 
+      Begin ColumnWidths = 11
+         Column = 1440
+         Alias = 900
+         Table = 1170
+         Output = 720
+         Append = 1400
+         NewValue = 1170
+         SortType = 1350
+         SortOrder = 1410
+         GroupBy = 1350
+         Filter = 1350
+         Or = 1350
+         Or = 1350
+         Or = 1350
+      End
+   End
+End
+', 'SCHEMA', N'dbo', 'VIEW', N'WorkerAssignmentDetail', NULL, NULL
+GO
+DECLARE @xp int
+SELECT @xp=1
+EXEC sp_addextendedproperty N'MS_DiagramPaneCount', @xp, 'SCHEMA', N'dbo', 'VIEW', N'WorkerAssignmentDetail', NULL, NULL
+GO
